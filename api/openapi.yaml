info:
  title: PaySuper payment solution service.
  version: "1.0.0"
  description: Swagger Specification for PaySuper Management API.
servers:
  - url: "https://api.pay.super.com"
    description: Production API
components:
  schemas:
    OnboardingFileData:
      type: object
      properties:
        url:
          description: "The URL for the printable agreement."
          type: string
        metadata:
          type: object
          properties:
            name:
              description: "The agreement's file name."
              type: string
            extension:
              description: "The agreement's file extension."
              type: string
            content_type:
              description: "The agreement's file content type."
              type: string
            size:
              description: "The agreement's file size in KB."
              type: integer
    PaylinksPaginate:
      type: object
      properties:
        count:
          description: "The total number of found paylinks."
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the payment link."
                type: string
              object:
                description: "The system constant that contains the returned object's type. Const value: paylink."
                type: string
              products:
                description: "The list of the payment link's products."
                type: array
                items:
                  type: string
              expires_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              updated_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              merchant_id:
                description: "The unique identifier for the merchant."
                type: string
              project_id:
                description: "The unique identifier for the project."
                type: string
              name:
                description: "The payment link's name."
                type: string
              is_expired:
                description: "Has a true value if the payment link has expired."
                type: boolean
              visits:
                description: "The total number of visits."
                type: integer
              no_expiry_date:
                description: "Has a true value if the payment link has no expiry date."
                type: boolean
              products_type:
                description: "The type of products. Available values: product, key."
                type: string
              total_transactions:
                description: "The total number of transactions."
                type: integer
              sales_count:
                description: "The total number of sales."
                type: integer
              returns_count:
                description: "The total number of returns."
                type: integer
              conversion:
                description: "The conversion - sales per visits relation."
                type: number
              gross_sales_amount:
                description: "The gross amount of sales."
                type: number
              gross_returns_amount:
                description: "The gross amount of returns."
                type: number
              gross_total_amount:
                description: "The gross revenue."
                type: number
              transactions_currency:
                description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
                type: string
    ListProductsResponse:
      type: object
      properties:
        limit:
          description: "The number of products returned in one page."
          type: integer
        offset:
          description: "The ranking number of the first item on the page."
          type: integer
        count:
          description: "The total number of found items."
          type: integer
        items:
          type: array
          items:
            required:
            - project_id
            - object
            - type
            - sku
            - default_currency
            - pricing
            - billing_type
            properties:
              id:
                description: "The unique identifier for the product."
                type: string
              project_id:
                description: "The unique identifier for the product's project."
                type: string
              object:
                description: "The system constant that contains the returned object's type. Const value: product."
                type: string
              type:
                description: "The product's type."
                type: string
              sku:
                description: "The SKU of the product."
                type: string
              default_currency:
                description: "The product's default currency."
                type: string
              enabled:
                description: "Has a true value if the product is enabled."
                type: boolean
              prices:
                type: array
                items:
                  properties:
                    amount:
                      description: "The product's price."
                      type: number
                    currency:
                      description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                      type: string
                    region:
                      description: "The product's price region."
                      type: string
                    is_virtual_currency:
                      description: "Has a true value if the product has the virtual currency."
                      type: boolean
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              updated_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              images:
                description: "The product's images URL list."
                type: array
                items:
                  type: string
              url:
                description: "The product's URL in the merchant project."
                type: string
              pricing:
                description: "The pricing mode. Available values: currency, manual, steam, default."
                type: string
              billing_type:
                description: "The billing type. Available values: real, virtual."
                type: string
    Product:
      type: object
      required:
      - project_id
      - object
      - type
      - sku
      - default_currency
      - pricing
      - billing_type
      properties:
        id:
          description: "The unique identifier for the product."
          type: string
        project_id:
          description: "The unique identifier for the product's project."
          type: string
        object:
          description: "The system constant that contains the returned object's type. Const value: product."
          type: string
        type:
          description: "The product's type."
          type: string
        sku:
          description: "The SKU of the product."
          type: string
        default_currency:
          description: "The product's default currency."
          type: string
        enabled:
          description: "Has a true value if the product is enabled."
          type: boolean
        prices:
          type: array
          items:
            properties:
              amount:
                description: "The product's price."
                type: number
              currency:
                description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              region:
                description: "The product's price region."
                type: string
              is_virtual_currency:
                description: "Has a true value if the product has the virtual currency."
                type: boolean
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        images:
          description: "The product's images URL list."
          type: array
          items:
            type: string
        url:
          description: "The product's URL in the merchant project."
          type: string
        pricing:
          description: "The pricing mode. Available values: currency, manual, steam, default."
          type: string
        billing_type:
          description: "The billing type. Available values: real, virtual."
          type: string
    ChangeProjectResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        item:
          type: object
          required:
          - merchant_id
          properties:
            id:
              description: "The unique identifier for the project."
              type: string
            merchant_id:
              description: "The unique identifier for the project's merchant."
              type: string
            callback_protocol:
              description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
              type: string
            limits_currency:
              description: "The currency of the limit amount."
              type: string
            min_payment_amount:
              description: "The minimum order amount."
              type: number
            max_payment_amount:
              description: "The maximum order amount."
              type: number
            notify_emails:
              description: "The list of emails to send notifications about successfully completed payment operations."
              type: array
              items:
                type: string
            is_products_checkout:
              description: "Has a true value if it's allowed to create the order only with amounts from the products' pricing list."
              type: boolean
            secret_key:
              description: "The secret key to create a checking hash. It's used in a request about the order status change."
              type: string
            signature_required:
              description: "Has a true value if it's required to have the secret key to check the notification request."
              type: boolean
            send_notify_email:
              description: "Has a true value if it's allowed to send notifications about successfully completed payment operations to user's emails."
              type: boolean
            url_check_account:
              description: "The default URL to send a request to the merchant project for the payment data verification."
              type: string
            url_process_payment:
              description: "The default URL to send a notification request to the merchant project about the successfully completed payment."
              type: string
            url_redirect_fail:
              description: "The default URL to redirect a customer after the failed payment."
              type: string
            url_redirect_success:
              description: "The default URL to redirect a customer after the successful payment."
              type: string
            status:
              description: "4 - the project is removed."
              type: integer
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            products_count:
              description: "The number of projects products."
              type: integer
            url_chargeback_payment:
              description: "The URL for the chargeback."
              type: string
            url_cancel_payment:
              description: "The URL for the payment cancellation."
              type: string
            url_fraud_payment:
              description: "The URL to redirect to in case of suspected fraud."
              type: string
            url_refund_payment:
              description: "The URL for the payment refund."
              type: string
            localizations:
              description: "The list of languages for the project's and its products descriptions localization."
              type: array
              items:
                type: string
            currencies:
              type: array
              items:
                properties:
                  currency:
                    description: "Three-letter currency code ISO 4217, in uppercase."
                    type: string
                  region:
                    description: "The region of the price."
                    type: string
            cover:
              type: object
              properties:
                images:
                  type: object
                  properties:
                    en:
                      description: "The URL for EN localization."
                      type: string
                    ru:
                      description: "The URL for RU localization."
                      type: string
                    es:
                      description: "The URL for ES localization."
                      type: string
                    de:
                      description: "The URL for DE localization."
                      type: string
                    zh:
                      description: "The URL for ZH localization."
                      type: string
                    fr:
                      description: "The URL for FR localization."
                      type: string
                    ar:
                      description: "The URL for AR localization."
                      type: string
                    pt:
                      description: "The URL for PT localization."
                      type: string
                    it:
                      description: "The URL for IT localization."
                      type: string
                    pl:
                      description: "The URL for PL localization."
                      type: string
                    el:
                      description: "The URL for EL localization."
                      type: string
                    ko:
                      description: "The URL for KO localization."
                      type: string
                    ja:
                      description: "The URL for JA localization."
                      type: string
                    vl:
                      description: "The URL for VL localization."
                      type: string
                    he:
                      description: "The URL for HE localization."
                      type: string
                    th:
                      description: "The URL for TH localization."
                      type: string
                    cs:
                      description: "The URL for CS localization."
                      type: string
                    bg:
                      description: "The URL for BG localization."
                      type: string
                    fi:
                      description: "The URL for FI localization."
                      type: string
                    sv:
                      description: "The URL for SV localization."
                      type: string
                    da:
                      description: "The URL for DA localization."
                      type: string
                    tr:
                      description: "The URL for TR localization."
                      type: string
                use_one_for_all:
                  description: "Has a true value if the single cover is used for all localizations."
                  type: boolean
            virtual_currency:
              type: object
              properties:
                logo:
                  description: "The logo URL for the virtual currency."
                  type: string
                prices:
                  type: array
                  items:
                    properties:
                      amount:
                        description: "The product's price."
                        type: number
                      currency:
                        description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                        type: string
                      region:
                        description: "The product's price region."
                        type: string
                      is_virtual_currency:
                        description: "Has a true value if the product has the virtual currency."
                        type: boolean
                min_purchase_value:
                  description: "The minimum limit of the virtual currency."
                  type: number
                max_purchase_value:
                  description: "The maximum limit of the virtual currency."
                  type: number
                sell_count_type:
                  description: "The number representation of the virtual currency amount. Available values: fractional (for example: 1,58), integral (1, 2, 5 etc)."
                  type: string
            vat_payer:
              description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
              type: string
            redirect_settings:
              type: object
              properties:
                mode:
                  description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                  type: string
                delay:
                  description: "The delay before the customer's redirection to the return URL. Default value is 0."
                  type: integer
                usage:
                  description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                  type: string
                button_caption:
                  description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                  type: string
            webhook_testing:
              type: object
              properties:
                products:
                  type: object
                  properties:
                    non_existing_user:
                      description: "Has a true value if the user does not exist in the storage."
                      type: boolean
                    existing_user:
                      description: "Has a true value if the user exists in the storage."
                      type: boolean
                    correct_payment:
                      description: "Has a true value if the payment correctly completed."
                      type: boolean
                    incorrect_payment:
                      description: "Has a true value if the payment not correctly completed."
                      type: boolean
                virtual_currency:
                  type: object
                  properties:
                    non_existing_user:
                      description: "Has a true value if the user does not exist in the storage."
                      type: boolean
                    existing_user:
                      description: "Has a true value if the user exists in the storage."
                      type: boolean
                    correct_payment:
                      description: "Has a true value if the payment correctly completed."
                      type: boolean
                    incorrect_payment:
                      description: "Has a true value if the payment not correctly completed."
                      type: boolean
                keys:
                  type: object
                  properties:
                    is_passed:
                      description: "Has a true value if the key has been passed."
                      type: boolean
            webhook_mode:
              description: "The webhooks mode. Available values: default, pre_approval."
              type: string
    DashboardMainReport:
      type: object
      properties:
        gross_revenue:
          type: object
          properties:
            amount_current:
              description: "The total amount calculated for the current report."
              type: number
            amount_previous:
              description: "The total amount calculated for the previous report."
              type: number
            currency:
              description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: number
        vat:
          type: object
          properties:
            amount_current:
              description: "The total amount calculated for the current report."
              type: number
            amount_previous:
              description: "The total amount calculated for the previous report."
              type: number
            currency:
              description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: number
        total_transactions:
          type: object
          properties:
            count_current:
              description: "The total amount calculated for the current report."
              type: integer
            count_previous:
              description: "The total amount calculated for the previous report."
              type: integer
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: number
        arpu:
          type: object
          properties:
            amount_current:
              description: "The total amount calculated for the current report."
              type: number
            amount_previous:
              description: "The total amount calculated for the previous report."
              type: number
            currency:
              description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: number
    Notification:
      type: object
      properties:
        id:
          description: "The unique identifier for the notification."
          type: string
        message:
          description: "The notification message."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant who is the recipient of the notification."
          type: string
        user_id:
          description: "The unique identifier for the user who is the sender of the notification."
          type: string
        is_system:
          description: "Has a true value if the notification is generated automatically."
          type: boolean
        is_read:
          description: "Has a true value if the recipient has read the notification."
          type: boolean
        statuses:
          type: object
          properties:
            from:
              description: "The before changes status."
              type: integer
            to:
              description: "The after changes status."
              type: integer
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
    GetMerchantTariffRatesResponseItems:
      type: object
      properties:
        payment:
          type: array
          items:
            properties:
              min_amount:
                description: "The minimum payment amount."
                type: number
              max_amount:
                description: "The maximum payment amount."
                type: number
              method_name:
                description: "The payment method's name."
                type: string
              method_percent_fee:
                description: "The fee of the payment method in per cent."
                type: number
              method_fixed_fee:
                description: "The fixed fee of the payment method in the particular currency."
                type: number
              method_fixed_fee_currency:
                description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              ps_percent_fee:
                description: "The PaySuper fee in per cent."
                type: number
              ps_fixed_fee:
                description: "The PaySuper fixed fee in a particular currency."
                type: number
              ps_fixed_fee_currency:
                description: "The currency of the PaySuper fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              merchant_home_region:
                description: "The merchant's home region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                type: string
              payer_region:
                description: "The payer's region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                type: string
              mcc_code:
                description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                type: string
              is_active:
                description: "Has a true value if the payment method is active."
                type: boolean
        chargeback:
          type: array
          items:
            properties:
              method_name:
                description: "The method's name."
                type: string
              method_percent_fee:
                description: "The fee of the method in per cent."
                type: number
              method_fixed_fee:
                description: "The fixed fee of the method in the particular currency."
                type: number
              method_fixed_fee_currency:
                description: "The currency of the fixed fee of the method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              is_paid_by_merchant:
                description: "Has a true value if the method is paid by the merchant."
                type: boolean
        mcc_code:
          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
          type: string
    FindByZipCodeResponse:
      type: object
      properties:
        count:
          description: "The total number of found cities."
          type: integer
        items:
          type: array
          items:
            properties:
              zip:
                description: "The postal code."
                type: string
              country:
                description: "The country's name."
                type: string
              city:
                description: "The city's name."
                type: string
              state:
                type: object
                properties:
                  code:
                    description: "The state's postal code."
                    type: string
                  name:
                    description: "The state's name."
                    type: string
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
    CheckSkuAndKeyProjectRequest:
      type: object
      properties:
        sku:
          description: "The SKU of the project's product."
          type: string
    TokenCreationResponse:
      type: object
      properties:
        token:
          description: "The secure string which contains encrypted information about your customer and sales option data."
          type: string
        payment_form_url:
          description: "The PaySuper-hosted URL of a payment form."
          type: string
    CommonUserProfile:
      type: object
      properties:
        profile:
          type: object
          properties:
            id:
              description: "The unique identifier for the PaySuper user."
              type: string
            email:
              type: object
              required:
              - email
              properties:
                email:
                  description: "The user's email address."
                  type: string
                confirmed:
                  description: "Whether the user's email address has been verified."
                  type: boolean
                confirmed_at:
                  type: object
                  properties:
                    seconds:
                      description: "9999-12-31T23:59:59Z inclusive."
                      type: integer
                    nanos:
                      description: "inclusive."
                      type: integer
            personal:
              type: object
              required:
              - first_name
              - last_name
              - position
              properties:
                first_name:
                  description: "The user's first name."
                  type: string
                last_name:
                  description: "The user's last name."
                  type: string
                position:
                  description: "The user's position in the company."
                  type: string
            help:
              type: object
              properties:
                product_promotion_and_development:
                  description: "Has a true value if the user needs help with product promotion and development."
                  type: boolean
                released_game_promotion:
                  description: "Has a true value if the user needs help with games promotion that have already been released."
                  type: boolean
                international_sales:
                  description: "Has a true value if the user needs help with international sales."
                  type: boolean
                other:
                  description: "Has a true value if the user needs help with other problems."
                  type: boolean
            company:
              type: object
              required:
              - company_name
              - website
              properties:
                company_name:
                  description: "The company's name."
                  type: string
                website:
                  description: "The company's website."
                  type: string
                annual_income:
                  type: object
                  properties:
                    from:
                      description: "The lower boundary value of the range."
                      type: integer
                    to:
                      description: "The upper boundary value of the range."
                      type: integer
                number_of_employees:
                  type: object
                  properties:
                    from:
                      description: "The lower boundary value of the range."
                      type: integer
                    to:
                      description: "The upper boundary value of the range."
                      type: integer
                kind_of_activity:
                  description: "The company's kind of activity. Available values: develop_and_publish_your_games, publish_games_of_other_companies, publish_your_games_through_other_publishers, other."
                  type: string
                monetization:
                  type: object
                  properties:
                    paid_subscription:
                      description: "Has a true value if the monetization strategy is buying the paid subscription by company's users."
                      type: boolean
                    in_game_advertising:
                      description: "Has a true value if the monetization strategy is buying the in-game advertising."
                      type: boolean
                    in_game_purchases:
                      description: "Has a true value if the monetization strategy is buying in-game purchases by company's users."
                      type: boolean
                    premium_access:
                      description: "Has a true value if the monetization strategy is buying the premium access by company's users."
                      type: boolean
                    other:
                      description: "Has a true value if the monetization has the other strategy."
                      type: boolean
                platforms:
                  type: object
                  properties:
                    pc_mac:
                      description: "Has a true value if the platform is PC/MacOs."
                      type: boolean
                    game_console:
                      description: "Has a true value if the platform is the game console."
                      type: boolean
                    mobile_device:
                      description: "Has a true value if the platform is the mobile device."
                      type: boolean
                    web_browser:
                      description: "Has a true value if the platform is the web browser."
                      type: boolean
                    other:
                      description: "Has a true value if the platform has the other value."
                      type: boolean
            last_step:
              description: "The identifier for the last step of the wizard that the user need to finish."
              type: string
            centrifugo_token:
              description: "The user authorisation token to connect to the Centrifugo channel."
              type: string
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
        role:
          type: object
          required:
          - id
          - merchant_id
          - role
          - user_id
          - first_name
          - last_name
          - email
          properties:
            id:
              description: "The unique identifier for the user's role."
              type: string
            merchant_id:
              description: "The unique identifier for the merchant (only for merchant users)."
              type: string
            role:
              description: "The user's role."
              type: string
            status:
              description: "The user's invitation status. Available values: invited, approved."
              type: string
            user_id:
              description: "The unique identifier for the user."
              type: string
            first_name:
              description: "The user's first name."
              type: string
            last_name:
              description: "The user's last name."
              type: string
            email:
              description: "The user's email address."
              type: string
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
        permissions:
          type: array
          items:
            properties:
              name:
                description: "The permission's name that stored in the Casbin server."
                type: string
              access:
                description: "The URL that is accessable by this permission."
                type: string
        merchant:
          type: object
          required:
          - payout_cost_currency
          - item_min_cost_currency
          properties:
            id:
              description: "The unique identifier for the merchant."
              type: string
            user:
              type: object
              required:
              - id
              - email
              properties:
                id:
                  description: "The unique identifier for the merchant user."
                  type: string
                email:
                  description: "The merchant's email address."
                  type: string
                first_name:
                  description: "The merchant's first name."
                  type: string
                last_name:
                  description: "The merchant's last name."
                  type: string
                profile_id:
                  description: "The primary onboarding profile identifier for the merchant."
                  type: string
                registration_date:
                  type: object
                  properties:
                    seconds:
                      description: "9999-12-31T23:59:59Z inclusive."
                      type: integer
                    nanos:
                      description: "inclusive."
                      type: integer
            company:
              type: object
              required:
              - name
              - alternative_name
              - website
              - country
              - zip
              - registration_number
              properties:
                name:
                  description: "The merchant's company name."
                  type: string
                alternative_name:
                  description: "The merchant's company alternative name."
                  type: string
                website:
                  description: "The merchant's company website."
                  type: string
                country:
                  description: "The merchant's company country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                state:
                  description: "The merchant's company state."
                  type: string
                zip:
                  description: "The merchant's company ZIP code."
                  type: string
                city:
                  description: "The merchant's company city."
                  type: string
                address:
                  description: "The merchant's company address."
                  type: string
                address_additional:
                  description: "The merchant's company additional address."
                  type: string
                registration_number:
                  description: "The merchant's company registration number."
                  type: string
                tax_id:
                  description: "The unique identifier for the merchant's company tax."
                  type: string
            contacts:
              type: object
              properties:
                authorized:
                  type: object
                  required:
                  - name
                  - email
                  - phone
                  properties:
                    name:
                      description: "The authorised person's full name."
                      type: string
                    email:
                      description: "The authorised person's email address."
                      type: string
                    phone:
                      description: "The authorised person's phone."
                      type: string
                    position:
                      description: "The authorised person's position in the company."
                      type: string
                technical:
                  type: object
                  required:
                  - name
                  - email
                  - phone
                  properties:
                    name:
                      description: "The technical person's full name."
                      type: string
                    email:
                      description: "The technical person's email address."
                      type: string
                    phone:
                      description: "The technical person's phone."
                      type: string
            banking:
              type: object
              required:
              - currency
              - name
              - address
              - account_number
              - swift
              properties:
                currency:
                  description: "The merchant's bank account currency."
                  type: string
                name:
                  description: "The merchant's bank name."
                  type: string
                address:
                  description: "The merchant's bank address."
                  type: string
                account_number:
                  description: "The merchant's bank account number."
                  type: string
                swift:
                  description: "The merchant's bank SWIFT code."
                  type: string
                details:
                  description: "Additional details about the merchant's bank account."
                  type: string
                correspondent_account:
                  description: "The bank correspondent account."
                  type: string
            status:
              description: "8 - The merchant has passed the onboarding and is waiting the agreement to be signed."
              type: integer
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            first_payment_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            has_merchant_signature:
              description: "Has a true value if the merchant has signed the license agreement."
              type: boolean
            has_psp_signature:
              description: "Has a true value if PaySuper has signed the license agreement."
              type: boolean
            last_payout:
              type: object
              properties:
                date:
                  type: object
                  properties:
                    seconds:
                      description: "9999-12-31T23:59:59Z inclusive."
                      type: integer
                    nanos:
                      description: "inclusive."
                      type: integer
                amount:
                  description: "The amount of the last payout to the merchant."
                  type: number
            is_signed:
              description: "Has a true value if the license agreement is completely signed."
              type: boolean
            agreement_type:
              description: "The type of the agreement selected by the merchant. Available values: 0 - not selected, 1 - paper agreement, 2 - e-sign agreement."
              type: integer
            agreement_sent_via_mail:
              description: "Has a true value if the license agreement is sent via post."
              type: boolean
            mail_tracking_link:
              description: "The post link to the tracking package with the license agreement."
              type: string
            payout_cost_amount:
              description: "The payout cost."
              type: number
            payout_cost_currency:
              description: "The currency of the payout cost."
              type: string
            min_payout_amount:
              description: "The minimum payout amount."
              type: number
            rolling_reserve_amount:
              description: "The rolling reserve threshold."
              type: number
            rolling_reserve_days:
              description: "The rolling reserve period."
              type: integer
            rolling_reserve_chargeback_transactions_threshold:
              description: "The rolling reserve threshold for the chargeback transactions."
              type: number
            item_min_cost_amount:
              description: "The minimum cost of the item."
              type: number
            item_min_cost_currency:
              description: "The currency of the minimum cost of the item."
              type: string
            centrifugo_token:
              description: "The merchant authorisation token to connect to the Centrifugo channel."
              type: string
            agreement_template:
              description: "The unique identifier for the template of the license agreement stored in HelloSign."
              type: string
            received_date:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            status_last_updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            has_projects:
              description: "Has a true value if the merchant has created projects."
              type: boolean
            agreement_number:
              description: "The license agreement number."
              type: string
            minimal_payout_limit:
              description: "The minimum payout limit."
              type: number
            tariff:
              type: object
              properties:
                home_region:
                  description: "The merchant's region name."
                  type: string
            manual_payouts_enabled:
              description: "Has a true value if the merchant can manually make a payout."
              type: boolean
            mcc_code:
              description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
              type: string
            operating_company_id:
              description: "The unique identifier for the operation company."
              type: string
            merchant_operations_type:
              description: "The merchant's operations type. Available values: low-risk, high-risk."
              type: string
            dont_charge_vat:
              description: "Has a true value if the merchant doesn't pay any taxes."
              type: boolean
    Project:
      type: object
      required:
      - merchant_id
      properties:
        id:
          description: "The unique identifier for the project."
          type: string
        merchant_id:
          description: "The unique identifier for the project's merchant."
          type: string
        callback_protocol:
          description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
          type: string
        limits_currency:
          description: "The currency of the limit amount."
          type: string
        min_payment_amount:
          description: "The minimum order amount."
          type: number
        max_payment_amount:
          description: "The maximum order amount."
          type: number
        notify_emails:
          description: "The list of emails to send notifications about successfully completed payment operations."
          type: array
          items:
            type: string
        is_products_checkout:
          description: "Has a true value if it's allowed to create the order only with amounts from the products' pricing list."
          type: boolean
        secret_key:
          description: "The secret key to create a checking hash. It's used in a request about the order status change."
          type: string
        signature_required:
          description: "Has a true value if it's required to have the secret key to check the notification request."
          type: boolean
        send_notify_email:
          description: "Has a true value if it's allowed to send notifications about successfully completed payment operations to user's emails."
          type: boolean
        url_check_account:
          description: "The default URL to send a request to the merchant project for the payment data verification."
          type: string
        url_process_payment:
          description: "The default URL to send a notification request to the merchant project about the successfully completed payment."
          type: string
        url_redirect_fail:
          description: "The default URL to redirect a customer after the failed payment."
          type: string
        url_redirect_success:
          description: "The default URL to redirect a customer after the successful payment."
          type: string
        status:
          description: "4 - the project is removed."
          type: integer
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        products_count:
          description: "The number of projects products."
          type: integer
        url_chargeback_payment:
          description: "The URL for the chargeback."
          type: string
        url_cancel_payment:
          description: "The URL for the payment cancellation."
          type: string
        url_fraud_payment:
          description: "The URL to redirect to in case of suspected fraud."
          type: string
        url_refund_payment:
          description: "The URL for the payment refund."
          type: string
        localizations:
          description: "The list of languages for the project's and its products descriptions localization."
          type: array
          items:
            type: string
        currencies:
          type: array
          items:
            properties:
              currency:
                description: "Three-letter currency code ISO 4217, in uppercase."
                type: string
              region:
                description: "The region of the price."
                type: string
        cover:
          type: object
          properties:
            images:
              type: object
              properties:
                en:
                  description: "The URL for EN localization."
                  type: string
                ru:
                  description: "The URL for RU localization."
                  type: string
                es:
                  description: "The URL for ES localization."
                  type: string
                de:
                  description: "The URL for DE localization."
                  type: string
                zh:
                  description: "The URL for ZH localization."
                  type: string
                fr:
                  description: "The URL for FR localization."
                  type: string
                ar:
                  description: "The URL for AR localization."
                  type: string
                pt:
                  description: "The URL for PT localization."
                  type: string
                it:
                  description: "The URL for IT localization."
                  type: string
                pl:
                  description: "The URL for PL localization."
                  type: string
                el:
                  description: "The URL for EL localization."
                  type: string
                ko:
                  description: "The URL for KO localization."
                  type: string
                ja:
                  description: "The URL for JA localization."
                  type: string
                vl:
                  description: "The URL for VL localization."
                  type: string
                he:
                  description: "The URL for HE localization."
                  type: string
                th:
                  description: "The URL for TH localization."
                  type: string
                cs:
                  description: "The URL for CS localization."
                  type: string
                bg:
                  description: "The URL for BG localization."
                  type: string
                fi:
                  description: "The URL for FI localization."
                  type: string
                sv:
                  description: "The URL for SV localization."
                  type: string
                da:
                  description: "The URL for DA localization."
                  type: string
                tr:
                  description: "The URL for TR localization."
                  type: string
            use_one_for_all:
              description: "Has a true value if the single cover is used for all localizations."
              type: boolean
        virtual_currency:
          type: object
          properties:
            logo:
              description: "The logo URL for the virtual currency."
              type: string
            prices:
              type: array
              items:
                properties:
                  amount:
                    description: "The product's price."
                    type: number
                  currency:
                    description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                    type: string
                  region:
                    description: "The product's price region."
                    type: string
                  is_virtual_currency:
                    description: "Has a true value if the product has the virtual currency."
                    type: boolean
            min_purchase_value:
              description: "The minimum limit of the virtual currency."
              type: number
            max_purchase_value:
              description: "The maximum limit of the virtual currency."
              type: number
            sell_count_type:
              description: "The number representation of the virtual currency amount. Available values: fractional (for example: 1,58), integral (1, 2, 5 etc)."
              type: string
        vat_payer:
          description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
          type: string
        redirect_settings:
          type: object
          properties:
            mode:
              description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
              type: string
            delay:
              description: "The delay before the customer's redirection to the return URL. Default value is 0."
              type: integer
            usage:
              description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
              type: string
            button_caption:
              description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
              type: string
        webhook_testing:
          type: object
          properties:
            products:
              type: object
              properties:
                non_existing_user:
                  description: "Has a true value if the user does not exist in the storage."
                  type: boolean
                existing_user:
                  description: "Has a true value if the user exists in the storage."
                  type: boolean
                correct_payment:
                  description: "Has a true value if the payment correctly completed."
                  type: boolean
                incorrect_payment:
                  description: "Has a true value if the payment not correctly completed."
                  type: boolean
            virtual_currency:
              type: object
              properties:
                non_existing_user:
                  description: "Has a true value if the user does not exist in the storage."
                  type: boolean
                existing_user:
                  description: "Has a true value if the user exists in the storage."
                  type: boolean
                correct_payment:
                  description: "Has a true value if the payment correctly completed."
                  type: boolean
                incorrect_payment:
                  description: "Has a true value if the payment not correctly completed."
                  type: boolean
            keys:
              type: object
              properties:
                is_passed:
                  description: "Has a true value if the key has been passed."
                  type: boolean
        webhook_mode:
          description: "The webhooks mode. Available values: default, pre_approval."
          type: string
    ListProjectsResponse:
      type: object
      properties:
        count:
          description: "The total number of found projects."
          type: integer
        items:
          type: array
          items:
            required:
            - merchant_id
            properties:
              id:
                description: "The unique identifier for the project."
                type: string
              merchant_id:
                description: "The unique identifier for the project's merchant."
                type: string
              callback_protocol:
                description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
                type: string
              limits_currency:
                description: "The currency of the limit amount."
                type: string
              min_payment_amount:
                description: "The minimum order amount."
                type: number
              max_payment_amount:
                description: "The maximum order amount."
                type: number
              notify_emails:
                description: "The list of emails to send notifications about successfully completed payment operations."
                type: array
                items:
                  type: string
              is_products_checkout:
                description: "Has a true value if it's allowed to create the order only with amounts from the products' pricing list."
                type: boolean
              secret_key:
                description: "The secret key to create a checking hash. It's used in a request about the order status change."
                type: string
              signature_required:
                description: "Has a true value if it's required to have the secret key to check the notification request."
                type: boolean
              send_notify_email:
                description: "Has a true value if it's allowed to send notifications about successfully completed payment operations to user's emails."
                type: boolean
              url_check_account:
                description: "The default URL to send a request to the merchant project for the payment data verification."
                type: string
              url_process_payment:
                description: "The default URL to send a notification request to the merchant project about the successfully completed payment."
                type: string
              url_redirect_fail:
                description: "The default URL to redirect a customer after the failed payment."
                type: string
              url_redirect_success:
                description: "The default URL to redirect a customer after the successful payment."
                type: string
              status:
                description: "4 - the project is removed."
                type: integer
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              updated_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              products_count:
                description: "The number of projects products."
                type: integer
              url_chargeback_payment:
                description: "The URL for the chargeback."
                type: string
              url_cancel_payment:
                description: "The URL for the payment cancellation."
                type: string
              url_fraud_payment:
                description: "The URL to redirect to in case of suspected fraud."
                type: string
              url_refund_payment:
                description: "The URL for the payment refund."
                type: string
              localizations:
                description: "The list of languages for the project's and its products descriptions localization."
                type: array
                items:
                  type: string
              currencies:
                type: array
                items:
                  properties:
                    currency:
                      description: "Three-letter currency code ISO 4217, in uppercase."
                      type: string
                    region:
                      description: "The region of the price."
                      type: string
              cover:
                type: object
                properties:
                  images:
                    type: object
                    properties:
                      en:
                        description: "The URL for EN localization."
                        type: string
                      ru:
                        description: "The URL for RU localization."
                        type: string
                      es:
                        description: "The URL for ES localization."
                        type: string
                      de:
                        description: "The URL for DE localization."
                        type: string
                      zh:
                        description: "The URL for ZH localization."
                        type: string
                      fr:
                        description: "The URL for FR localization."
                        type: string
                      ar:
                        description: "The URL for AR localization."
                        type: string
                      pt:
                        description: "The URL for PT localization."
                        type: string
                      it:
                        description: "The URL for IT localization."
                        type: string
                      pl:
                        description: "The URL for PL localization."
                        type: string
                      el:
                        description: "The URL for EL localization."
                        type: string
                      ko:
                        description: "The URL for KO localization."
                        type: string
                      ja:
                        description: "The URL for JA localization."
                        type: string
                      vl:
                        description: "The URL for VL localization."
                        type: string
                      he:
                        description: "The URL for HE localization."
                        type: string
                      th:
                        description: "The URL for TH localization."
                        type: string
                      cs:
                        description: "The URL for CS localization."
                        type: string
                      bg:
                        description: "The URL for BG localization."
                        type: string
                      fi:
                        description: "The URL for FI localization."
                        type: string
                      sv:
                        description: "The URL for SV localization."
                        type: string
                      da:
                        description: "The URL for DA localization."
                        type: string
                      tr:
                        description: "The URL for TR localization."
                        type: string
                  use_one_for_all:
                    description: "Has a true value if the single cover is used for all localizations."
                    type: boolean
              virtual_currency:
                type: object
                properties:
                  logo:
                    description: "The logo URL for the virtual currency."
                    type: string
                  prices:
                    type: array
                    items:
                      properties:
                        amount:
                          description: "The product's price."
                          type: number
                        currency:
                          description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                          type: string
                        region:
                          description: "The product's price region."
                          type: string
                        is_virtual_currency:
                          description: "Has a true value if the product has the virtual currency."
                          type: boolean
                  min_purchase_value:
                    description: "The minimum limit of the virtual currency."
                    type: number
                  max_purchase_value:
                    description: "The maximum limit of the virtual currency."
                    type: number
                  sell_count_type:
                    description: "The number representation of the virtual currency amount. Available values: fractional (for example: 1,58), integral (1, 2, 5 etc)."
                    type: string
              vat_payer:
                description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
                type: string
              redirect_settings:
                type: object
                properties:
                  mode:
                    description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                    type: string
                  delay:
                    description: "The delay before the customer's redirection to the return URL. Default value is 0."
                    type: integer
                  usage:
                    description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                    type: string
                  button_caption:
                    description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                    type: string
              webhook_testing:
                type: object
                properties:
                  products:
                    type: object
                    properties:
                      non_existing_user:
                        description: "Has a true value if the user does not exist in the storage."
                        type: boolean
                      existing_user:
                        description: "Has a true value if the user exists in the storage."
                        type: boolean
                      correct_payment:
                        description: "Has a true value if the payment correctly completed."
                        type: boolean
                      incorrect_payment:
                        description: "Has a true value if the payment not correctly completed."
                        type: boolean
                  virtual_currency:
                    type: object
                    properties:
                      non_existing_user:
                        description: "Has a true value if the user does not exist in the storage."
                        type: boolean
                      existing_user:
                        description: "Has a true value if the user exists in the storage."
                        type: boolean
                      correct_payment:
                        description: "Has a true value if the payment correctly completed."
                        type: boolean
                      incorrect_payment:
                        description: "Has a true value if the payment not correctly completed."
                        type: boolean
                  keys:
                    type: object
                    properties:
                      is_passed:
                        description: "Has a true value if the key has been passed."
                        type: boolean
              webhook_mode:
                description: "The webhooks mode. Available values: default, pre_approval."
                type: string
    GetMerchantsForUserResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        merchants:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the merchant."
                type: string
              name:
                description: "The merchant's name."
                type: string
              role:
                description: "The merchant's role."
                type: string
    CreatePageReviewRequest:
      type: object
      required:
      - review
      - url
      properties:
        review:
          description: "The feedback message."
          type: string
        url:
          description: "The feedback page URL."
          type: string
    SendWebhookToMerchantResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        order_id:
          description: "The unique identifier for the order."
          type: string
    Key:
      type: object
      properties:
        id:
          description: "The unique identifier for the key."
          type: string
        code:
          description: "The activation code."
          type: string
        key_product_id:
          description: "The unique identifier for the key's product."
          type: string
        platform_id:
          description: "The unique identifier for the platform."
          type: string
        order_id:
          description: "The unique identifier for the order when redeeming the code (can be empty)."
          type: string
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        reserved_to:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        redeemed_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
    GroupStatCommon:
      type: object
      properties:
        top:
          type: array
          items:
            properties:
              paylink_id:
                description: "The unique identifier for the payment link."
                type: string
              visits:
                description: "The total number of visits."
                type: integer
              total_transactions:
                description: "The total number of transactions."
                type: integer
              sales_count:
                description: "The total number of sales."
                type: integer
              returns_count:
                description: "The total number of returns."
                type: integer
              gross_sales_amount:
                description: "The gross amount of sales."
                type: number
              gross_returns_amount:
                description: "The gross amount of returns."
                type: number
              gross_total_amount:
                description: "The gross revenue."
                type: number
              transactions_currency:
                description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
                type: string
              conversion:
                description: "The conversion - sales per visits relation."
                type: number
              country_code:
                description: "Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                type: string
              date:
                description: "The date of the summary."
                type: string
              referrer_host:
                description: "The address of the webpage where the request originated."
                type: string
              utm:
                type: object
                properties:
                  utm_source:
                    description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
                    type: string
                  utm_medium:
                    description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
                    type: string
                  utm_campaign:
                    description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
                    type: string
        total:
          type: object
          properties:
            paylink_id:
              description: "The unique identifier for the payment link."
              type: string
            visits:
              description: "The total number of visits."
              type: integer
            total_transactions:
              description: "The total number of transactions."
              type: integer
            sales_count:
              description: "The total number of sales."
              type: integer
            returns_count:
              description: "The total number of returns."
              type: integer
            gross_sales_amount:
              description: "The gross amount of sales."
              type: number
            gross_returns_amount:
              description: "The gross amount of returns."
              type: number
            gross_total_amount:
              description: "The gross revenue."
              type: number
            transactions_currency:
              description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
            conversion:
              description: "The conversion - sales per visits relation."
              type: number
            country_code:
              description: "Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
              type: string
            date:
              description: "The date of the summary."
              type: string
            referrer_host:
              description: "The address of the webpage where the request originated."
              type: string
            utm:
              type: object
              properties:
                utm_source:
                  description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
                  type: string
                utm_medium:
                  description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
                  type: string
                utm_campaign:
                  description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
                  type: string
    GetProductResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        item:
          type: object
          required:
          - project_id
          - object
          - type
          - sku
          - default_currency
          - pricing
          - billing_type
          properties:
            id:
              description: "The unique identifier for the product."
              type: string
            project_id:
              description: "The unique identifier for the product's project."
              type: string
            object:
              description: "The system constant that contains the returned object's type. Const value: product."
              type: string
            type:
              description: "The product's type."
              type: string
            sku:
              description: "The SKU of the product."
              type: string
            default_currency:
              description: "The product's default currency."
              type: string
            enabled:
              description: "Has a true value if the product is enabled."
              type: boolean
            prices:
              type: array
              items:
                properties:
                  amount:
                    description: "The product's price."
                    type: number
                  currency:
                    description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                    type: string
                  region:
                    description: "The product's price region."
                    type: string
                  is_virtual_currency:
                    description: "Has a true value if the product has the virtual currency."
                    type: boolean
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            images:
              description: "The product's images URL list."
              type: array
              items:
                type: string
            url:
              description: "The product's URL in the merchant project."
              type: string
            pricing:
              description: "The pricing mode. Available values: currency, manual, steam, default."
              type: string
            billing_type:
              description: "The billing type. Available values: real, virtual."
              type: string
    PriceGroupCurrenciesResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            properties:
              currency:
                description: "The region's currency."
                type: string
              regions:
                type: array
                items:
                  properties:
                    region:
                      description: "The region's name."
                      type: string
                    country:
                      description: "The country's name."
                      type: array
                      items:
                        type: string
    CheckInviteTokenRequest:
      type: object
      required:
      - token
      - email
      properties:
        token:
          description: "The invitation token."
          type: string
        email:
          description: "The user's email address."
          type: string
    Notifications:
      type: object
      properties:
        count:
          description: "The total number of found notifications."
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the notification."
                type: string
              message:
                description: "The notification message."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant who is the recipient of the notification."
                type: string
              user_id:
                description: "The unique identifier for the user who is the sender of the notification."
                type: string
              is_system:
                description: "Has a true value if the notification is generated automatically."
                type: boolean
              is_read:
                description: "Has a true value if the recipient has read the notification."
                type: boolean
              statuses:
                type: object
                properties:
                  from:
                    description: "The before changes status."
                    type: integer
                  to:
                    description: "The after changes status."
                    type: integer
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              updated_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
    MerchantBanking:
      type: object
      required:
      - currency
      - name
      - address
      - account_number
      - swift
      properties:
        currency:
          description: "The merchant's bank account currency."
          type: string
        name:
          description: "The merchant's bank name."
          type: string
        address:
          description: "The merchant's bank address."
          type: string
        account_number:
          description: "The merchant's bank account number."
          type: string
        swift:
          description: "The merchant's bank SWIFT code."
          type: string
        details:
          description: "Additional details about the merchant's bank account."
          type: string
        correspondent_account:
          description: "The bank correspondent account."
          type: string
    Paylink:
      type: object
      properties:
        id:
          description: "The unique identifier for the payment link."
          type: string
        object:
          description: "The system constant that contains the returned object's type. Const value: paylink."
          type: string
        products:
          description: "The list of the payment link's products."
          type: array
          items:
            type: string
        expires_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        project_id:
          description: "The unique identifier for the project."
          type: string
        name:
          description: "The payment link's name."
          type: string
        is_expired:
          description: "Has a true value if the payment link has expired."
          type: boolean
        visits:
          description: "The total number of visits."
          type: integer
        no_expiry_date:
          description: "Has a true value if the payment link has no expiry date."
          type: boolean
        products_type:
          description: "The type of products. Available values: product, key."
          type: string
        total_transactions:
          description: "The total number of transactions."
          type: integer
        sales_count:
          description: "The total number of sales."
          type: integer
        returns_count:
          description: "The total number of returns."
          type: integer
        conversion:
          description: "The conversion - sales per visits relation."
          type: number
        gross_sales_amount:
          description: "The gross amount of sales."
          type: number
        gross_returns_amount:
          description: "The gross amount of returns."
          type: number
        gross_total_amount:
          description: "The gross revenue."
          type: number
        transactions_currency:
          description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
          type: string
    TokenRequest:
      type: object
      properties:
        user:
          type: object
          required:
          - id
          properties:
            id:
              description: "The unique identifier for the customer in the merchant project."
              type: string
            email:
              type: object
              properties:
                value:
                  description: "The customer’s email address."
                  type: string
                verified:
                  description: "Whether the email has been verified on the merchant side."
                  type: boolean
            phone:
              type: object
              properties:
                value:
                  description: "The customer’s phone."
                  type: string
                verified:
                  description: "Whether the phone has been verified on the merchant side."
                  type: boolean
            name:
              type: object
              properties:
                value:
                  description: "The customer’s name."
                  type: string
            ip:
              type: object
              properties:
                value:
                  description: "The customer’s IP address."
                  type: string
            locale:
              type: object
              properties:
                value:
                  description: "The customer’s locale name. The Accept-Language format by RFC 7231."
                  type: string
            address:
              type: object
              properties:
                country:
                  description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                city:
                  description: "The customer’s city."
                  type: string
                postal_code:
                  description: "The customer's postal code."
                  type: string
                state:
                  description: "The customer's state code in ISO 3166-2."
                  type: string
        settings:
          type: object
          required:
          - project_id
          - type
          properties:
            project_id:
              description: "The unique identifier for the Project found in the merchant account in the PaySuper Dashboard."
              type: string
            return_url:
              type: object
              properties:
                success:
                  description: "The redirect URL for a successful payment."
                  type: string
                fail:
                  description: "The redirect URL for a failed payment."
                  type: string
            currency:
              description: "The order currency. Three-letter Currency Code ISO 4217, in uppercase. It's required for a simple checkout payment."
              type: string
            amount:
              description: "The order amount. It's required for a simple checkout payment."
              type: number
            description:
              description: "An arbitrary order description."
              type: string
            products_ids:
              description: "A list of unique identifiers for Project's products. It's required if a payment type equals to ‘product’ or ‘key’."
              type: array
              items:
                type: string
            platform_id:
              description: "The default platform's name for which the customer buys a key. This field is used only for the key type. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
              type: string
            type:
              description: "The order type. It depends on your sales option: Game Keys, Virtual Items, Virtual Currency, Simple Checkout. Available values: key, product, virtual_currency, simple."
              type: string
            is_buy_for_virtual_currency:
              description: "Has a true value if an order must be processed using a virtual currency."
              type: boolean
            button_caption:
              description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
              type: string
    UserProfile:
      type: object
      properties:
        id:
          description: "The unique identifier for the PaySuper user."
          type: string
        email:
          type: object
          required:
          - email
          properties:
            email:
              description: "The user's email address."
              type: string
            confirmed:
              description: "Whether the user's email address has been verified."
              type: boolean
            confirmed_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
        personal:
          type: object
          required:
          - first_name
          - last_name
          - position
          properties:
            first_name:
              description: "The user's first name."
              type: string
            last_name:
              description: "The user's last name."
              type: string
            position:
              description: "The user's position in the company."
              type: string
        help:
          type: object
          properties:
            product_promotion_and_development:
              description: "Has a true value if the user needs help with product promotion and development."
              type: boolean
            released_game_promotion:
              description: "Has a true value if the user needs help with games promotion that have already been released."
              type: boolean
            international_sales:
              description: "Has a true value if the user needs help with international sales."
              type: boolean
            other:
              description: "Has a true value if the user needs help with other problems."
              type: boolean
        company:
          type: object
          required:
          - company_name
          - website
          properties:
            company_name:
              description: "The company's name."
              type: string
            website:
              description: "The company's website."
              type: string
            annual_income:
              type: object
              properties:
                from:
                  description: "The lower boundary value of the range."
                  type: integer
                to:
                  description: "The upper boundary value of the range."
                  type: integer
            number_of_employees:
              type: object
              properties:
                from:
                  description: "The lower boundary value of the range."
                  type: integer
                to:
                  description: "The upper boundary value of the range."
                  type: integer
            kind_of_activity:
              description: "The company's kind of activity. Available values: develop_and_publish_your_games, publish_games_of_other_companies, publish_your_games_through_other_publishers, other."
              type: string
            monetization:
              type: object
              properties:
                paid_subscription:
                  description: "Has a true value if the monetization strategy is buying the paid subscription by company's users."
                  type: boolean
                in_game_advertising:
                  description: "Has a true value if the monetization strategy is buying the in-game advertising."
                  type: boolean
                in_game_purchases:
                  description: "Has a true value if the monetization strategy is buying in-game purchases by company's users."
                  type: boolean
                premium_access:
                  description: "Has a true value if the monetization strategy is buying the premium access by company's users."
                  type: boolean
                other:
                  description: "Has a true value if the monetization has the other strategy."
                  type: boolean
            platforms:
              type: object
              properties:
                pc_mac:
                  description: "Has a true value if the platform is PC/MacOs."
                  type: boolean
                game_console:
                  description: "Has a true value if the platform is the game console."
                  type: boolean
                mobile_device:
                  description: "Has a true value if the platform is the mobile device."
                  type: boolean
                web_browser:
                  description: "Has a true value if the platform is the web browser."
                  type: boolean
                other:
                  description: "Has a true value if the platform has the other value."
                  type: boolean
        last_step:
          description: "The identifier for the last step of the wizard that the user need to finish."
          type: string
        centrifugo_token:
          description: "The user authorisation token to connect to the Centrifugo channel."
          type: string
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
    OrderCreateRequest:
      type: object
      required:
      - project
      - type
      properties:
        project:
          description: "The unique identifier for the Project found in the merchant account in the PaySuper Dashboard."
          type: string
        amount:
          description: "The order amount as a positive number. It is required for a simple checkout payment."
          type: number
        currency:
          description: "The currency of the order. Three-letter Currency Code ISO 4217, in uppercase. If provided, the amount will be processed in this currency. It is required for a payment when the type equals to simple."
          type: string
        account:
          description: "The customer account in the merchant project."
          type: string
        order_id:
          description: "The unique identifier for the order in the merchant project. This field is not required, but we recommend always sending this field."
          type: string
        description:
          description: "The arbitrary order description."
          type: string
        url_success:
          description: "The redirect URL for the successful payment. You need to enable the dynamic notify URLs option in the Project Settings to use this field."
          type: string
        url_fail:
          description: "The redirect URL for the failed payment. You need to enable the dynamic notify URLs option in the Project Settings to use this field."
          type: string
        products:
          description: "The list of unique identifiers of Products being in the Project. It is required if a payment type is equal to product or key."
          type: array
          items:
            type: string
        token:
          description: "An encrypted string that represents certain details of your customer (such as the customer ID, email and others), a game and purchase parameters. The token overrides the corresponding parameters (including required parameters) in an order object."
          type: string
        user:
          type: object
          properties:
            external_id:
              description: "The unique identifier for the customer in the merchant project."
              type: string
            name:
              description: "The customer's name."
              type: string
            email:
              description: "The customer's email address."
              type: string
            email_verified:
              description: "Whether the customer's email address has been verified on the merchant side."
              type: boolean
            phone:
              description: "The customer's phone number."
              type: string
            phone_verified:
              description: "Whether the customer's phone number has been verified on the merchant side."
              type: boolean
            ip:
              description: "The customer's IP address."
              type: string
            locale:
              description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
              type: string
            address:
              type: object
              properties:
                country:
                  description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                city:
                  description: "The customer’s city."
                  type: string
                postal_code:
                  description: "The customer's postal code."
                  type: string
                state:
                  description: "The customer's state code in ISO 3166-2."
                  type: string
        order:
          description: "The PaySuper unique identifier for the order."
          type: string
        type:
          description: "The order type. It depends on your sales option (Game Keys, Virtual Items, Virtual Currency the simple checkout). For products created as Game Keys use the key type, as Virtual Items - the product type, as Virtual Currency - the virtual_currency type, for a simple checkout - the simple type. Enum values: key, product, virtual_currency, simple."
          type: string
        platform_id:
          description: "The default platform's name for which the customer buys a key. This field is used only for the key type. Enum values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
          type: string
        testing_case:
          description: "The webhook testing mode. Available values: correct_payment, non_existing_user, existing_user, invalid_signature."
          type: string
    ConfirmUserEmailRequest:
      type: object
      required:
      - token
      properties:
        token:
          description: "An encripted string to confirm the user registration."
          type: string
    DashboardBaseReports:
      type: object
      properties:
        revenue_by_country:
          type: object
          properties:
            currency:
              description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            top:
              type: array
              items:
                properties:
                  country:
                    description: "The country's name."
                    type: string
                  amount:
                    description: "The revenue amount for this country."
                    type: number
            total_current:
              description: "The total revenue amount for the specified period."
              type: number
            total_previous:
              description: "The total revenue amount for the previous period."
              type: number
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  amount:
                    description: "The amount by country."
                    type: number
        sales_today:
          type: object
          properties:
            top:
              type: array
              items:
                properties:
                  name:
                    description: "The sold product's name."
                    type: string
                  count:
                    description: "The total number of products which were sold for the specified period."
                    type: integer
            total_current:
              description: "The total number of products which were sold for the specified period."
              type: integer
            total_previous:
              description: "The total number of products which were sold for the previous period."
              type: integer
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: integer
        sources:
          type: object
          properties:
            top:
              type: array
              items:
                properties:
                  name:
                    description: "The sold product's name."
                    type: string
                  count:
                    description: "The total number of products which were sold for the specified period."
                    type: integer
            total_current:
              description: "The total number of transactions for the specified period."
              type: integer
            total_previous:
              description: "The total number of transactions for the previous period."
              type: integer
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: integer
    GetMerchantOnboardingCompleteDataResponseItem:
      type: object
      properties:
        status:
          description: "The filling out status. Available values: draft, life."
          type: string
        steps:
          type: object
          properties:
            company:
              description: "Has a true value if the company data is filled out."
              type: boolean
            contacts:
              description: "Has a true value if the contacts data is filled out."
              type: boolean
            banking:
              description: "Has a true value if the banking data is filled out."
              type: boolean
            tariff:
              description: "Has a true value if the tariff data is filled out."
              type: boolean
        complete_steps_count:
          description: "The number of steps completed."
          type: integer
    TransactionsPaginate:
      type: object
      properties:
        count:
          description: "The total number of found transactions."
          type: integer
        items:
          type: array
          items:
            properties:
              uuid:
                description: "The unique identifier for the order."
                type: string
              total_payment_amount:
                description: "The total payment amount."
                type: number
              currency:
                description: "The currency of the payment. Three-letter currency code ISO 4217, in uppercase."
                type: string
              project:
                type: object
                properties:
                  id:
                    description: "The unique identifier for the project."
                    type: string
                  merchant_id:
                    description: "The unique identifier for the merchant."
                    type: string
                  url_success:
                    description: "The redirect URL for the successful payment. You need to enable the dynamic notify URLs option in the Project Settings to use this field."
                    type: string
                  url_fail:
                    description: "The redirect URL for the failed payment. You need to enable the dynamic notify URLs option in the Project Settings to use this field."
                    type: string
                  notify_emails:
                    description: "The list of emails to send notifications about successfully completed payment operations."
                    type: array
                    items:
                      type: string
                  secret_key:
                    description: "The secret key to create a checking hash. It's used in a request about the order status change."
                    type: string
                  send_notify_email:
                    description: "Has a true value if it's allowed to send notifications about successfully completed payment operations to user's emails."
                    type: boolean
                  url_check_account:
                    description: "The default URL to send a request to the merchant project for the payment data verification."
                    type: string
                  url_process_payment:
                    description: "The default URL to send a notification request to the merchant project about the successfully completed payment."
                    type: string
                  callback_protocol:
                    description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
                    type: string
                  url_chargeback_payment:
                    description: "The URL for the chargeback."
                    type: string
                  url_cancel_payment:
                    description: "The URL for the payment cancellation."
                    type: string
                  url_fraud_payment:
                    description: "The URL to redirect to in case of suspected fraud."
                    type: string
                  url_refund_payment:
                    description: "The URL for the payment refund."
                    type: string
                  status:
                    description: "4 - the project is removed."
                    type: integer
                  redirect_settings:
                    type: object
                    properties:
                      mode:
                        description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                        type: string
                      delay:
                        description: "The delay before the customer's redirection to the return URL. Default value is 0."
                        type: integer
                      usage:
                        description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                        type: string
                      button_caption:
                        description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                        type: string
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              transaction:
                description: "The unique identifier for the order in the payment system."
                type: string
              payment_method:
                type: object
                properties:
                  title:
                    description: "The payment method's name."
                    type: string
                  external_id:
                    description: "The unique identifier for the payment method in the payment system."
                    type: string
                  payment_system_id:
                    description: "The unique identifier for the payment method in PaySuper."
                    type: string
                  type:
                    description: "The payment method's group alias."
                    type: string
                  saved:
                    description: "Has a true value if contains a saved card as a payment method."
                    type: boolean
                  card:
                    type: object
                    properties:
                      first6:
                        description: "The first 6 digits of the card number."
                        type: string
                      last4:
                        description: "The last 4 digits of the card number."
                        type: string
                      masked:
                        description: "The mask for a customer’s card number."
                        type: string
                      expiry_month:
                        description: "The validity month of the card."
                        type: string
                      expiry_year:
                        description: "The validity year of the card."
                        type: string
                      brand:
                        description: "The brand of the card issuer."
                        type: string
                      fingerprint:
                        description: "The internal fingerprint for given card."
                        type: string
                      secure3d:
                        description: "Has a true value if 3D-secure is used for the payment."
                        type: boolean
                  wallet:
                    type: object
                    properties:
                      brand:
                        description: "The name of the wallet."
                        type: string
                      account:
                        description: "The customer identity in the wallet."
                        type: string
                  crypto_currency:
                    type: object
                    properties:
                      brand:
                        description: "The name of the crypto currency."
                        type: string
                      address:
                        description: "The customer’s address in the crypto currency."
                        type: string
                  handler:
                    description: "The internal unique identifier for the payment method in PaySuper."
                    type: string
                  refund_allowed:
                    description: "Has a true value if the payment method allows a refund."
                    type: boolean
              country_code:
                description: "Two-letter country code by ISO 3166-1, in uppercase."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant."
                type: string
              locale:
                description: "The customer’s locale name. Four-letter language code by ISO 639, for instance en-US."
                type: string
              status:
                description: "The current status of the order."
                type: string
              transaction_date:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              user:
                type: object
                properties:
                  external_id:
                    description: "The unique identifier for the customer in the merchant project."
                    type: string
                  name:
                    description: "The customer's name."
                    type: string
                  email:
                    description: "The customer's email address."
                    type: string
                  email_verified:
                    description: "Whether the customer's email address has been verified on the merchant side."
                    type: boolean
                  phone:
                    description: "The customer's phone number."
                    type: string
                  phone_verified:
                    description: "Whether the customer's phone number has been verified on the merchant side."
                    type: boolean
                  ip:
                    description: "The customer's IP address."
                    type: string
                  locale:
                    description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
                    type: string
                  address:
                    type: object
                    properties:
                      country:
                        description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                        type: string
                      city:
                        description: "The customer’s city."
                        type: string
                      postal_code:
                        description: "The customer's postal code."
                        type: string
                      state:
                        description: "The customer's state code in ISO 3166-2."
                        type: string
              billing_address:
                type: object
                properties:
                  country:
                    description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                    type: string
                  city:
                    description: "The customer’s city."
                    type: string
                  postal_code:
                    description: "The customer's postal code."
                    type: string
                  state:
                    description: "The customer's state code in ISO 3166-2."
                    type: string
              type:
                description: "The order type. It depends on your sales option (Game Keys, Virtual Items, Virtual Currency, the simple checkout). Available values: key, product, simple."
                type: string
              is_vat_deduction:
                description: "Has a true value if VAT can be deducted."
                type: boolean
              gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_fixed_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              fees_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              fees_total_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              net_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_refund_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              merchant_refund_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_reverse_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_fees_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_fees_total_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              issuer:
                type: object
                properties:
                  url:
                    description: "The referrer URL."
                    type: string
                  embedded:
                    description: "Has a true value if the form is embedded."
                    type: boolean
                  reference:
                    description: "The unique identifier for the reference."
                    type: string
                  reference_type:
                    description: "The reference type."
                    type: string
                  utm_source:
                    description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
                    type: string
                  utm_medium:
                    description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
                    type: string
                  utm_campaign:
                    description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
                    type: string
                  referrer_host:
                    description: "The referrer's host."
                    type: string
              items:
                type: array
                items:
                  required:
                  - id
                  - object
                  - sku
                  - name
                  - description
                  - amount
                  - currency
                  properties:
                    id:
                      description: "The unique identifier for the item."
                      type: string
                    object:
                      description: "String representing the item’s type."
                      type: string
                    sku:
                      description: "The SKU of the product."
                      type: string
                    name:
                      description: "The item's name."
                      type: string
                    description:
                      description: "The item's description."
                      type: string
                    amount:
                      description: "The item's price."
                      type: number
                    currency:
                      description: "The item's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                      type: string
                    images:
                      description: "The item's images URL list."
                      type: array
                      items:
                        type: string
                    url:
                      description: "The item's URL in the merchant project."
                      type: string
                    created_at:
                      type: object
                      properties:
                        seconds:
                          description: "9999-12-31T23:59:59Z inclusive."
                          type: integer
                        nanos:
                          description: "inclusive."
                          type: integer
                    updated_at:
                      type: object
                      properties:
                        seconds:
                          description: "9999-12-31T23:59:59Z inclusive."
                          type: integer
                        nanos:
                          description: "inclusive."
                          type: integer
                    platform_id:
                      description: "The unique identifier for the platform."
                      type: string
                    code:
                      description: "The activation code."
                      type: string
              merchant_payout_currency:
                description: "The merchant's payout currency."
                type: string
              parent_order:
                type: object
                properties:
                  id:
                    description: "The internal unique identifier for the order in PaySuper."
                    type: string
                  uuid:
                    description: "The public unique identifier for the order in PaySuper."
                    type: string
              refund:
                type: object
                properties:
                  amount:
                    description: "The refund amount."
                    type: number
                  currency:
                    description: "The refund's currency. Three-letter currency code ISO 4217, in uppercase."
                    type: string
                  reason:
                    description: "The refund reason. Available values: Customer's request, Redeem chargeback, Purchase not provided, Card data was stolen."
                    type: string
                  code:
                    description: "The internal identity for the refund reason in PaySuper."
                    type: string
                  receipt_number:
                    description: "The unique identifier for the refund's receipt."
                    type: string
                  receipt_url:
                    description: "The URL in PaySuper service for online access to the refund's receipt."
                    type: string
              cancellation:
                type: object
                properties:
                  code:
                    description: "The internal identity for the cancellation reason in PaySuper."
                    type: string
                  reason:
                    description: "The cancellation reason."
                    type: string
              operating_company_id:
                description: "The unique identifier for the merchant's operating company."
                type: string
              refund_allowed:
                description: "Has a true value if the refund is allowed."
                type: boolean
              order_charge:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_ip_country:
                description: "The IP address of the country where the order was paid for."
                type: string
              is_ip_country_mismatch_bin:
                description: "Has a true value if the country from the card's BIN has not been matched to the country defined by the IP address (for card payments only)."
                type: boolean
              billing_country_changed_by_user:
                description: "Has a true value if the country's name was selected by the customer."
                type: boolean
              vat_payer:
                description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
                type: string
              is_production:
                description: "Has a true value for a production payment and false for a test payment that goes through a test sandbox."
                type: boolean
    Merchant:
      type: object
      required:
      - payout_cost_currency
      - item_min_cost_currency
      properties:
        id:
          description: "The unique identifier for the merchant."
          type: string
        user:
          type: object
          required:
          - id
          - email
          properties:
            id:
              description: "The unique identifier for the merchant user."
              type: string
            email:
              description: "The merchant's email address."
              type: string
            first_name:
              description: "The merchant's first name."
              type: string
            last_name:
              description: "The merchant's last name."
              type: string
            profile_id:
              description: "The primary onboarding profile identifier for the merchant."
              type: string
            registration_date:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
        company:
          type: object
          required:
          - name
          - alternative_name
          - website
          - country
          - zip
          - registration_number
          properties:
            name:
              description: "The merchant's company name."
              type: string
            alternative_name:
              description: "The merchant's company alternative name."
              type: string
            website:
              description: "The merchant's company website."
              type: string
            country:
              description: "The merchant's company country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
              type: string
            state:
              description: "The merchant's company state."
              type: string
            zip:
              description: "The merchant's company ZIP code."
              type: string
            city:
              description: "The merchant's company city."
              type: string
            address:
              description: "The merchant's company address."
              type: string
            address_additional:
              description: "The merchant's company additional address."
              type: string
            registration_number:
              description: "The merchant's company registration number."
              type: string
            tax_id:
              description: "The unique identifier for the merchant's company tax."
              type: string
        contacts:
          type: object
          properties:
            authorized:
              type: object
              required:
              - name
              - email
              - phone
              properties:
                name:
                  description: "The authorised person's full name."
                  type: string
                email:
                  description: "The authorised person's email address."
                  type: string
                phone:
                  description: "The authorised person's phone."
                  type: string
                position:
                  description: "The authorised person's position in the company."
                  type: string
            technical:
              type: object
              required:
              - name
              - email
              - phone
              properties:
                name:
                  description: "The technical person's full name."
                  type: string
                email:
                  description: "The technical person's email address."
                  type: string
                phone:
                  description: "The technical person's phone."
                  type: string
        banking:
          type: object
          required:
          - currency
          - name
          - address
          - account_number
          - swift
          properties:
            currency:
              description: "The merchant's bank account currency."
              type: string
            name:
              description: "The merchant's bank name."
              type: string
            address:
              description: "The merchant's bank address."
              type: string
            account_number:
              description: "The merchant's bank account number."
              type: string
            swift:
              description: "The merchant's bank SWIFT code."
              type: string
            details:
              description: "Additional details about the merchant's bank account."
              type: string
            correspondent_account:
              description: "The bank correspondent account."
              type: string
        status:
          description: "8 - The merchant has passed the onboarding and is waiting the agreement to be signed."
          type: integer
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        first_payment_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        has_merchant_signature:
          description: "Has a true value if the merchant has signed the license agreement."
          type: boolean
        has_psp_signature:
          description: "Has a true value if PaySuper has signed the license agreement."
          type: boolean
        last_payout:
          type: object
          properties:
            date:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            amount:
              description: "The amount of the last payout to the merchant."
              type: number
        is_signed:
          description: "Has a true value if the license agreement is completely signed."
          type: boolean
        agreement_type:
          description: "The type of the agreement selected by the merchant. Available values: 0 - not selected, 1 - paper agreement, 2 - e-sign agreement."
          type: integer
        agreement_sent_via_mail:
          description: "Has a true value if the license agreement is sent via post."
          type: boolean
        mail_tracking_link:
          description: "The post link to the tracking package with the license agreement."
          type: string
        payout_cost_amount:
          description: "The payout cost."
          type: number
        payout_cost_currency:
          description: "The currency of the payout cost."
          type: string
        min_payout_amount:
          description: "The minimum payout amount."
          type: number
        rolling_reserve_amount:
          description: "The rolling reserve threshold."
          type: number
        rolling_reserve_days:
          description: "The rolling reserve period."
          type: integer
        rolling_reserve_chargeback_transactions_threshold:
          description: "The rolling reserve threshold for the chargeback transactions."
          type: number
        item_min_cost_amount:
          description: "The minimum cost of the item."
          type: number
        item_min_cost_currency:
          description: "The currency of the minimum cost of the item."
          type: string
        centrifugo_token:
          description: "The merchant authorisation token to connect to the Centrifugo channel."
          type: string
        agreement_template:
          description: "The unique identifier for the template of the license agreement stored in HelloSign."
          type: string
        received_date:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        status_last_updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        has_projects:
          description: "Has a true value if the merchant has created projects."
          type: boolean
        agreement_number:
          description: "The license agreement number."
          type: string
        minimal_payout_limit:
          description: "The minimum payout limit."
          type: number
        tariff:
          type: object
          properties:
            home_region:
              description: "The merchant's region name."
              type: string
        manual_payouts_enabled:
          description: "Has a true value if the merchant can manually make a payout."
          type: boolean
        mcc_code:
          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
          type: string
        operating_company_id:
          description: "The unique identifier for the operation company."
          type: string
        merchant_operations_type:
          description: "The merchant's operations type. Available values: low-risk, high-risk."
          type: string
        dont_charge_vat:
          description: "Has a true value if the merchant doesn't pay any taxes."
          type: boolean
    CreatePaylinkRequest:
      type: object
      required:
      - products
      - merchant_id
      - project_id
      - name
      - products_type
      properties:
        id:
          description: "The unique identifier for the payment link."
          type: string
        expires_at:
          description: "The date of the payment link expiration."
          type: integer
        products:
          description: "The list of the payment link's products."
          type: array
          items:
            type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        project_id:
          description: "The unique identifier for the project."
          type: string
        name:
          description: "The payment link's name."
          type: string
        no_expiry_date:
          description: "Has a true value if the payment link has no expiry date."
          type: boolean
        products_type:
          description: "The type of products. Available values: product, key."
          type: string
    StatCommon:
      type: object
      properties:
        paylink_id:
          description: "The unique identifier for the payment link."
          type: string
        visits:
          description: "The total number of visits."
          type: integer
        total_transactions:
          description: "The total number of transactions."
          type: integer
        sales_count:
          description: "The total number of sales."
          type: integer
        returns_count:
          description: "The total number of returns."
          type: integer
        gross_sales_amount:
          description: "The gross amount of sales."
          type: number
        gross_returns_amount:
          description: "The gross amount of returns."
          type: number
        gross_total_amount:
          description: "The gross revenue."
          type: number
        transactions_currency:
          description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
          type: string
        conversion:
          description: "The conversion - sales per visits relation."
          type: number
        country_code:
          description: "Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
          type: string
        date:
          description: "The date of the summary."
          type: string
        referrer_host:
          description: "The address of the webpage where the request originated."
          type: string
        utm:
          type: object
          properties:
            utm_source:
              description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
              type: string
            utm_medium:
              description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
              type: string
            utm_campaign:
              description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
              type: string
    PriceGroup:
      type: object
      required:
      - id
      - currency
      properties:
        id:
          description: "The unique identifier for the price group."
          type: string
        currency:
          description: "Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        region:
          description: "The region's name."
          type: string
        is_active:
          description: "Has a true value if the price group is active."
          type: boolean
    RecommendedPriceTableResponse:
      type: object
      properties:
        ranges:
          type: array
          items:
            properties:
              position:
                description: "The order number in a pricing table."
                type: integer
              from:
                description: "The lower boundary value of the range."
                type: number
              to:
                description: "The upper boundary value of the range."
                type: number
    ResponseErrorMessage:
      type: object
      properties:
        code:
          description: "The error code."
          type: string
        message:
          description: "The error short description."
          type: string
        details:
          description: "The error details."
          type: string
    DashboardRevenueDynamicReport:
      type: object
      properties:
        currency:
          description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
          type: string
        items:
          type: array
          items:
            properties:
              label:
                description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                type: integer
              amount:
                description: "The revenue amount."
                type: number
              count:
                description: "The total number of transactions."
                type: integer
    KeyProductInfo:
      type: object
      properties:
        id:
          description: "The unique identifier for the product."
          type: string
        project_id:
          description: "The unique identifier for the product's project."
          type: string
        name:
          description: "The localized name of the product."
          type: string
        description:
          description: "The localized concise description of the product."
          type: string
        long_description:
          description: "The localized extended description of the product."
          type: string
        images:
          description: "The list of the URL images of the product."
          type: array
          items:
            type: string
        platforms:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the platform."
                type: string
              name:
                description: "The platform's name."
                type: string
              price:
                type: object
                properties:
                  amount:
                    description: "The product's price."
                    type: number
                  currency:
                    description: "The product's price currency."
                    type: string
                  region:
                    description: "The product's region."
                    type: string
                  is_fallback:
                    description: "Has a true value if the price was calculated in the default currency instead of the specified."
                    type: boolean
    AcceptInviteResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        role:
          type: object
          required:
          - id
          - merchant_id
          - role
          - user_id
          - first_name
          - last_name
          - email
          properties:
            id:
              description: "The unique identifier for the user's role."
              type: string
            merchant_id:
              description: "The unique identifier for the merchant (only for merchant users)."
              type: string
            role:
              description: "The user's role."
              type: string
            status:
              description: "The user's invitation status. Available values: invited, approved."
              type: string
            user_id:
              description: "The unique identifier for the user."
              type: string
            first_name:
              description: "The user's first name."
              type: string
            last_name:
              description: "The user's last name."
              type: string
            email:
              description: "The user's email address."
              type: string
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
    ProductPricesResponse:
      type: object
      properties:
        product_price:
          type: array
          items:
            properties:
              amount:
                description: "The product's price."
                type: number
              currency:
                description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              region:
                description: "The product's price region."
                type: string
              is_virtual_currency:
                description: "Has a true value if the product has the virtual currency."
                type: boolean
    ProductPrice:
      type: object
      properties:
        amount:
          description: "The product's price."
          type: number
        currency:
          description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        region:
          description: "The product's price region."
          type: string
        is_virtual_currency:
          description: "Has a true value if the product has the virtual currency."
          type: boolean
    CheckInviteTokenResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        role_id:
          description: "The unique identifier for the role."
          type: string
        role_type:
          description: "The type of the invitation. Available values: admin, merchant."
          type: string
    ChangeMerchantDataRequest:
      type: object
      properties:
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        has_merchant_signature:
          description: "Has a true value if the merchant has signed the license agreement."
          type: boolean
        has_psp_signature:
          description: "Has a true value if PaySuper has signed the license agreement."
          type: boolean
    MerchantContact:
      type: object
      properties:
        authorized:
          type: object
          required:
          - name
          - email
          - phone
          properties:
            name:
              description: "The authorised person's full name."
              type: string
            email:
              description: "The authorised person's email address."
              type: string
            phone:
              description: "The authorised person's phone."
              type: string
            position:
              description: "The authorised person's position in the company."
              type: string
        technical:
          type: object
          required:
          - name
          - email
          - phone
          properties:
            name:
              description: "The technical person's full name."
              type: string
            email:
              description: "The technical person's email address."
              type: string
            phone:
              description: "The technical person's phone."
              type: string
    AcceptInviteRequest:
      type: object
      required:
      - token
      - user_id
      - email
      properties:
        token:
          description: "The invitation token."
          type: string
        user_id:
          description: "The unique identifier for the user."
          type: string
        email:
          description: "The user's email address."
          type: string
    CountriesList:
      type: object
      properties:
        countries:
          type: array
          items:
            properties:
              iso_code_a2:
                description: "Two-letter country code in ISO 3166, in uppercase (for instance US)."
                type: string
              region:
                description: "A PaySuper system's relative geographical area for this country."
                type: string
              currency:
                description: "The currency of the country. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              payments_allowed:
                description: "Has a true value if a payment is allowed from this country."
                type: boolean
              change_allowed:
                description: "Has a true value if the customer can select another country in case of the payments are disallowed for this country."
                type: boolean
              vat_enabled:
                description: "Has a true value if VAT is calculated and paid for this country."
                type: boolean
              vat_currency:
                description: "VAT currency. It can differ from the country currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              price_group_id:
                description: "The unique identifier for the price group this country belongs to."
                type: string
              vat_threshold:
                type: object
                properties:
                  year:
                    description: "The maximum value of the PaySuper's revenue (since the beginning of the year) from this country which subjects to VAT."
                    type: number
                  world:
                    description: "The maximum value of the PaySuper's worldwide revenue (since the beginning of the year) which subjects to VAT."
                    type: number
              vat_period_month:
                description: "The length of the taxation period in months."
                type: integer
              vat_deadline_days:
                description: "The number of days after the taxation period end to pay VAT."
                type: integer
              vat_store_years:
                description: "The number of years to store the VAT payment history for this country."
                type: integer
              vat_currency_rates_policy:
                description: "The VAT calculation policy with a currency that differs from this country's VAT currency. Available values: on-day (the conversion rate on the day of payment), last-day (the conversion rate on the last day of a tax period), mid-month (the system reserved option of a conversion rate calculation. This option is disabled.)."
                type: string
              vat_currency_rates_source:
                description: "The source of currency rates to calculate the tax amount."
                type: string
              payer_tariff_region:
                description: "A PaySuper system's relative geographical area for this country. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                type: string
              high_risk_payments_allowed:
                description: "Has a true value if payments from this country are allowed. Has a false value for a high-risk merchant."
                type: boolean
              high_risk_change_allowed:
                description: "Has a true value if the customer can select another country while the payments are disallowed for a country determined by their IP address."
                type: boolean
    Country:
      type: object
      properties:
        iso_code_a2:
          description: "Two-letter country code in ISO 3166, in uppercase (for instance US)."
          type: string
        region:
          description: "A PaySuper system's relative geographical area for this country."
          type: string
        currency:
          description: "The currency of the country. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        payments_allowed:
          description: "Has a true value if a payment is allowed from this country."
          type: boolean
        change_allowed:
          description: "Has a true value if the customer can select another country in case of the payments are disallowed for this country."
          type: boolean
        vat_enabled:
          description: "Has a true value if VAT is calculated and paid for this country."
          type: boolean
        vat_currency:
          description: "VAT currency. It can differ from the country currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        price_group_id:
          description: "The unique identifier for the price group this country belongs to."
          type: string
        vat_threshold:
          type: object
          properties:
            year:
              description: "The maximum value of the PaySuper's revenue (since the beginning of the year) from this country which subjects to VAT."
              type: number
            world:
              description: "The maximum value of the PaySuper's worldwide revenue (since the beginning of the year) which subjects to VAT."
              type: number
        vat_period_month:
          description: "The length of the taxation period in months."
          type: integer
        vat_deadline_days:
          description: "The number of days after the taxation period end to pay VAT."
          type: integer
        vat_store_years:
          description: "The number of years to store the VAT payment history for this country."
          type: integer
        vat_currency_rates_policy:
          description: "The VAT calculation policy with a currency that differs from this country's VAT currency. Available values: on-day (the conversion rate on the day of payment), last-day (the conversion rate on the last day of a tax period), mid-month (the system reserved option of a conversion rate calculation. This option is disabled.)."
          type: string
        vat_currency_rates_source:
          description: "The source of currency rates to calculate the tax amount."
          type: string
        payer_tariff_region:
          description: "A PaySuper system's relative geographical area for this country. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
          type: string
        high_risk_payments_allowed:
          description: "Has a true value if payments from this country are allowed. Has a false value for a high-risk merchant."
          type: boolean
        high_risk_change_allowed:
          description: "Has a true value if the customer can select another country while the payments are disallowed for a country determined by their IP address."
          type: boolean
    RecommendedPriceResponse:
      type: object
      properties:
        recommended_price:
          type: array
          items:
            properties:
              region:
                description: "The region's name."
                type: string
              currency:
                description: "Three-letter currency code in ISO 4217, in uppercase."
                type: string
              amount:
                description: "The recommended currency conversion price."
                type: number
paths:
  /api/v1/country:
    get:
      summary: Get the list of currencies
      operationId: countryGet
      description: "Get the full list of currencies using the country's name"
      tags:
      - Country
      parameters:
      - name: name
        description: "The country's name or two-letter country code by ISO 3166-1."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of currencies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountriesList"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/country/{code}:
    get:
      summary: Get the country data
      operationId: countryGetById
      description: "Get the country data by two-letter country code in ISO 3166-1"
      tags:
      - Country
      parameters:
      - name: code
        description: "Two-letter country code in ISO 3166-1"
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the country data (taxes, currency, region and others)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/dashboard/main:
    get:
      summary: Get the main reports for the Dashboard
      operationId: dashboardMainPathGetMainReports
      description: "Get the main reports for the Dashboard such as Gross revenue, Total transactions, VAT, Average revenue per user (ARPU)"
      tags:
      - Dashboard
      parameters:
      - name: period
        description: "The fixed period. Available values: current_month, previous_month, current_quarter, previous_quarter, current_year, previous_year."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the main reports data for the Dashboard
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardMainReport"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The country not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/dashboard/revenue_dynamics:
    get:
      summary: Get the revenue dynamic report for the Dashboard
      operationId: dashboardRevenueDynamicsPathGetRevenueDynamicsReport
      description: Get the revenue dynamic report for the Dashboard
      tags:
      - Dashboard
      parameters:
      - name: period
        description: "The fixed period. Available values: current_month, previous_month, current_quarter, previous_quarter, current_year, previous_year."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the revenue dynamic report data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardRevenueDynamicReport"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The country not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/dashboard/base:
    get:
      summary: Get the base report for the Dashboard
      operationId: dashboardBasePathGetBaseReports
      description: "Get the base report for the Dashboard such as Revenue by country, Sales today, Sources."
      tags:
      - Dashboard
      parameters:
      - name: period
        description: "The fixed period. Available values: current_day, previous_day, current_week, previous_week, current_month, previous_month, current_quarter, previous_quarter, current_year, previous_year."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the base report data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardBaseReports"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The country not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/keys/{key_id}:
    get:
      summary: "Get the key's data"
      operationId: keysIdPathGetKeyInfo
      description: "Get the key's data"
      tags:
      - Key
      - Onboarding
      parameters:
      - name: key_id
        description: The unique identifier for the key.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the key's data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Key"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/key-products/{key_product_id}:
    get:
      summary: "Get the list of platforms and prices for the key-activated product"
      operationId: keyProductsIdPathGetKeyProduct
      description: "Get the list of platforms and prices for the key-activated product. This list can be filtered by country, language or currency."
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: "The unique identifier for the key-activated product."
        in: path
        required: true
        schema:
          type: string
      - name: country
        description: "The country's name to calculate the price for."
        in: query
        required: false
        schema:
          type: string
      - name: language
        description: The language.
        in: query
        required: false
        schema:
          type: string
      - name: currency
        description: The price currency.
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "Returns the product data (platforms, prices and others)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyProductInfo"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/notifications/{notification_id}:
    get:
      summary: "Get the merchant's notification"
      operationId: merchantsNotificationsIdPathGetNotification
      description: "Get the merchant's notification using the notification ID"
      tags:
      - Onboarding
      parameters:
      - name: notification_id
        description: The unique identifier for the notification.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the notification data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/notifications:
    get:
      summary: "Get the list of merchant's notifications"
      operationId: merchantsNotificationsPathListNotifications
      description: "Get the list of merchant's notifications"
      tags:
      - Onboarding
      parameters:
      - name: user
        description: The unique identifier for the user who is the sender of the notification.
        in: query
        required: false
        schema:
          type: string
      - name: is_system
        description: "Available values: 1 - the notifications between the merchant's owner and the PaySuper admin, 2 - the notifications generated automatically."
        in: query
        required: false
        schema:
          type: integer
      - name: limit
        description: The number of notifications returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      - name: sort
        description: "The list of the notification's fields for sorting."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Returns the list of notifications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/notifications/{notification_id}/mark-as-read:
    put:
      summary: Mark the notification status as read
      operationId: merchantsNotificationsMarkReadPathMarkAsReadNotification
      description: Mark the notification status as read using the notification ID
      tags:
      - Onboarding
      parameters:
      - name: notification_id
        description: The unique identifier for the notification.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the notification data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants:
    patch:
      summary: "Update the merchant's agreement signature"
      operationId: merchantsPathChangeAgreement
      description: "Update the merchant's agreement signature using the merchant ID"
      tags:
      - Onboarding
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeMerchantDataRequest"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/agreement/document:
    get:
      summary: "Download the merchant's agreement document"
      operationId: merchantsAgreementDocumentPathGetAgreementDocument
      description: "Download the merchant's agreement document"
      tags:
      - Onboarding
      responses:
        "200":
          description: "Returns the merchant's agreement file"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/contacts:
    put:
      summary: "Update the merchant's contacts"
      operationId: merchantsContactsPathSetMerchantContacts
      description: "Update the merchant's contacts for the authorized merchant"
      tags:
      - Onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantContact"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/banking:
    put:
      summary: "Update the merchant's banking data"
      operationId: merchantsBankingPathSetMerchantBanking
      description: "Update the merchant's banking data for the authorized merchant"
      tags:
      - Onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantBanking"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/status:
    get:
      summary: Get the merchant profile filling out status
      operationId: merchantsStatusCompanyPathGetMerchantStatus
      description: Get the merchant profile filling out status for every steps
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns the merchant profile filling out status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMerchantOnboardingCompleteDataResponseItem"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/tariffs:
    get:
      summary: Get the tariff rates
      operationId: merchantsTariffsPathGetTariffRates
      description: Get the tariff rates
      tags:
      - Onboarding
      parameters:
      - name: region
        description: "The merchant's home region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
        in: query
        required: true
        schema:
          type: string
      - name: payer_region
        description: "The payer's region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
        in: query
        required: false
        schema:
          type: string
      - name: min_amount
        description: The minimum payment amount.
        in: query
        required: false
        schema:
          type: integer
      - name: max_amount
        description: The maximum payment amount.
        in: query
        required: false
        schema:
          type: integer
      - name: merchant_operations_type
        description: "The merchant's operations type. Available values: low-risk, high-risk."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the tariff rates for the specified region
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMerchantTariffRatesResponseItems"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Set the tariff rates
      operationId: merchantsTariffsPathSetTariffRates
      description: Set the tariff rates using the merchant ID
      tags:
      - Onboarding
      parameters:
      - name: merchant_operations_type
        description: "The merchant's operations type. Available values: low-risk, high-risk."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the tariff was successfully set
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/agreement:
    get:
      summary: Create the agreement
      operationId: merchantsAgreementPathGetMerchantAgreementData
      description: Create the agreement
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns the printable agreement document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnboardingFileData"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/manual_payout/enable:
    put:
      summary: Enable the manual payouts for the merchant
      operationId: merchantsIdManualPayoutEnablePathEnableMerchantManualPayout
      description: Enable the manual payouts for the merchant
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns an empty response body if the manual payouts was enabled
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/manual_payout/disable:
    put:
      summary: Disable the manual payouts for the merchant
      operationId: merchantsIdManualPayoutDisablePathDisableMerchantManualPayout
      description: Disable the manual payouts for the merchant
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns an empty response body if the manual payouts was disabled
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks:
    get:
      summary: Get the list of payment links
      operationId: paylinksPathGetPaylinksList
      description: Get the list of payment links for the authorized merchant
      tags:
      - Payment link
      parameters:
      - name: limit
        description: The number of payment links returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the list of payment links
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaylinksPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create a payment link
      operationId: paylinksPathCreatePaylink
      description: Create a payment link
      tags:
      - Payment link
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaylinkRequest"
      responses:
        "200":
          description: Returns the created payment link data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paylink"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}:
    get:
      summary: Get the payment link data
      operationId: paylinksIdPathGetPaylink
      description: Get the payment link data using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the payment link data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paylink"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the payment link
      operationId: paylinksIdPathDeletePaylink
      description: Delete the payment link using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the payment link was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The payment link not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: Update the payment link
      operationId: paylinksIdPathUpdatePaylink
      description: Update the payment link using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaylinkRequest"
      responses:
        "200":
          description: Returns the created payment link data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paylink"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/url:
    get:
      summary: Get the payment link URL
      operationId: paylinksUrlPathGetPaylinkUrl
      description: Get the payment link URL using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: utm_source
        description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
        in: query
        required: false
        schema:
          type: string
      - name: utm_medium
        description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
        in: query
        required: false
        schema:
          type: string
      - name: utm_campaign
        description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the payment link URL with UTM parameters (if any)
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/summary:
    get:
      summary: Get the payment link summary for the Dashboard
      operationId: paylinksIdStatSummaryPathGetPaylinkStatSummary
      description: Get payment link statistical results for the period using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/country:
    get:
      summary: Get the payment link summary grouped by the country
      operationId: paylinksIdStatCountryPathGetPaylinkStatByCountry
      description: Get payment link statistical results for the period grouped by the country using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/referrer:
    get:
      summary: Get the payment link summary grouped by the referrer
      operationId: paylinksIdStatReferrerPathGetPaylinkStatByReferrer
      description: Get payment link statistical results for the period grouped by the referrer using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/date:
    get:
      summary: Get the payment link summary grouped by the date
      operationId: paylinksIdStatDatePathGetPaylinkStatByDate
      description: Get payment link statistical results for the period grouped by the date using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/utm:
    get:
      summary: "Get the payment link summary grouped by the UTM-tag"
      operationId: paylinksIdStatUtmPathGetPaylinkStatByUtm
      description: "Get payment link statistical results for the period grouped by the UTM-tag using the payment link ID"
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/transactions:
    get:
      summary: "Get the list of payment link's transactions"
      operationId: paylinksIdTransactionsPathGetPaylinkTransactions
      description: "Get the list of payment link's transactions using the payment link ID"
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: limit
        description: The number of transactions returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of payment link's transactions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/price_group/country:
    get:
      summary: Get the currency and region
      operationId: priceGroupCountryPathGetPriceGroupByCountry
      description: "Get the currency and region using the country's name"
      tags:
      - Price group
      parameters:
      - name: country
        description: "The country's name."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the country's region and currency"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceGroup"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/price_group/currencies:
    get:
      summary: Get the list of currencies
      operationId: priceGroupCurrenciesPathGetCurrencyList
      description: "Get the full list of currencies with information about regions and countries using the country's name"
      tags:
      - Price group
      parameters:
      - name: country
        description: "The country's name."
        in: query
        required: true
        schema:
          type: string
      - name: zip
        description: The postal code. Required for US.
        in: query
        required: true
        schema:
          type: string
      - name: limit
        description: The number of objects returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns a full list of currencies with information about regions and countries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceGroupCurrenciesResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The country not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/price_group/region:
    get:
      summary: Get the currency and the list of countries
      operationId: priceGroupRegionPathGetCurrencyByRegion
      description: Get the currency and the list of countries using the region
      tags:
      - Price group
      parameters:
      - name: region
        description: "The country region's name."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the currency and the list of countries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceGroupCurrenciesResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/pricing/recommended/conversion:
    get:
      summary: Get recommended currency conversion prices based on exchange rates
      operationId: pricingRecommendedConversionPathGetRecommendedByConversion
      description: Calculation of recommended currency conversion prices for regions based on the exchange rates
      tags:
      - Pricing
      parameters:
      - name: amount
        description: The amount of price.
        in: query
        required: true
        schema:
          type: string
      - name: currency
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of recommended currency conversion prices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendedPriceResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/pricing/recommended/steam:
    get:
      summary: Get recommended currency conversion prices based on based on the Steam price ranges
      operationId: pricingRecommendedSteamPathGetRecommendedBySteam
      description: Calculation of recommended currency conversion prices based on the Steam price ranges taking the regional factors into account
      tags:
      - Pricing
      parameters:
      - name: amount
        description: The amount of price.
        in: query
        required: true
        schema:
          type: string
      - name: currency
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of recommended currency conversion prices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendedPriceResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/pricing/recommended/table:
    get:
      summary: Get ranges of recommended currency conversion prices
      operationId: pricingRecommendedTablePathGetRecommendedTable
      description: Get the table of recommended currency conversion prices ranges
      tags:
      - Pricing
      parameters:
      - name: currency
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the table of recommended currency conversion prices ranges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendedPriceTableResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/products:
    get:
      summary: Get the list of products
      operationId: productsPathGetProductsList
      description: Get the list of products for the authorized user
      tags:
      - Product
      parameters:
      - name: name
        description: "The product's name."
        in: query
        required: false
        schema:
          type: string
      - name: sku
        description: The SKU of the product.
        in: query
        required: false
        schema:
          type: string
      - name: project_id
        description: The unique identifier for the project.
        in: query
        required: false
        schema:
          type: string
      - name: enabled
        description: "The status of whether the product is enabled. Available values: all, true, false."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of products returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of products for the authorized user. This list can be filtered by the product's name, SKU, status and the project ID."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProductsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create a product
      operationId: productsPathCreateProduct
      description: Create a new product in the project
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Returns the created product data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/products/merchant/{merchant_id}:
    get:
      summary: Get the list of products using the merchant ID
      operationId: productsMerchantPathGetProductsList
      description: Get the list of products using the merchant ID
      tags:
      - Product
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      - name: name
        description: "The product's name."
        in: query
        required: false
        schema:
          type: string
      - name: sku
        description: The SKU of the product.
        in: query
        required: false
        schema:
          type: string
      - name: project_id
        description: The unique identifier for the project.
        in: query
        required: false
        schema:
          type: string
      - name: enabled
        description: "The status of whether the product is enabled. Available values: all, true, false."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of products returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of merchant's products. This list can be filtered by the product's name, SKU, status and the project ID."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProductsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/products/{product_id}:
    get:
      summary: Get the product
      operationId: productsIdPathGetProduct
      description: Get the product using the product ID
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the product data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProductResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the product
      operationId: productsIdPathDeleteProduct
      description: Delete the product using the product ID
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the product was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: Update the product
      operationId: productsIdPathUpdateProduct
      description: Update the product using the product ID
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Returns the updated product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/products/{product_id}/prices:
    get:
      summary: "Get the product's prices"
      operationId: productsPricesPathGetProductPrices
      description: "Get the product's prices using the product ID"
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the list of the product's prices"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPricesResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: "Set the product's price"
      operationId: productsPricesPathUpdateProductPrices
      description: "Set the product's price using the product ID"
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductPrice"
      responses:
        "200":
          description: "Returns an empty response body if the product's price was successfully set"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects:
    post:
      summary: Create a new project
      operationId: projectsPathCreateProject
      description: Create a new project
      tags:
      - Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
      responses:
        "201":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: Get the list of projects
      operationId: projectsPathListProjects
      description: Get the list of projects for the authorized merchant
      tags:
      - Project
      parameters:
      - name: limit
        description: The number of projects returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      - name: quick_search
        description: "The project's name for the quick search."
        in: query
        required: false
        schema:
          type: string
      - name: status
        description: "The list of the project's statuses."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        description: "The list of the project's fields for sorting."
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
      responses:
        "200":
          description: "Returns the list of projects. The list can be filtered by the project's name, status, and sorted by the project's fields."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProjectsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects/{project_id}:
    patch:
      summary: Update the project
      operationId: projectsIdPathUpdateProject
      description: Update the project using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
      responses:
        "200":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: Get the project data
      operationId: projectsIdPathGetProject
      description: Get the project data using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeProjectResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the project
      operationId: projectsIdPathDeleteProject
      description: Delete the project using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeProjectResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects/{project_id}/sku:
    post:
      summary: Check the project contains the SKU
      operationId: projectsSkuPathCheckSku
      description: Check the project contains the SKU using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckSkuAndKeyProjectRequest"
      responses:
        "200":
          description: Returns an empty response body if the SKU was found in this project
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/report_file/download/{file_id}.{file_type}:
    get:
      summary: Export the report file
      operationId: reportFileDownloadPathDownload
      description: "Export the report file into a PDF, CSV, XLSX"
      tags:
      - Report file
      parameters:
      - name: file_id
        description: The unique identifier for the report file.
        in: path
        required: true
        schema:
          type: string
      - name: file_type
        description: "The supported file format (PDF, CSV, XLSX)."
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the report file
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: "Invalid request data (unable to find the file, the file string is incorrect)"
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The file not found
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Unable to download the file because of the internal server error
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/tokens:
    post:
      summary: Create a payment token
      operationId: tokenPathCreateToken
      description: "Create a payment token that encrypts details of your customer, the game and purchase parameters."
      tags:
      - Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          description: "Returns the payment token string and the PaySuper-hosted URL for a payment form"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenCreationResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/invite/check:
    post:
      summary: Check the invitation token
      operationId: inviteCheckCheckInvite
      description: Check the invitation token
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckInviteTokenRequest"
      responses:
        "200":
          description: "Returns the user's role ID and type"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckInviteTokenResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/invite/approve:
    post:
      summary: Approve the user invitation
      operationId: inviteApproveApproveInvite
      description: Approve the user invitation
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptInviteRequest"
      responses:
        "200":
          description: "Returns the user's role data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptInviteResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/merchants:
    get:
      summary: Get the list of merchants for this user
      operationId: getMerchantsGetMerchants
      description: Get the list of merchants for this user
      tags:
      - User
      responses:
        "200":
          description: Returns the list of merchants
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMerchantsForUserResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/profile:
    get:
      summary: Get the user profile
      operationId: userProfilePathGetUserProfile
      description: Get the user profile
      tags:
      - User Profile
      responses:
        "200":
          description: "Returns the user's personal and company data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    patch:
      summary: Create or update the user profile
      operationId: userProfilePathSetUserProfile
      description: Create or update the user profile
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: "Returns the user's personal and company data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/user/profile:
    get:
      summary: Get the user profile
      operationId: userProfilePathIdGetUserProfile
      description: Get the user profile
      tags:
      - User Profile
      responses:
        "200":
          description: "Returns the user's personal and company data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/profile/common:
    get:
      summary: Get the common user profile
      operationId: userCommonProfilePathGetUserCommonProfile
      description: "Get the user's main profile data, role, permissions"
      tags:
      - User Profile
      responses:
        "200":
          description: "Returns the user's main profile data, role and permissions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonUserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/user/confirm_email:
    put:
      summary: "Confirm the user's email"
      operationId: userProfileConfirmEmailPathConfirmEmail
      description: "Confirm the user's email using the user token"
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmUserEmailRequest"
      responses:
        "200":
          description: "Returns an empty response body if the user's email address has been successfully confirmed"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/feedback:
    post:
      summary: Send the feedback
      operationId: userProfilePathFeedbackCreateFeedback
      description: Create and send the feedback using the page URL
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePageReviewRequest"
      responses:
        "200":
          description: Returns an empty response body if the feedback was successfully sent
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects/{project_id}/webhook/testing:
    post:
      summary: "Test the project's webhook settings"
      operationId: testMerchantWebhookPathSendWebhookTest
      description: "Test the project's webhook settings"
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the Project found in the merchant account in the PaySuper Dashboard.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateRequest"
      responses:
        "200":
          description: Returns the unique identifier for the order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendWebhookToMerchantResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/zip:
    get:
      summary: Search the city
      operationId: zipCodePathCheckZip
      description: Search the city using the country (and the ZIP code for US)
      tags:
      - Country
      parameters:
      - name: country
        description: "The country's name."
        in: query
        required: true
        schema:
          type: string
      - name: zip
        description: "The postal code. It's required for US."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of objects returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the country data (region, city, and others)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FindByZipCodeResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The country not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
openapi: "3.0.2"
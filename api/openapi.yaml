info:
  title: PaySuper payment solution service.
  version: "1.0.0"
  description: Swagger Specification for PaySuper Management API.
servers:
  - url: "https://api.pay.super.com"
    description: Production API
components:
  schemas:
    ProductPrice:
      type: object
      properties:
        amount:
          description: "@inject_tag: json\" amoun\" validate\"required,numeric,gt=\""
          type: number
        currency:
          description: "@inject_tag: json\" currenc\" validate\"omitempty,alpha,len=\""
          type: string
        region:
          description: "@inject_tag: json\" regio\" validate\"omitempty,region_pric\""
          type: string
        is_virtual_currency:
          description: "@inject_tag: json\" is_virtual_currenc\" bson\"is_virtual_currenc\""
          type: boolean
    TokenRequest:
      type: object
      properties:
        user:
          type: object
          required:
          - id
          properties:
            id:
              description: "The unique identifier for the customer in the merchant project."
              type: string
            email:
              type: object
              properties:
                value:
                  description: "The customer’s email address."
                  type: string
                verified:
                  description: "Whether the email has been verified on the merchant side."
                  type: boolean
            phone:
              type: object
              properties:
                value:
                  description: "The customer’s phone."
                  type: string
                verified:
                  description: "Whether the phone has been verified on the merchant side."
                  type: boolean
            name:
              type: object
              properties:
                value:
                  description: "The customer’s name."
                  type: string
            ip:
              type: object
              properties:
                value:
                  description: "The customer’s IP address."
                  type: string
            locale:
              type: object
              properties:
                value:
                  description: "The customer’s locale name. The Accept-Language format by RFC 7231."
                  type: string
            address:
              type: object
              properties:
                country:
                  description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                city:
                  description: "The customer’s city."
                  type: string
                postal_code:
                  description: "The customer's postal code."
                  type: string
                state:
                  description: "The customer's state code in ISO 3166-2."
                  type: string
        settings:
          type: object
          required:
          - project_id
          - type
          properties:
            project_id:
              description: "The ID of the Project found in your merchant account in the PaySuper Dashboard."
              type: string
            return_url:
              type: object
              properties:
                success:
                  description: "The redirect URL for a successful payment."
                  type: string
                fail:
                  description: "The redirect URL for a failed payment."
                  type: string
            currency:
              description: "The order currency. Three-letter Currency Code ISO 4217, in uppercase. It's required for a simple checkout payment."
              type: string
            amount:
              description: "The order amount. It's required for a simple checkout payment."
              type: number
            description:
              description: "An arbitrary order description."
              type: string
            products_ids:
              description: "A list of unique identifiers for Project's products. It's required if a payment type equals to ‘product’ or ‘key’."
              type: array
              items:
                type: string
            platform_id:
              description: "The default platform's name for which the customer buys a key. This field is used only for the key type. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
              type: string
            type:
              description: "The order type. It depends on your sales option: Game Keys, Virtual Items, Virtual Currency, Simple Checkout. Available values: key, product, virtual_currency, simple."
              type: string
            is_buy_for_virtual_currency:
              description: "Has a true value if an order must be processed using a virtual currency."
              type: boolean
            button_caption:
              description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
              type: string
    CheckInviteTokenResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        role_id:
          type: string
        role_type:
          type: string
    Notifications:
      type: object
      properties:
        count:
          description: "@inject_tag: json\" coun\""
          type: integer
        items:
          type: array
          items:
    MerchantBanking:
      type: object
      properties:
        currency:
          description: "@inject_tag: json\" currenc\" validate\"required,alpha,len=\""
          type: string
        name:
          description: "@inject_tag: json\" nam\" validate\"required,city,max=6\""
          type: string
        address:
          description: "@inject_tag: json\" addres\" validate\"required,max=6\""
          type: string
        account_number:
          description: "@inject_tag: json\" account_numbe\" bson\"account_numbe\" validate\"required,iba\""
          type: string
        swift:
          description: "@inject_tag: json\" swif\" validate\"required,swif\""
          type: string
        details:
          description: "@inject_tag: json\" detail\""
          type: string
        correspondent_account:
          description: "@inject_tag: json\" correspondent_accoun\" bson\"correspondent_accoun\" validate\"omitempty,numeric,max=3\""
          type: string
    PaylinksPaginate:
      type: object
      properties:
        count:
          description: "@inject_tag: json\" coun\""
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "@inject_tag: json\" i\""
                type: string
              object:
                description: "@inject_tag: json\" objec\""
                type: string
              products:
                description: "@inject_tag: json\" product\""
                type: array
                items:
                  type: string
              expires_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              updated_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              merchant_id:
                description: "@inject_tag: json\" merchant_i\""
                type: string
              project_id:
                description: "@inject_tag: json\" project_i\""
                type: string
              name:
                description: "@inject_tag: json\" nam\""
                type: string
              is_expired:
                description: "@inject_tag: json\" is_expire\""
                type: boolean
              visits:
                description: "@inject_tag: json\" visit\""
                type: integer
              no_expiry_date:
                description: "@inject_tag: json\" no_expiry_dat\""
                type: boolean
              products_type:
                description: "@inject_tag: json\" products_typ\""
                type: string
              total_transactions:
                description: "@inject_tag: json\" total_transaction\""
                type: integer
              sales_count:
                description: "@inject_tag: json\" sales_coun\""
                type: integer
              returns_count:
                description: "@inject_tag: json\" returns_coun\""
                type: integer
              conversion:
                description: "@inject_tag: json\" conversio\""
                type: number
              gross_sales_amount:
                description: "@inject_tag: json\" gross_sales_amoun\""
                type: number
              gross_returns_amount:
                description: "@inject_tag: json\" gross_returns_amoun\""
                type: number
              gross_total_amount:
                description: "@inject_tag: json\" gross_total_amoun\""
                type: number
              transactions_currency:
                description: "@inject_tag: json\" transactions_currenc\""
                type: string
    PriceGroupCurrenciesResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            properties:
              currency:
                description: "The region's currency."
                type: string
              regions:
                type: array
                items:
                  properties:
                    region:
                      description: "The region's name."
                      type: string
                    country:
                      description: "The country's name."
                      type: array
                      items:
                        type: string
    Product:
      type: object
      properties:
        id:
          description: "@inject_tag: validate\" omitempty,hexadecimal,len=2\" json\"i\" bson\"_i\""
          type: string
        project_id:
          description: "@inject_tag: validate\" required,hexadecimal,len=2\" json\"project_i\" bson\"project_i\""
          type: string
        object:
          description: "@inject_tag: validate\" require\" json\"objec\""
          type: string
        type:
          description: "@inject_tag: validate\" require\" json\"typ\""
          type: string
        sku:
          description: "@inject_tag: validate\" require\" json\"sk\" bson\"sk\""
          type: string
        default_currency:
          description: "@inject_tag: validate\" required,alpha,len=\" json\"default_currenc\""
          type: string
        enabled:
          description: "@inject_tag: json\" enable\""
          type: boolean
        prices:
          type: array
          items:
            properties:
              amount:
                description: "@inject_tag: json\" amoun\" validate\"required,numeric,gt=\""
                type: number
              currency:
                description: "@inject_tag: json\" currenc\" validate\"omitempty,alpha,len=\""
                type: string
              region:
                description: "@inject_tag: json\" regio\" validate\"omitempty,region_pric\""
                type: string
              is_virtual_currency:
                description: "@inject_tag: json\" is_virtual_currenc\" bson\"is_virtual_currenc\""
                type: boolean
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        images:
          description: "@inject_tag: validate\" dive,omitempty,ur\" json\"image\""
          type: array
          items:
            type: string
        url:
          description: "@inject_tag: validate\" omitempty,ur\" json\"ur\""
          type: string
        pricing:
          description: "@inject_tag: json\" pricin\" validate\"required,oneof=currency manual steam defaul\""
          type: string
        billing_type:
          description: "@inject_tag: json\" billing_typ\" validate\"required,oneof=real virtua\""
          type: string
    PriceGroup:
      type: object
      required:
      - id
      - currency
      properties:
        id:
          description: "The unique identifier for the price group."
          type: string
        currency:
          description: "Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        region:
          description: "The region's name."
          type: string
        is_active:
          description: "Has a true value if the price group is active."
          type: boolean
    RecommendedPriceResponse:
      type: object
      properties:
        recommended_price:
          type: array
          items:
            properties:
              region:
                description: "The region's name."
                type: string
              currency:
                description: "Three-letter currency code in ISO 4217, in uppercase."
                type: string
              amount:
                description: "The recommended currency conversion price."
                type: number
    ListProjectsResponse:
      type: object
      properties:
        count:
          description: "@inject_tag: json\" coun\""
          type: integer
        items:
          type: array
          items:
    Country:
      type: object
      properties:
        iso_code_a2:
          description: "Two-letter country code in ISO 3166, in uppercase (for instance US)."
          type: string
        region:
          description: "A PaySuper system's relative geographical area for this country."
          type: string
        currency:
          description: "The currency of the country. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        payments_allowed:
          description: "Has a true value if a payment is allowed from this country."
          type: boolean
        change_allowed:
          description: "Has a true value if the customer can select another country in case of the payments are disallowed for this country."
          type: boolean
        vat_enabled:
          description: "Has a true value if VAT is calculated and paid for this country."
          type: boolean
        vat_currency:
          description: "VAT currency. It can differ from the country currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        price_group_id:
          description: "The unique identifier for the price group this country belongs to."
          type: string
        vat_threshold:
          type: object
          properties:
            year:
              description: "The maximum value of the PaySuper's revenue (since the beginning of the year) from this country which subjects to VAT."
              type: number
            world:
              description: "The maximum value of the PaySuper's worldwide revenue (since the beginning of the year) which subjects to VAT."
              type: number
        vat_period_month:
          description: "The length of the taxation period in months."
          type: integer
        vat_deadline_days:
          description: "The number of days after the taxation period end to pay VAT."
          type: integer
        vat_store_years:
          description: "The number of years to store the VAT payment history for this country."
          type: integer
        vat_currency_rates_policy:
          description: "The VAT calculation policy with a currency that differs from this country's VAT currency. Available values: on-day (the conversion rate on the day of payment), last-day (the conversion rate on the last day of a tax period), mid-month (the system reserved option of a conversion rate calculation. This option is disabled.)."
          type: string
        vat_currency_rates_source:
          description: "The source of currency rates to calculate the tax amount."
          type: string
        payer_tariff_region:
          description: "A PaySuper system's relative geographical area for this country. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
          type: string
        high_risk_payments_allowed:
          description: "Has a true value if payments from this country are allowed. Has a false value for a high-risk merchant."
          type: boolean
        high_risk_change_allowed:
          description: "Has a true value if the customer can select another country while the payments are disallowed for a country determined by their IP address."
          type: boolean
    KeyProductInfo:
      type: object
      properties:
        id:
          type: string
        project_id:
          type: string
        name:
          type: string
        description:
          type: string
        long_description:
          type: string
        images:
          type: array
          items:
            type: string
        platforms:
          type: array
          items:
            properties:
              id:
                type: string
              name:
                type: string
              price:
                type: object
                properties:
                  amount:
                    type: number
                  currency:
                    type: string
                  region:
                    type: string
                  is_fallback:
                    type: boolean
    GetMerchantOnboardingCompleteDataResponseItem:
      type: object
      properties:
        status:
          description: "@inject_tag: json\" statu\""
          type: string
        steps:
          type: object
          properties:
            company:
              type: boolean
            contacts:
              type: boolean
            banking:
              type: boolean
            tariff:
              type: boolean
        complete_steps_count:
          description: "@inject_tag: json\" complete_steps_coun\""
          type: integer
    GetMerchantTariffRatesResponseItems:
      type: object
      properties:
        payment:
          type: array
          items:
            properties:
              min_amount:
                description: "@inject_tag: json\" min_amoun\" bson\"min_amoun\""
                type: number
              max_amount:
                description: "@inject_tag: json\" max_amoun\" bson\"max_amoun\""
                type: number
              method_name:
                description: "@inject_tag: json\" method_nam\" bson\"method_nam\""
                type: string
              method_percent_fee:
                description: "@inject_tag: json\" method_percent_fe\" bson\"method_percent_fe\""
                type: number
              method_fixed_fee:
                description: "@inject_tag: json\" method_fixed_fe\" bson\"method_fixed_fe\""
                type: number
              method_fixed_fee_currency:
                description: "@inject_tag: json\" method_fixed_fee_currenc\" bson\"method_fixed_fee_currenc\""
                type: string
              ps_percent_fee:
                description: "@inject_tag: json\" ps_percent_fe\" bson\"ps_percent_fe\""
                type: number
              ps_fixed_fee:
                description: "@inject_tag: json\" ps_fixed_fe\" bson\"ps_fixed_fe\""
                type: number
              ps_fixed_fee_currency:
                description: "@inject_tag: json\" ps_fixed_fee_currenc\" bson\"ps_fixed_fee_currenc\""
                type: string
              merchant_home_region:
                description: "@inject_tag: json\" merchant_home_regio\" bson\"merchant_home_regio\""
                type: string
              payer_region:
                description: "@inject_tag: json\" payer_regio\" bson\"payer_regio\""
                type: string
              mcc_code:
                description: "@inject_tag: json\" mcc_cod\" bson\"mcc_cod\""
                type: string
              is_active:
                description: "@inject_tag: json\" is_activ\" bson\"is_activ\""
                type: boolean
        chargeback:
          type: array
          items:
            properties:
              method_name:
                description: "@inject_tag: json\" method_nam\" bson\"method_nam\""
                type: string
              method_percent_fee:
                description: "@inject_tag: json\" method_percent_fe\" bson\"method_percent_fe\""
                type: number
              method_fixed_fee:
                description: "@inject_tag: json\" method_fixed_fe\" bson\"method_fixed_fe\""
                type: number
              method_fixed_fee_currency:
                description: "@inject_tag: json\" method_fixed_fee_currenc\" bson\"method_fixed_fee_currenc\""
                type: string
              is_paid_by_merchant:
                description: "@inject_tag: json\" is_paid_by_merchan\" bson\"is_paid_by_merchan\""
                type: boolean
        mcc_code:
          description: "@inject_tag: json\" mcc_cod\""
          type: string
    StatCommon:
      type: object
      properties:
        paylink_id:
          description: "@inject_tag: json\" paylink_i\" bson\"\""
          type: string
        visits:
          description: "@inject_tag: json\" visit\" bson\"\""
          type: integer
        total_transactions:
          description: "@inject_tag: json\" total_transaction\" bson\"total_transaction\""
          type: integer
        sales_count:
          description: "@inject_tag: json\" sales_coun\" bson\"sales_coun\""
          type: integer
        returns_count:
          description: "@inject_tag: json\" returns_coun\" bson\"returns_coun\""
          type: integer
        gross_sales_amount:
          description: "@inject_tag: json\" gross_sales_amoun\" bson\"gross_sales_amoun\""
          type: number
        gross_returns_amount:
          description: "@inject_tag: json\" gross_returns_amoun\" bson\"gross_returns_amoun\""
          type: number
        gross_total_amount:
          description: "@inject_tag: json\" gross_total_amoun\" bson\"gross_total_amoun\""
          type: number
        transactions_currency:
          description: "@inject_tag: json\" transactions_currenc\" bson\"transactions_currenc\""
          type: string
        conversion:
          description: "@inject_tag: json\" conversio\" bson\"\""
          type: number
        country_code:
          description: "@inject_tag: json\" country_cod\" bson\"\""
          type: string
        date:
          description: "@inject_tag: json\" dat\" bson\"\""
          type: string
        referrer_host:
          description: "@inject_tag: json\" referrer_hos\" bson\"\""
          type: string
        utm:
          type: object
          properties:
            utm_source:
              description: "@inject_tag: json\" utm_sourc\""
              type: string
            utm_medium:
              description: "@inject_tag: json\" utm_mediu\""
              type: string
            utm_campaign:
              description: "@inject_tag: json\" utm_campaig\""
              type: string
    TokenCreationResponse:
      type: object
      properties:
        token:
          description: "The secure string which contains encrypted information about your customer and sales option data."
          type: string
        payment_form_url:
          description: "The PaySuper-hosted URL of a payment form."
          type: string
    CreatePageReviewRequest:
      type: object
      properties:
        user_id:
          description: "@inject_tag: validate\" required,hexadecimal,len=2\""
          type: string
        review:
          description: "@inject_tag: validate\" required,max=50\""
          type: string
        url:
          description: "@inject_tag: validate\" require\""
          type: string
    ChangeMerchantDataRequest:
      type: object
      properties:
        merchant_id:
          description: "@inject_tag: validate\" required,hexadecimal,len=2\""
          type: string
        has_merchant_signature:
          type: boolean
        has_psp_signature:
          type: boolean
    Paylink:
      type: object
      properties:
        id:
          description: "@inject_tag: json\" i\""
          type: string
        object:
          description: "@inject_tag: json\" objec\""
          type: string
        products:
          description: "@inject_tag: json\" product\""
          type: array
          items:
            type: string
        expires_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        merchant_id:
          description: "@inject_tag: json\" merchant_i\""
          type: string
        project_id:
          description: "@inject_tag: json\" project_i\""
          type: string
        name:
          description: "@inject_tag: json\" nam\""
          type: string
        is_expired:
          description: "@inject_tag: json\" is_expire\""
          type: boolean
        visits:
          description: "@inject_tag: json\" visit\""
          type: integer
        no_expiry_date:
          description: "@inject_tag: json\" no_expiry_dat\""
          type: boolean
        products_type:
          description: "@inject_tag: json\" products_typ\""
          type: string
        total_transactions:
          description: "@inject_tag: json\" total_transaction\""
          type: integer
        sales_count:
          description: "@inject_tag: json\" sales_coun\""
          type: integer
        returns_count:
          description: "@inject_tag: json\" returns_coun\""
          type: integer
        conversion:
          description: "@inject_tag: json\" conversio\""
          type: number
        gross_sales_amount:
          description: "@inject_tag: json\" gross_sales_amoun\""
          type: number
        gross_returns_amount:
          description: "@inject_tag: json\" gross_returns_amoun\""
          type: number
        gross_total_amount:
          description: "@inject_tag: json\" gross_total_amoun\""
          type: number
        transactions_currency:
          description: "@inject_tag: json\" transactions_currenc\""
          type: string
    CheckSkuAndKeyProjectRequest:
      type: object
      properties:
        sku:
          description: "@inject_tag: validate\" required,max=25\""
          type: string
        project_id:
          description: "@inject_tag: validate\" required,hexadecimal,len=2\" param\"project_i\""
          type: string
    CheckInviteTokenRequest:
      type: object
      properties:
        token:
          description: "@inject_tag: validate\" require\""
          type: string
        email:
          description: "@inject_tag: validate\" required,emai\""
          type: string
    UserProfile:
      type: object
      properties:
        id:
          description: "@inject_tag: json\" i\""
          type: string
        email:
          type: object
          properties:
            email:
              description: "@inject_tag: json\" emai\" validate\"required,emai\""
              type: string
            confirmed:
              description: "@inject_tag: json\" confirme\""
              type: boolean
            confirmed_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
        personal:
          type: object
          properties:
            first_name:
              description: "@inject_tag: json\" first_nam\" bson\"first_nam\" validate\"required,name,max=3\""
              type: string
            last_name:
              description: "@inject_tag: json\" last_nam\" bson\"last_nam\" validate\"required,name,max=3\""
              type: string
            position:
              description: "@inject_tag: json\" positio\" bson\"positio\" validate\"required,positio\""
              type: string
        help:
          type: object
          properties:
            product_promotion_and_development:
              description: "@inject_tag: json\" product_promotion_and_developmen\" bson\"product_promotion_and_developmen\""
              type: boolean
            released_game_promotion:
              description: "@inject_tag: json\" released_game_promotio\" bson\"released_game_promotio\""
              type: boolean
            international_sales:
              description: "@inject_tag: json\" international_sale\" bson\"international_sale\""
              type: boolean
            other:
              description: "@inject_tag: json\" othe\" bson\"othe\""
              type: boolean
        company:
          type: object
          properties:
            company_name:
              description: "@inject_tag: json\" company_nam\" bson\"company_nam\" validate\"required,company_name,max=6\""
              type: string
            website:
              description: "@inject_tag: json\" websit\" validate\"required,ur\" bson\"websit\""
              type: string
            annual_income:
              type: object
              properties:
                from:
                  description: "@inject_tag: json\" fro\""
                  type: integer
                to:
                  description: "@inject_tag: json\" t\""
                  type: integer
            number_of_employees:
              type: object
              properties:
                from:
                  description: "@inject_tag: json\" fro\""
                  type: integer
                to:
                  description: "@inject_tag: json\" t\""
                  type: integer
            kind_of_activity:
              description: "@inject_tag: json\" kind_of_activit\" validate\"omitempty,oneof=develop_and_publish_your_games publish_games_of_other_companies publish_your_games_through_other_publishers othe\" bson\"kind_of_activit\""
              type: string
            monetization:
              type: object
              properties:
                paid_subscription:
                  description: "@inject_tag: json\" paid_subscriptio\" bson\"paid_subscriptio\""
                  type: boolean
                in_game_advertising:
                  description: "@inject_tag: json\" in_game_advertisin\" bson\"in_game_advertisin\""
                  type: boolean
                in_game_purchases:
                  description: "@inject_tag: json\" in_game_purchase\" bson\"in_game_purchase\""
                  type: boolean
                premium_access:
                  description: "@inject_tag: json\" premium_acces\" bson\"premium_acces\""
                  type: boolean
                other:
                  description: "@inject_tag: json\" othe\" bson\"othe\""
                  type: boolean
            platforms:
              type: object
              properties:
                pc_mac:
                  description: "@inject_tag: json\" pc_ma\" bson\"pc_ma\""
                  type: boolean
                game_console:
                  description: "@inject_tag: json\" game_consol\" bson\"game_consol\""
                  type: boolean
                mobile_device:
                  description: "@inject_tag: json\" mobile_devic\" bson\"mobile_devic\""
                  type: boolean
                web_browser:
                  description: "@inject_tag: json\" web_browse\" bson\"web_browse\""
                  type: boolean
                other:
                  description: "@inject_tag: json\" othe\" bson\"othe\""
                  type: boolean
        last_step:
          description: "@inject_tag: json\" last_ste\" bson\"last_ste\""
          type: string
        centrifugo_token:
          description: "@inject_tag: json\" centrifugo_toke\" bson\"centrifugo_toke\""
          type: string
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
    ResponseErrorMessage:
      type: object
      properties:
        code:
          description: "The error code."
          type: string
        message:
          description: "The error short description."
          type: string
        details:
          description: "The error details."
          type: string
    RecommendedPriceTableResponse:
      type: object
      properties:
        ranges:
          type: array
          items:
            properties:
              position:
                description: "The order number in a pricing table."
                type: integer
              from:
                description: "The lower boundary value of the range."
                type: number
              to:
                description: "The upper boundary value of the range."
                type: number
    Project:
      type: object
      properties:
        id:
          description: "@inject_tag: json\" i\" validate\"omitempty,hexadecimal,len=2\""
          type: string
        merchant_id:
          description: "@inject_tag: json\" merchant_i\" validate\"required,hexadecimal,len=2\""
          type: string
        callback_currency:
          description: "@inject_tag: json\" callback_currenc\" validate\"omitempty,len=\""
          type: string
        callback_protocol:
          description: "@inject_tag: json\" callback_protoco\" validate\"omitempty,oneof=default empt\""
          type: string
        create_order_allowed_urls:
          description: "@inject_tag: json\" create_order_allowed_url\" validate\"omitempty,dive,ur\""
          type: array
          items:
            type: string
        allow_dynamic_notify_urls:
          description: "@inject_tag: json\" allow_dynamic_notify_url\""
          type: boolean
        allow_dynamic_redirect_urls:
          description: "@inject_tag: json\" allow_dynamic_redirect_url\""
          type: boolean
        limits_currency:
          description: "@inject_tag: json\" limits_currenc\" validate\"omitempty,len=\""
          type: string
        min_payment_amount:
          description: "@inject_tag: json\" min_payment_amoun\" validate\"omitempty,numeric,gte=\""
          type: number
        max_payment_amount:
          description: "@inject_tag: json\" max_payment_amoun\" validate\"omitempty,numeric,gte=\""
          type: number
        notify_emails:
          description: "@inject_tag: json\" notify_email\" validate\"omitempty,dive,emai\""
          type: array
          items:
            type: string
        is_products_checkout:
          description: "@inject_tag: json\" is_products_checkou\""
          type: boolean
        secret_key:
          description: "@inject_tag: json\" secret_ke\" validate\"omitempty,max=25\""
          type: string
        signature_required:
          description: "@inject_tag: json\" signature_require\""
          type: boolean
        send_notify_email:
          description: "@inject_tag: json\" send_notify_emai\""
          type: boolean
        url_check_account:
          description: "@inject_tag: json\" url_check_accoun\" validate\"omitempty,ur\""
          type: string
        url_process_payment:
          description: "@inject_tag: json\" url_process_paymen\" validate\"omitempty,ur\""
          type: string
        url_redirect_fail:
          description: "@inject_tag: json\" url_redirect_fai\" validate\"omitempty,ur\""
          type: string
        url_redirect_success:
          description: "@inject_tag: json\" url_redirect_succes\" validate\"omitempty,ur\""
          type: string
        status:
          description: "@inject_tag: json\" statu\" validate\"omitempty,numeric,oneof=0 1 2 3 \""
          type: integer
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        products_count:
          description: "@inject_tag: json\" products_coun\""
          type: integer
        url_chargeback_payment:
          description: "@inject_tag: json\" url_chargeback_paymen\" validate\"omitempty,ur\""
          type: string
        url_cancel_payment:
          description: "@inject_tag: json\" url_cancel_paymen\" validate\"omitempty,ur\""
          type: string
        url_fraud_payment:
          description: "@inject_tag: json\" url_fraud_paymen\" validate\"omitempty,ur\""
          type: string
        url_refund_payment:
          description: "@inject_tag: json\" url_refund_paymen\" validate\"omitempty,ur\""
          type: string
        localizations:
          description: "@inject_tag: json\" localization\""
          type: array
          items:
            type: string
        currencies:
          type: array
          items:
            properties:
              currency:
                description: "@inject_tag: json\" currenc\" validate\"required,alpha,len=\""
                type: string
              region:
                description: "@inject_tag: json\" regio\" validate\"required,region_pric\""
                type: string
        cover:
          type: object
          properties:
            images:
              type: object
              properties:
                en:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"e\""
                  type: string
                ru:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"r\""
                  type: string
                es:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"e\""
                  type: string
                de:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"d\""
                  type: string
                zh:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"z\""
                  type: string
                fr:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"f\""
                  type: string
                ar:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"a\""
                  type: string
                pt:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"p\""
                  type: string
                it:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"i\""
                  type: string
                pl:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"p\""
                  type: string
                el:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"e\""
                  type: string
                ko:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"k\""
                  type: string
                ja:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"j\""
                  type: string
                vl:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"v\""
                  type: string
                he:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"h\""
                  type: string
                th:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"t\""
                  type: string
                cs:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"c\""
                  type: string
                bg:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"b\""
                  type: string
                fi:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"f\""
                  type: string
                sv:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"s\""
                  type: string
                da:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"d\""
                  type: string
                tr:
                  description: "@inject_tag: validate\" omitempty,ur\" json\"t\""
                  type: string
            use_one_for_all:
              description: "@inject_tag: json\" use_one_for_al\""
              type: boolean
        virtual_currency:
          type: object
          properties:
            logo:
              description: "@inject_tag: json\" log\" validate\"omitempty,ur\""
              type: string
            prices:
              type: array
              items:
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" validate\"required,numeric,gt=\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" validate\"omitempty,alpha,len=\""
                    type: string
                  region:
                    description: "@inject_tag: json\" regio\" validate\"omitempty,region_pric\""
                    type: string
                  is_virtual_currency:
                    description: "@inject_tag: json\" is_virtual_currenc\" bson\"is_virtual_currenc\""
                    type: boolean
            min_purchase_value:
              description: "@inject_tag: json\" min_purchase_valu\""
              type: number
            max_purchase_value:
              description: "@inject_tag: json\" max_purchase_valu\""
              type: number
            sell_count_type:
              description: "@inject_tag: json\" sell_count_typ\" validate\"omitempty,oneof=fractional integra\""
              type: string
        vat_payer:
          description: "@inject_tag: json\" vat_paye\" bson\"vat_paye\" validate\"oneof=buyer seller nobod\""
          type: string
        redirect_settings:
          type: object
          properties:
            mode:
              description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
              type: string
            delay:
              description: "The delay before the customer's redirection to the return URL. Default value is 0."
              type: integer
            usage:
              description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
              type: string
            button_caption:
              description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
              type: string
    FindByZipCodeResponse:
      type: object
      properties:
        count:
          description: "The number of cities."
          type: integer
        items:
          type: array
          items:
            properties:
              zip:
                description: "The postal code."
                type: string
              country:
                description: "The country's name."
                type: string
              city:
                description: "The city's name."
                type: string
              state:
                type: object
                properties:
                  code:
                    description: "The state's postal code."
                    type: string
                  name:
                    description: "The state's name."
                    type: string
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
    Key:
      type: object
      properties:
        id:
          description: "@inject_tag: json\" i\" bson\"_i\""
          type: string
        code:
          description: "@inject_tag: json\" cod\" validate\"required,max=5\""
          type: string
        key_product_id:
          description: "@inject_tag: validate\" required,hexadecimal,len=2\""
          type: string
        platform_id:
          description: "@inject_tag: validate\" required,max=25\""
          type: string
        order_id:
          description: "@inject_tag: validate\" omitempty,hexadecimal,len=2\""
          type: string
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        reserved_to:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        redeemed_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
    Notification:
      type: object
      properties:
        id:
          description: "@inject_tag: json\" i\""
          type: string
        message:
          description: "@inject_tag: json\" messag\""
          type: string
        merchant_id:
          description: "@inject_tag: json\" merchant_i\""
          type: string
        user_id:
          description: "@inject_tag: json\" user_i\""
          type: string
        is_system:
          description: "@inject_tag: json\" is_syste\""
          type: boolean
        is_read:
          description: "@inject_tag: json\" is_rea\""
          type: boolean
        statuses:
          type: object
          properties:
            from:
              description: "@inject_tag: json\" fro\""
              type: integer
            to:
              description: "@inject_tag: json\" t\""
              type: integer
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
    OnboardingFileData:
      type: object
      properties:
        url:
          description: "The URL for the printable agreement."
          type: string
        metadata:
          type: object
          properties:
            name:
              description: "The agreement's file name."
              type: string
            extension:
              description: "The agreement's file extension."
              type: string
            content_type:
              description: "The agreement's file content type."
              type: string
            size:
              description: "The agreement's file size in KB."
              type: integer
    GroupStatCommon:
      type: object
      properties:
        top:
          type: array
          items:
            properties:
              paylink_id:
                description: "@inject_tag: json\" paylink_i\" bson\"\""
                type: string
              visits:
                description: "@inject_tag: json\" visit\" bson\"\""
                type: integer
              total_transactions:
                description: "@inject_tag: json\" total_transaction\" bson\"total_transaction\""
                type: integer
              sales_count:
                description: "@inject_tag: json\" sales_coun\" bson\"sales_coun\""
                type: integer
              returns_count:
                description: "@inject_tag: json\" returns_coun\" bson\"returns_coun\""
                type: integer
              gross_sales_amount:
                description: "@inject_tag: json\" gross_sales_amoun\" bson\"gross_sales_amoun\""
                type: number
              gross_returns_amount:
                description: "@inject_tag: json\" gross_returns_amoun\" bson\"gross_returns_amoun\""
                type: number
              gross_total_amount:
                description: "@inject_tag: json\" gross_total_amoun\" bson\"gross_total_amoun\""
                type: number
              transactions_currency:
                description: "@inject_tag: json\" transactions_currenc\" bson\"transactions_currenc\""
                type: string
              conversion:
                description: "@inject_tag: json\" conversio\" bson\"\""
                type: number
              country_code:
                description: "@inject_tag: json\" country_cod\" bson\"\""
                type: string
              date:
                description: "@inject_tag: json\" dat\" bson\"\""
                type: string
              referrer_host:
                description: "@inject_tag: json\" referrer_hos\" bson\"\""
                type: string
              utm:
                type: object
                properties:
                  utm_source:
                    description: "@inject_tag: json\" utm_sourc\""
                    type: string
                  utm_medium:
                    description: "@inject_tag: json\" utm_mediu\""
                    type: string
                  utm_campaign:
                    description: "@inject_tag: json\" utm_campaig\""
                    type: string
        total:
          type: object
          properties:
            paylink_id:
              description: "@inject_tag: json\" paylink_i\" bson\"\""
              type: string
            visits:
              description: "@inject_tag: json\" visit\" bson\"\""
              type: integer
            total_transactions:
              description: "@inject_tag: json\" total_transaction\" bson\"total_transaction\""
              type: integer
            sales_count:
              description: "@inject_tag: json\" sales_coun\" bson\"sales_coun\""
              type: integer
            returns_count:
              description: "@inject_tag: json\" returns_coun\" bson\"returns_coun\""
              type: integer
            gross_sales_amount:
              description: "@inject_tag: json\" gross_sales_amoun\" bson\"gross_sales_amoun\""
              type: number
            gross_returns_amount:
              description: "@inject_tag: json\" gross_returns_amoun\" bson\"gross_returns_amoun\""
              type: number
            gross_total_amount:
              description: "@inject_tag: json\" gross_total_amoun\" bson\"gross_total_amoun\""
              type: number
            transactions_currency:
              description: "@inject_tag: json\" transactions_currenc\" bson\"transactions_currenc\""
              type: string
            conversion:
              description: "@inject_tag: json\" conversio\" bson\"\""
              type: number
            country_code:
              description: "@inject_tag: json\" country_cod\" bson\"\""
              type: string
            date:
              description: "@inject_tag: json\" dat\" bson\"\""
              type: string
            referrer_host:
              description: "@inject_tag: json\" referrer_hos\" bson\"\""
              type: string
            utm:
              type: object
              properties:
                utm_source:
                  description: "@inject_tag: json\" utm_sourc\""
                  type: string
                utm_medium:
                  description: "@inject_tag: json\" utm_mediu\""
                  type: string
                utm_campaign:
                  description: "@inject_tag: json\" utm_campaig\""
                  type: string
    GetMerchantsForUserResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        merchants:
          type: array
          items:
            properties:
              id:
                type: string
              name:
                type: string
              role:
                type: string
    CommonUserProfile:
      type: object
      properties:
        profile:
          type: object
          properties:
            id:
              description: "@inject_tag: json\" i\""
              type: string
            email:
              type: object
              properties:
                email:
                  description: "@inject_tag: json\" emai\" validate\"required,emai\""
                  type: string
                confirmed:
                  description: "@inject_tag: json\" confirme\""
                  type: boolean
                confirmed_at:
                  type: object
                  properties:
                    seconds:
                      description: "9999-12-31T23:59:59Z inclusive."
                      type: integer
                    nanos:
                      description: "inclusive."
                      type: integer
            personal:
              type: object
              properties:
                first_name:
                  description: "@inject_tag: json\" first_nam\" bson\"first_nam\" validate\"required,name,max=3\""
                  type: string
                last_name:
                  description: "@inject_tag: json\" last_nam\" bson\"last_nam\" validate\"required,name,max=3\""
                  type: string
                position:
                  description: "@inject_tag: json\" positio\" bson\"positio\" validate\"required,positio\""
                  type: string
            help:
              type: object
              properties:
                product_promotion_and_development:
                  description: "@inject_tag: json\" product_promotion_and_developmen\" bson\"product_promotion_and_developmen\""
                  type: boolean
                released_game_promotion:
                  description: "@inject_tag: json\" released_game_promotio\" bson\"released_game_promotio\""
                  type: boolean
                international_sales:
                  description: "@inject_tag: json\" international_sale\" bson\"international_sale\""
                  type: boolean
                other:
                  description: "@inject_tag: json\" othe\" bson\"othe\""
                  type: boolean
            company:
              type: object
              properties:
                company_name:
                  description: "@inject_tag: json\" company_nam\" bson\"company_nam\" validate\"required,company_name,max=6\""
                  type: string
                website:
                  description: "@inject_tag: json\" websit\" validate\"required,ur\" bson\"websit\""
                  type: string
                annual_income:
                  type: object
                  properties:
                    from:
                      description: "@inject_tag: json\" fro\""
                      type: integer
                    to:
                      description: "@inject_tag: json\" t\""
                      type: integer
                number_of_employees:
                  type: object
                  properties:
                    from:
                      description: "@inject_tag: json\" fro\""
                      type: integer
                    to:
                      description: "@inject_tag: json\" t\""
                      type: integer
                kind_of_activity:
                  description: "@inject_tag: json\" kind_of_activit\" validate\"omitempty,oneof=develop_and_publish_your_games publish_games_of_other_companies publish_your_games_through_other_publishers othe\" bson\"kind_of_activit\""
                  type: string
                monetization:
                  type: object
                  properties:
                    paid_subscription:
                      description: "@inject_tag: json\" paid_subscriptio\" bson\"paid_subscriptio\""
                      type: boolean
                    in_game_advertising:
                      description: "@inject_tag: json\" in_game_advertisin\" bson\"in_game_advertisin\""
                      type: boolean
                    in_game_purchases:
                      description: "@inject_tag: json\" in_game_purchase\" bson\"in_game_purchase\""
                      type: boolean
                    premium_access:
                      description: "@inject_tag: json\" premium_acces\" bson\"premium_acces\""
                      type: boolean
                    other:
                      description: "@inject_tag: json\" othe\" bson\"othe\""
                      type: boolean
                platforms:
                  type: object
                  properties:
                    pc_mac:
                      description: "@inject_tag: json\" pc_ma\" bson\"pc_ma\""
                      type: boolean
                    game_console:
                      description: "@inject_tag: json\" game_consol\" bson\"game_consol\""
                      type: boolean
                    mobile_device:
                      description: "@inject_tag: json\" mobile_devic\" bson\"mobile_devic\""
                      type: boolean
                    web_browser:
                      description: "@inject_tag: json\" web_browse\" bson\"web_browse\""
                      type: boolean
                    other:
                      description: "@inject_tag: json\" othe\" bson\"othe\""
                      type: boolean
            last_step:
              description: "@inject_tag: json\" last_ste\" bson\"last_ste\""
              type: string
            centrifugo_token:
              description: "@inject_tag: json\" centrifugo_toke\" bson\"centrifugo_toke\""
              type: string
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
        role:
          type: object
          properties:
            id:
              description: "@inject_tag: json\" i\" validate\"required,hexadecimal,len=2\""
              type: string
            merchant_id:
              description: "@inject_tag: json\" merchant_i\" validate\"required,hexadecimal,len=2\""
              type: string
            role:
              description: "@inject_tag: json\" rol\" validate\"require\""
              type: string
            status:
              description: "@inject_tag: json\" statu\" bson\"statu\" validate\"oneof=invited accepte\""
              type: string
            user_id:
              description: "@inject_tag: json\" user_i\" bson\"user_i\" validate\"required,hexadecimal,len=2\""
              type: string
            first_name:
              description: "@inject_tag: json\" first_nam\" bson\"first_nam\" validate\"require\""
              type: string
            last_name:
              description: "@inject_tag: json\" last_nam\" bson\"last_nam\" validate\"require\""
              type: string
            email:
              description: "@inject_tag: json\" emai\" bson\"emai\" validate\"required,emai\""
              type: string
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
        permissions:
          type: array
          items:
            properties:
              name:
                type: string
              access:
                type: string
        merchant:
          type: object
    ConfirmUserEmailRequest:
      type: object
      required:
      - token
      properties:
        token:
          description: "An encripted string to confirm the user registration."
          type: string
    CountriesList:
      type: object
      properties:
        countries:
          type: array
          items:
            properties:
              iso_code_a2:
                description: "Two-letter country code in ISO 3166, in uppercase (for instance US)."
                type: string
              region:
                description: "A PaySuper system's relative geographical area for this country."
                type: string
              currency:
                description: "The currency of the country. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              payments_allowed:
                description: "Has a true value if a payment is allowed from this country."
                type: boolean
              change_allowed:
                description: "Has a true value if the customer can select another country in case of the payments are disallowed for this country."
                type: boolean
              vat_enabled:
                description: "Has a true value if VAT is calculated and paid for this country."
                type: boolean
              vat_currency:
                description: "VAT currency. It can differ from the country currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              price_group_id:
                description: "The unique identifier for the price group this country belongs to."
                type: string
              vat_threshold:
                type: object
                properties:
                  year:
                    description: "The maximum value of the PaySuper's revenue (since the beginning of the year) from this country which subjects to VAT."
                    type: number
                  world:
                    description: "The maximum value of the PaySuper's worldwide revenue (since the beginning of the year) which subjects to VAT."
                    type: number
              vat_period_month:
                description: "The length of the taxation period in months."
                type: integer
              vat_deadline_days:
                description: "The number of days after the taxation period end to pay VAT."
                type: integer
              vat_store_years:
                description: "The number of years to store the VAT payment history for this country."
                type: integer
              vat_currency_rates_policy:
                description: "The VAT calculation policy with a currency that differs from this country's VAT currency. Available values: on-day (the conversion rate on the day of payment), last-day (the conversion rate on the last day of a tax period), mid-month (the system reserved option of a conversion rate calculation. This option is disabled.)."
                type: string
              vat_currency_rates_source:
                description: "The source of currency rates to calculate the tax amount."
                type: string
              payer_tariff_region:
                description: "A PaySuper system's relative geographical area for this country. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                type: string
              high_risk_payments_allowed:
                description: "Has a true value if payments from this country are allowed. Has a false value for a high-risk merchant."
                type: boolean
              high_risk_change_allowed:
                description: "Has a true value if the customer can select another country while the payments are disallowed for a country determined by their IP address."
                type: boolean
    Merchant:
      type: object
      properties:
        id:
          description: "@inject_tag: bson\" _i\""
          type: string
        user:
          type: object
          properties:
            id:
              description: "@inject_tag: json\" i\" validate\"require\""
              type: string
            email:
              description: "@inject_tag: json\" emai\" validate\"required,emai\""
              type: string
            first_name:
              description: "@inject_tag: json\" first_nam\""
              type: string
            last_name:
              description: "@inject_tag: json\" last_nam\""
              type: string
            profile_id:
              description: "@inject_tag: json\" profile_i\""
              type: string
            registration_date:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
        company:
          type: object
          properties:
            name:
              description: "@inject_tag: json\" nam\" validate\"required,company_name,max=6\""
              type: string
            alternative_name:
              description: "@inject_tag: json\" alternative_nam\" bson\"alternative_nam\" validate\"required,company_name,max=6\""
              type: string
            website:
              description: "@inject_tag: json\" websit\" validate\"required,ur\""
              type: string
            country:
              description: "@inject_tag: json\" countr\" validate\"required,alpha,len=\""
              type: string
            state:
              description: "@inject_tag: json\" stat\""
              type: string
            zip:
              description: "@inject_tag: json\" zi\" validate\"required,max=3\""
              type: string
            city:
              description: "@inject_tag: json\" cit\" validate\"required,city,max=6\""
              type: string
            address:
              description: "@inject_tag: json\" addres\" validate\"required,max=10\""
              type: string
            address_additional:
              description: "@inject_tag: json\" address_additiona\" bson\"address_additiona\" validate\"omitempty,max=10\""
              type: string
            registration_number:
              description: "@inject_tag: json\" registration_numbe\" bson\"registration_numbe\" validate\"required,max=10\""
              type: string
            tax_id:
              description: "@inject_tag: json\" tax_i\" bson\"tax_i\""
              type: string
        contacts:
          type: object
          properties:
            authorized:
              type: object
              properties:
                name:
                  description: "@inject_tag: json\" nam\" validate\"required,company_name,max=6\""
                  type: string
                email:
                  description: "@inject_tag: json\" emai\" validate\"required,email,max=10\""
                  type: string
                phone:
                  description: "@inject_tag: json\" phon\" validate\"required,numeric,max=2\""
                  type: string
                position:
                  description: "@inject_tag: json\" positio\" validate\"required,company_name,max=3\""
                  type: string
            technical:
              type: object
              properties:
                name:
                  description: "@inject_tag: json\" nam\" validate\"required,company_name,max=6\""
                  type: string
                email:
                  description: "@inject_tag: json\" emai\" validate\"required,email,max=10\""
                  type: string
                phone:
                  description: "@inject_tag: json\" phon\" validate\"required,numeric,max=2\""
                  type: string
        banking:
          type: object
          properties:
            currency:
              description: "@inject_tag: json\" currenc\" validate\"required,alpha,len=\""
              type: string
            name:
              description: "@inject_tag: json\" nam\" validate\"required,city,max=6\""
              type: string
            address:
              description: "@inject_tag: json\" addres\" validate\"required,max=6\""
              type: string
            account_number:
              description: "@inject_tag: json\" account_numbe\" bson\"account_numbe\" validate\"required,iba\""
              type: string
            swift:
              description: "@inject_tag: json\" swif\" validate\"required,swif\""
              type: string
            details:
              description: "@inject_tag: json\" detail\""
              type: string
            correspondent_account:
              description: "@inject_tag: json\" correspondent_accoun\" bson\"correspondent_accoun\" validate\"omitempty,numeric,max=3\""
              type: string
        status:
          description: "@inject_tag: json\" statu\""
          type: integer
        created_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        first_payment_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        has_merchant_signature:
          description: "@inject_tag: json\" has_merchant_signatur\""
          type: boolean
        has_psp_signature:
          description: "@inject_tag: json\" has_psp_signatur\""
          type: boolean
        last_payout:
          type: object
          properties:
            date:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            amount:
              description: "@inject_tag: json\" amoun\""
              type: number
        is_signed:
          description: "@inject_tag: json\" is_signe\""
          type: boolean
        agreement_type:
          description: "@inject_tag: json\" agreement_typ\""
          type: integer
        agreement_sent_via_mail:
          description: "@inject_tag: json\" agreement_sent_via_mai\""
          type: boolean
        mail_tracking_link:
          description: "@inject_tag: json\" mail_tracking_lin\""
          type: string
        payout_cost_amount:
          description: "@inject_tag: json\" payout_cost_amoun\" bson\"payout_cost_amoun\" validate\"numeric,gte=\""
          type: number
        payout_cost_currency:
          description: "@inject_tag: json\" payout_cost_currenc\" bson\"payout_cost_currenc\" validate\"required,alpha,len=\""
          type: string
        min_payout_amount:
          description: "@inject_tag: json\" min_payout_amoun\" bson\"min_payout_amoun\" validate\"numeric,gte=\""
          type: number
        rolling_reserve_amount:
          description: "@inject_tag: json\" rolling_reserve_amoun\" bson\"rolling_reserve_amoun\" validate\"numeric,gte=0,lte=10\""
          type: number
        rolling_reserve_days:
          description: "@inject_tag: json\" rolling_reserve_day\" bson\"rolling_reserve_day\" validate\"numeric,gte=\""
          type: integer
        rolling_reserve_chargeback_transactions_threshold:
          description: "@inject_tag: json\" rolling_reserve_chargeback_transactions_threshol\" bson\"rolling_reserve_chargeback_transactions_threshol\" validate\"numeric,gte=0,lte=10\""
          type: number
        item_min_cost_amount:
          description: "@inject_tag: json\" item_min_cost_amoun\" bson\"item_min_cost_amoun\" validate\"numeric,gte=\""
          type: number
        item_min_cost_currency:
          description: "@inject_tag: json\" item_min_cost_currenc\" bson\"item_min_cost_currenc\" validate\"required,alpha,len=\""
          type: string
        centrifugo_token:
          type: string
        agreement_template:
          description: "@inject_tag: json\" agreement_templat\""
          type: string
        received_date:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        status_last_updated_at:
          type: object
          properties:
            seconds:
              description: "9999-12-31T23:59:59Z inclusive."
              type: integer
            nanos:
              description: "inclusive."
              type: integer
        has_projects:
          description: "@inject_tag: json\" has_project\""
          type: boolean
        agreement_number:
          description: "@inject_tag: json\" agreement_numbe\""
          type: string
        minimal_payout_limit:
          description: "@inject_tag: json\" minimal_payout_limi\""
          type: number
        tariff:
          type: object
          properties:
            home_region:
              description: "@inject_tag: json\" home_regio\""
              type: string
        manual_payouts_enabled:
          description: "@inject_tag: json\" manual_payouts_enable\""
          type: boolean
        mcc_code:
          description: "@inject_tag: json\" mcc_cod\""
          type: string
        operating_company_id:
          description: "@inject_tag: json\" operating_company_i\""
          type: string
        merchant_operations_type:
          description: "@inject_tag: json\" merchant_operations_typ\" validate\"oneof=high-risk low-ris\""
          type: string
        dont_charge_vat:
          description: "@inject_tag: json\" dont_charge_va\""
          type: boolean
    MerchantContact:
      type: object
      properties:
        authorized:
          type: object
          properties:
            name:
              description: "@inject_tag: json\" nam\" validate\"required,company_name,max=6\""
              type: string
            email:
              description: "@inject_tag: json\" emai\" validate\"required,email,max=10\""
              type: string
            phone:
              description: "@inject_tag: json\" phon\" validate\"required,numeric,max=2\""
              type: string
            position:
              description: "@inject_tag: json\" positio\" validate\"required,company_name,max=3\""
              type: string
        technical:
          type: object
          properties:
            name:
              description: "@inject_tag: json\" nam\" validate\"required,company_name,max=6\""
              type: string
            email:
              description: "@inject_tag: json\" emai\" validate\"required,email,max=10\""
              type: string
            phone:
              description: "@inject_tag: json\" phon\" validate\"required,numeric,max=2\""
              type: string
    CreatePaylinkRequest:
      type: object
      properties:
        id:
          description: "@inject_tag: json\" i\" validate\"omitempty,hexadecimal,len=2\""
          type: string
        expires_at:
          description: "@inject_tag: json\" expires_a\" validate\"omitempty,numeric,gte=\""
          type: integer
        products:
          description: "@inject_tag: json\" product\" validate\"required,gte=1,dive,hexadecimal,len=2\""
          type: array
          items:
            type: string
        merchant_id:
          description: "@inject_tag: json\" merchant_i\" validate\"required,hexadecimal,len=2\""
          type: string
        project_id:
          description: "@inject_tag: json\" project_i\" validate\"required,hexadecimal,len=2\""
          type: string
        name:
          description: "@inject_tag: json\" nam\" validate\"require\""
          type: string
        no_expiry_date:
          description: "@inject_tag: json\" no_expiry_dat\""
          type: boolean
        products_type:
          description: "@inject_tag: json\" products_typ\" validate\"required,oneof=product ke\""
          type: string
    AcceptInviteRequest:
      type: object
      properties:
        token:
          description: "@inject_tag: validate\" require\""
          type: string
        user_id:
          description: "@inject_tag: validate\" required,hexadecimal,len=2\""
          type: string
        email:
          description: "@inject_tag: validate\" required,emai\""
          type: string
    TransactionsPaginate:
      type: object
      properties:
        count:
          description: "@inject_tag: json\" coun\""
          type: integer
        items:
          type: array
          items:
            properties:
              uuid:
                description: "@inject_tag: json\" uui\" bson\"uui\""
                type: string
              total_payment_amount:
                description: "@inject_tag: json\" total_payment_amoun\" bson\"total_payment_amoun\""
                type: number
              currency:
                description: "@inject_tag: json\" currenc\" bson\"currenc\""
                type: string
              project:
                type: object
                properties:
                  id:
                    type: string
                  merchant_id:
                    type: string
                  url_success:
                    type: string
                  url_fail:
                    type: string
                  notify_emails:
                    type: array
                    items:
                      type: string
                  secret_key:
                    type: string
                  send_notify_email:
                    type: boolean
                  url_check_account:
                    type: string
                  url_process_payment:
                    type: string
                  callback_protocol:
                    type: string
                  url_chargeback_payment:
                    type: string
                  url_cancel_payment:
                    type: string
                  url_fraud_payment:
                    type: string
                  url_refund_payment:
                    type: string
                  status:
                    type: integer
                  redirect_settings:
                    type: object
                    properties:
                      mode:
                        description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                        type: string
                      delay:
                        description: "The delay before the customer's redirection to the return URL. Default value is 0."
                        type: integer
                      usage:
                        description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                        type: string
                      button_caption:
                        description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                        type: string
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              transaction:
                description: "@inject_tag: json\" transactio\" bson\"pm_order_i\""
                type: string
              payment_method:
                type: object
                properties:
                  title:
                    description: "@inject_tag: json\" titl\" bson\"nam\""
                    type: string
                  external_id:
                    description: "@inject_tag: bson\" external_i\" json\"external_i\""
                    type: string
                  payment_system_id:
                    description: "@inject_tag: bson\" payment_system_i\" json\"payment_system_i\""
                    type: string
                  type:
                    description: "@inject_tag: json\" typ\" bson\"group_alia\""
                    type: string
                  saved:
                    description: "@inject_tag: json\" save\" bson\"save\""
                    type: boolean
                  card:
                    type: object
                    properties:
                      first6:
                        description: "@inject_tag: json\" first\" bson\"first\""
                        type: string
                      last4:
                        description: "@inject_tag: json\" last\" bson\"last\""
                        type: string
                      masked:
                        description: "@inject_tag: json\" maske\" bson\"maske\""
                        type: string
                      expiry_month:
                        description: "@inject_tag: json\" expiry_mont\" bson\"expiry_mont\""
                        type: string
                      expiry_year:
                        description: "@inject_tag: json\" expiry_yea\" bson\"expiry_yea\""
                        type: string
                      brand:
                        description: "@inject_tag: json\" bran\" bson\"bran\""
                        type: string
                      fingerprint:
                        description: "@inject_tag: json\" fingerprin\" bson\"fingerprin\""
                        type: string
                      secure3d:
                        description: "@inject_tag: json\" secure3\" bson\"secure3\""
                        type: boolean
                  wallet:
                    type: object
                    properties:
                      brand:
                        description: "@inject_tag: json\" bran\" bson\"bran\""
                        type: string
                      account:
                        description: "@inject_tag: json\" accoun\" bson\"accoun\""
                        type: string
                  crypto_currency:
                    type: object
                    properties:
                      brand:
                        description: "@inject_tag: json\" bran\" bson\"bran\""
                        type: string
                      address:
                        description: "@inject_tag: json\" addres\" bson\"addres\""
                        type: string
                  refund_allowed:
                    description: "@inject_tag: json\" refund_allowe\" bson\"refund_allowe\""
                    type: boolean
              country_code:
                description: "@inject_tag: json\" country_cod\" bson\"country_cod\""
                type: string
              merchant_id:
                description: "@inject_tag: json\" merchant_i\" bson\"merchant_i\""
                type: string
              locale:
                description: "@inject_tag: json\" local\" bson\"local\""
                type: string
              status:
                description: "@inject_tag: json\" statu\" bson\"statu\""
                type: string
              transaction_date:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              user:
                type: object
                properties:
                  external_id:
                    description: "The unique identifier for the customer in the merchant project."
                    type: string
                  name:
                    description: "The customer's name."
                    type: string
                  email:
                    description: "The customer's email address."
                    type: string
                  email_verified:
                    description: "Whether the customer's email address has been verified on the merchant side."
                    type: boolean
                  phone:
                    description: "The customer's phone number."
                    type: string
                  phone_verified:
                    description: "Whether the customer's phone number has been verified on the merchant side."
                    type: boolean
                  ip:
                    description: "The customer's IP address."
                    type: string
                  locale:
                    description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
                    type: string
                  address:
                    type: object
                    properties:
                      country:
                        description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                        type: string
                      city:
                        description: "The customer’s city."
                        type: string
                      postal_code:
                        description: "The customer's postal code."
                        type: string
                      state:
                        description: "The customer's state code in ISO 3166-2."
                        type: string
              billing_address:
                type: object
                properties:
                  country:
                    description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                    type: string
                  city:
                    description: "The customer’s city."
                    type: string
                  postal_code:
                    description: "The customer's postal code."
                    type: string
                  state:
                    description: "The customer's state code in ISO 3166-2."
                    type: string
              type:
                description: "@inject_tag: json\" typ\" bson\"typ\""
                type: string
              is_vat_deduction:
                description: "@inject_tag: json\" is_vat_deductio\" bson\"is_vat_deductio\""
                type: boolean
              gross_revenue:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              tax_fee:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              tax_fee_total:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              method_fee_total:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              method_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              method_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              paysuper_fixed_fee:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              fees_total:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              fees_total_local:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              net_revenue:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              refund_gross_revenue:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              method_refund_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              merchant_refund_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              refund_tax_fee:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              paysuper_refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              refund_reverse_revenue:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              refund_fees_total:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              refund_fees_total_local:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              issuer:
                type: object
                properties:
                  url:
                    description: "@inject_tag: bson\" ur\" json\"ur\""
                    type: string
                  embedded:
                    description: "@inject_tag: bson\" embedde\" json\"embedde\""
                    type: boolean
                  reference:
                    description: "@inject_tag: bson\" referenc\" json\"referenc\""
                    type: string
                  reference_type:
                    description: "@inject_tag: bson\" reference_typ\" json\"reference_typ\""
                    type: string
                  utm_source:
                    description: "@inject_tag: bson\" utm_sourc\" json\"utm_sourc\""
                    type: string
                  utm_medium:
                    description: "@inject_tag: bson\" utm_mediu\" json\"utm_mediu\""
                    type: string
                  utm_campaign:
                    description: "@inject_tag: bson\" utm_campaig\" json\"utm_campaig\""
                    type: string
                  referrer_host:
                    description: "@inject_tag: bson\" referrer_hos\" json\"referrer_hos\""
                    type: string
              items:
                type: array
                items:
                  required:
                  - id
                  - object
                  - sku
                  - name
                  - description
                  - amount
                  - currency
                  properties:
                    id:
                      description: "The unique identifier for the item."
                      type: string
                    object:
                      description: "String representing the item’s type."
                      type: string
                    sku:
                      description: "SKU of the item."
                      type: string
                    name:
                      description: "The item's name."
                      type: string
                    description:
                      description: "The item's description."
                      type: string
                    amount:
                      description: "The item's price."
                      type: number
                    currency:
                      description: "The item's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                      type: string
                    images:
                      description: "The item's images URL list."
                      type: array
                      items:
                        type: string
                    url:
                      description: "The item's URL in the merchant project."
                      type: string
                    created_at:
                      type: object
                      properties:
                        seconds:
                          description: "9999-12-31T23:59:59Z inclusive."
                          type: integer
                        nanos:
                          description: "inclusive."
                          type: integer
                    updated_at:
                      type: object
                      properties:
                        seconds:
                          description: "9999-12-31T23:59:59Z inclusive."
                          type: integer
                        nanos:
                          description: "inclusive."
                          type: integer
                    platform_id:
                      description: "The unique identifier for the platform."
                      type: string
                    code:
                      description: "The game code."
                      type: string
              merchant_payout_currency:
                description: "@inject_tag: json\" merchant_payout_currenc\" bson\"merchant_payout_currenc\""
                type: string
              parent_order:
                type: object
                properties:
                  id:
                    description: "@inject_tag: json\" i\""
                    type: string
                  uuid:
                    description: "@inject_tag: json\" uui\""
                    type: string
              refund:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: validate\" required,numeric,gt=\" json\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: validate\" required,alpha,len=\" json\"currenc\""
                    type: string
                  reason:
                    description: "@inject_tag: json\" reaso\""
                    type: string
                  code:
                    description: "@inject_tag: json\" cod\""
                    type: string
                  receipt_number:
                    description: "@inject_tag: json\" receipt_numbe\""
                    type: string
                  receipt_url:
                    description: "@inject_tag: json\" receipt_ur\""
                    type: string
              cancellation:
                type: object
                properties:
                  code:
                    description: "@inject_tag: json\" cod\" bson\"cod\""
                    type: string
                  reason:
                    description: "@inject_tag: json\" reaso\" bson\"reaso\""
                    type: string
              operating_company_id:
                description: "@inject_tag: json\" operating_company_i\" bson\"operating_company_i\""
                type: string
              refund_allowed:
                description: "@inject_tag: json\" refund_allowe\" bson\"refund_allowe\""
                type: boolean
              order_charge:
                type: object
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" bson\"amoun\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" bson\"currenc\""
                    type: string
              payment_ip_country:
                description: "@inject_tag: json\" payment_ip_countr\""
                type: string
              is_ip_country_mismatch_bin:
                description: "@inject_tag: json\" is_ip_country_mismatch_bi\" bson\"is_ip_country_mismatch_bi\""
                type: boolean
              billing_country_changed_by_user:
                description: "@inject_tag: json\" billing_country_changed_by_use\" bson\"billing_country_changed_by_use\""
                type: boolean
              vat_payer:
                description: "@inject_tag: json\" vat_paye\" bson\"vat_paye\" validate\"oneof=buyer seller nobod\""
                type: string
              is_production:
                description: "@inject_tag: json\" is_productio\" bson\"is_productio\""
                type: boolean
    ListProductsResponse:
      type: object
      properties:
        limit:
          description: "@inject_tag: json\" limi\""
          type: integer
        offset:
          description: "@inject_tag: json\" offse\""
          type: integer
        count:
          description: "@inject_tag: json\" coun\""
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "@inject_tag: validate\" omitempty,hexadecimal,len=2\" json\"i\" bson\"_i\""
                type: string
              project_id:
                description: "@inject_tag: validate\" required,hexadecimal,len=2\" json\"project_i\" bson\"project_i\""
                type: string
              object:
                description: "@inject_tag: validate\" require\" json\"objec\""
                type: string
              type:
                description: "@inject_tag: validate\" require\" json\"typ\""
                type: string
              sku:
                description: "@inject_tag: validate\" require\" json\"sk\" bson\"sk\""
                type: string
              default_currency:
                description: "@inject_tag: validate\" required,alpha,len=\" json\"default_currenc\""
                type: string
              enabled:
                description: "@inject_tag: json\" enable\""
                type: boolean
              prices:
                type: array
                items:
                  properties:
                    amount:
                      description: "@inject_tag: json\" amoun\" validate\"required,numeric,gt=\""
                      type: number
                    currency:
                      description: "@inject_tag: json\" currenc\" validate\"omitempty,alpha,len=\""
                      type: string
                    region:
                      description: "@inject_tag: json\" regio\" validate\"omitempty,region_pric\""
                      type: string
                    is_virtual_currency:
                      description: "@inject_tag: json\" is_virtual_currenc\" bson\"is_virtual_currenc\""
                      type: boolean
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              updated_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              images:
                description: "@inject_tag: validate\" dive,omitempty,ur\" json\"image\""
                type: array
                items:
                  type: string
              url:
                description: "@inject_tag: validate\" omitempty,ur\" json\"ur\""
                type: string
              pricing:
                description: "@inject_tag: json\" pricin\" validate\"required,oneof=currency manual steam defaul\""
                type: string
              billing_type:
                description: "@inject_tag: json\" billing_typ\" validate\"required,oneof=real virtua\""
                type: string
    GetProductResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        item:
          type: object
          properties:
            id:
              description: "@inject_tag: validate\" omitempty,hexadecimal,len=2\" json\"i\" bson\"_i\""
              type: string
            project_id:
              description: "@inject_tag: validate\" required,hexadecimal,len=2\" json\"project_i\" bson\"project_i\""
              type: string
            object:
              description: "@inject_tag: validate\" require\" json\"objec\""
              type: string
            type:
              description: "@inject_tag: validate\" require\" json\"typ\""
              type: string
            sku:
              description: "@inject_tag: validate\" require\" json\"sk\" bson\"sk\""
              type: string
            default_currency:
              description: "@inject_tag: validate\" required,alpha,len=\" json\"default_currenc\""
              type: string
            enabled:
              description: "@inject_tag: json\" enable\""
              type: boolean
            prices:
              type: array
              items:
                properties:
                  amount:
                    description: "@inject_tag: json\" amoun\" validate\"required,numeric,gt=\""
                    type: number
                  currency:
                    description: "@inject_tag: json\" currenc\" validate\"omitempty,alpha,len=\""
                    type: string
                  region:
                    description: "@inject_tag: json\" regio\" validate\"omitempty,region_pric\""
                    type: string
                  is_virtual_currency:
                    description: "@inject_tag: json\" is_virtual_currenc\" bson\"is_virtual_currenc\""
                    type: boolean
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            images:
              description: "@inject_tag: validate\" dive,omitempty,ur\" json\"image\""
              type: array
              items:
                type: string
            url:
              description: "@inject_tag: validate\" omitempty,ur\" json\"ur\""
              type: string
            pricing:
              description: "@inject_tag: json\" pricin\" validate\"required,oneof=currency manual steam defaul\""
              type: string
            billing_type:
              description: "@inject_tag: json\" billing_typ\" validate\"required,oneof=real virtua\""
              type: string
    ProductPricesResponse:
      type: object
      properties:
        product_price:
          type: array
          items:
            properties:
              amount:
                description: "@inject_tag: json\" amoun\" validate\"required,numeric,gt=\""
                type: number
              currency:
                description: "@inject_tag: json\" currenc\" validate\"omitempty,alpha,len=\""
                type: string
              region:
                description: "@inject_tag: json\" regio\" validate\"omitempty,region_pric\""
                type: string
              is_virtual_currency:
                description: "@inject_tag: json\" is_virtual_currenc\" bson\"is_virtual_currenc\""
                type: boolean
    ChangeProjectResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        item:
          type: object
    AcceptInviteResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        role:
          type: object
          properties:
            id:
              description: "@inject_tag: json\" i\" validate\"required,hexadecimal,len=2\""
              type: string
            merchant_id:
              description: "@inject_tag: json\" merchant_i\" validate\"required,hexadecimal,len=2\""
              type: string
            role:
              description: "@inject_tag: json\" rol\" validate\"require\""
              type: string
            status:
              description: "@inject_tag: json\" statu\" bson\"statu\" validate\"oneof=invited accepte\""
              type: string
            user_id:
              description: "@inject_tag: json\" user_i\" bson\"user_i\" validate\"required,hexadecimal,len=2\""
              type: string
            first_name:
              description: "@inject_tag: json\" first_nam\" bson\"first_nam\" validate\"require\""
              type: string
            last_name:
              description: "@inject_tag: json\" last_nam\" bson\"last_nam\" validate\"require\""
              type: string
            email:
              description: "@inject_tag: json\" emai\" bson\"emai\" validate\"required,emai\""
              type: string
            created_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
            updated_at:
              type: object
              properties:
                seconds:
                  description: "9999-12-31T23:59:59Z inclusive."
                  type: integer
                nanos:
                  description: "inclusive."
                  type: integer
paths:
  /api/v1/country:
    get:
      summary: Get the list of currencies
      operationId: countryGet
      description: "Get the full list of currencies using the country's name"
      tags:
      - Country
      parameters:
      - name: name
        description: "The country's name or two-letter country code by ISO 3166-1."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of currencies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountriesList"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/country/{code}:
    get:
      summary: Get the country data
      operationId: countryGetById
      description: "Get the country data by two-letter country code in ISO 3166-1"
      tags:
      - Country
      parameters:
      - name: code
        description: "Two-letter country code in ISO 3166-1"
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the country data (taxes, currency, region and others)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/keys/{key_id}:
    get:
      summary: "Get the key's data"
      operationId: keysIdPathGetKeyInfo
      description: "Get the key's data"
      tags:
      - Key
      - Onboarding
      parameters:
      - name: key_id
        description: The unique identifier for the key.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the key's data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Key"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/key-products/{key_product_id}:
    get:
      summary: "Get the list of platforms and prices for the key-activated product"
      operationId: keyProductsIdPathGetKeyProduct
      description: "Get the list of platforms and prices for the key-activated product. This list can be filtered by country, language or currency."
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: "The unique identifier for the key-activated product."
        in: path
        required: true
        schema:
          type: string
      - name: country
        description: "The country's name to calculate the price for."
        in: query
        required: false
        schema:
          type: string
      - name: language
        description: The language.
        in: query
        required: false
        schema:
          type: string
      - name: currency
        description: The price currency.
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "Returns the product data (platforms, prices and others)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyProductInfo"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/notifications/{notification_id}:
    get:
      summary: "Get the merchant's notification"
      operationId: merchantsNotificationsIdPathGetNotification
      description: "Get the merchant's notification using the notification ID"
      tags:
      - Onboarding
      parameters:
      - name: notification_id
        description: The unique identifier for the notification.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the notification data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/notifications:
    get:
      summary: "Get the list of merchant's notifications"
      operationId: merchantsNotificationsPathListNotifications
      description: "Get the list of merchant's notifications"
      tags:
      - Onboarding
      parameters:
      - name: user
        description: The unique identifier for the user who is the sender of the notification.
        in: query
        required: false
        schema:
          type: string
      - name: is_system
        description: "Available values: 1 - the notifications between the merchant's owner and the PaySuper admin, 2 - the notifications generated automatically."
        in: query
        required: false
        schema:
          type: integer
      - name: limit
        description: The number of notifications returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      - name: sort
        description: "The list of the notification's fields for sorting."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Returns the list of notifications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/notifications/{notification_id}/mark-as-read:
    put:
      summary: Mark the notification status as read
      operationId: merchantsNotificationsMarkReadPathMarkAsReadNotification
      description: Mark the notification status as read using the notification ID
      tags:
      - Onboarding
      parameters:
      - name: notification_id
        description: The unique identifier for the notification.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the notification data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants:
    patch:
      summary: "Update the merchant's agreement signature"
      operationId: merchantsPathChangeAgreement
      description: "Update the merchant's agreement signature using the merchant ID"
      tags:
      - Onboarding
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeMerchantDataRequest"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/agreement/document:
    get:
      summary: "Download the merchant's agreement document"
      operationId: merchantsAgreementDocumentPathGetAgreementDocument
      description: "Download the merchant's agreement document"
      tags:
      - Onboarding
      responses:
        "200":
          description: "Returns the merchant's agreement file"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/contacts:
    put:
      summary: "Update the merchant's contacts"
      operationId: merchantsContactsPathSetMerchantContacts
      description: "Update the merchant's contacts for the authorized merchant"
      tags:
      - Onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantContact"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/banking:
    put:
      summary: "Update the merchant's banking data"
      operationId: merchantsBankingPathSetMerchantBanking
      description: "Update the merchant's banking data for the authorized merchant"
      tags:
      - Onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantBanking"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/status:
    get:
      summary: Get the merchant profile filling out status
      operationId: merchantsStatusCompanyPathGetMerchantStatus
      description: Get the merchant profile filling out status for every steps
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns the merchant profile filling out status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMerchantOnboardingCompleteDataResponseItem"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/tariffs:
    get:
      summary: Get the tariff rates
      operationId: merchantsTariffsPathGetTariffRates
      description: Get the tariff rates
      tags:
      - Onboarding
      parameters:
      - name: region
        description: "The merchant's home region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
        in: query
        required: true
        schema:
          type: string
      - name: payer_region
        description: "The payer's region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
        in: query
        required: false
        schema:
          type: string
      - name: min_amount
        description: The minimum payment amount.
        in: query
        required: false
        schema:
          type: integer
      - name: max_amount
        description: The maximum payment amount.
        in: query
        required: false
        schema:
          type: integer
      - name: merchant_operations_type
        description: "The merchant's operations type. Available values: low-risk, high-risk."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the tariff rates for the specified region
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMerchantTariffRatesResponseItems"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Set the tariff rates
      operationId: merchantsTariffsPathSetTariffRates
      description: Set the tariff rates using the merchant ID
      tags:
      - Onboarding
      parameters:
      - name: merchant_operations_type
        description: "The merchant's operations type. Available values: low-risk, high-risk."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the tariff was successfully set
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/agreement:
    get:
      summary: Create the agreement
      operationId: merchantsAgreementPathGetMerchantAgreementData
      description: Create the agreement
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns the printable agreement document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnboardingFileData"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/manual_payout/enable:
    put:
      summary: Enable the manual payouts for the merchant
      operationId: merchantsIdManualPayoutEnablePathEnableMerchantManualPayout
      description: Enable the manual payouts for the merchant
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns an empty response body if the manual payouts was enabled
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/manual_payout/disable:
    put:
      summary: Disable the manual payouts for the merchant
      operationId: merchantsIdManualPayoutDisablePathDisableMerchantManualPayout
      description: Disable the manual payouts for the merchant
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns an empty response body if the manual payouts was disabled
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks:
    get:
      summary: Get the list of payment links
      operationId: paylinksPathGetPaylinksList
      description: Get the list of payment links for the authorized merchant
      tags:
      - Payment link
      parameters:
      - name: limit
        description: The number of payment links returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the list of payment links
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaylinksPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create a payment link
      operationId: paylinksPathCreatePaylink
      description: Create a payment link
      tags:
      - Payment link
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaylinkRequest"
      responses:
        "200":
          description: Returns the created payment link data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paylink"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}:
    get:
      summary: Get the payment link data
      operationId: paylinksIdPathGetPaylink
      description: Get the payment link data using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the payment link data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paylink"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the payment link
      operationId: paylinksIdPathDeletePaylink
      description: Delete the payment link using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the payment link was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The payment link not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: Update the payment link
      operationId: paylinksIdPathUpdatePaylink
      description: Update the payment link using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaylinkRequest"
      responses:
        "200":
          description: Returns the created payment link data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paylink"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/url:
    get:
      summary: Get the payment link URL
      operationId: paylinksUrlPathGetPaylinkUrl
      description: Get the payment link URL using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: utm_source
        description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
        in: query
        required: false
        schema:
          type: string
      - name: utm_medium
        description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
        in: query
        required: false
        schema:
          type: string
      - name: utm_campaign
        description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the payment link URL with UTM parameters (if any)
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/summary:
    get:
      summary: Get the payment link summary for the Dashboard
      operationId: paylinksIdStatSummaryPathGetPaylinkStatSummary
      description: Get payment link statistical results for the period using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/country:
    get:
      summary: Get the payment link summary grouped by the country
      operationId: paylinksIdStatCountryPathGetPaylinkStatByCountry
      description: Get payment link statistical results for the period grouped by the country using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/referrer:
    get:
      summary: Get the payment link summary grouped by the referrer
      operationId: paylinksIdStatReferrerPathGetPaylinkStatByReferrer
      description: Get payment link statistical results for the period grouped by the referrer using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/date:
    get:
      summary: Get the payment link summary grouped by the date
      operationId: paylinksIdStatDatePathGetPaylinkStatByDate
      description: Get payment link statistical results for the period grouped by the date using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/utm:
    get:
      summary: "Get the payment link summary grouped by the UTM-tag"
      operationId: paylinksIdStatUtmPathGetPaylinkStatByUtm
      description: "Get payment link statistical results for the period grouped by the UTM-tag using the payment link ID"
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/transactions:
    get:
      summary: "Get the list of payment link's transactions"
      operationId: paylinksIdTransactionsPathGetPaylinkTransactions
      description: "Get the list of payment link's transactions using the payment link ID"
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: limit
        description: The number of transactions returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of payment link's transactions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/price_group/country:
    get:
      summary: Get the currency and region
      operationId: priceGroupCountryPathGetPriceGroupByCountry
      description: "Get the currency and region using the country's name"
      tags:
      - Price group
      parameters:
      - name: country
        description: "The country's name."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the country's region and currency"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceGroup"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/price_group/currencies:
    get:
      summary: Get the list of currencies
      operationId: priceGroupCurrenciesPathGetCurrencyList
      description: "Get the full list of currencies with information about regions and countries using the country's name"
      tags:
      - Price group
      parameters:
      - name: country
        description: "The country's name."
        in: query
        required: true
        schema:
          type: string
      - name: zip
        description: The postal code. Required for US.
        in: query
        required: true
        schema:
          type: string
      - name: limit
        description: The number of objects returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns a full list of currencies with information about regions and countries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceGroupCurrenciesResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The country not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/price_group/region:
    get:
      summary: Get the currency and the list of countries
      operationId: priceGroupRegionPathGetCurrencyByRegion
      description: Get the currency and the list of countries using the region
      tags:
      - Price group
      parameters:
      - name: region
        description: "The country region's name."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the currency and the list of countries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceGroupCurrenciesResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/pricing/recommended/conversion:
    get:
      summary: Get recommended currency conversion prices based on exchange rates
      operationId: pricingRecommendedConversionPathGetRecommendedByConversion
      description: Calculation of recommended currency conversion prices for regions based on the exchange rates
      tags:
      - Pricing
      parameters:
      - name: amount
        description: The amount of price.
        in: query
        required: true
        schema:
          type: string
      - name: currency
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of recommended currency conversion prices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendedPriceResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/pricing/recommended/steam:
    get:
      summary: Get recommended currency conversion prices based on based on the Steam price ranges
      operationId: pricingRecommendedSteamPathGetRecommendedBySteam
      description: Calculation of recommended currency conversion prices based on the Steam price ranges taking the regional factors into account
      tags:
      - Pricing
      parameters:
      - name: amount
        description: The amount of price.
        in: query
        required: true
        schema:
          type: string
      - name: currency
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of recommended currency conversion prices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendedPriceResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/pricing/recommended/table:
    get:
      summary: Get ranges of recommended currency conversion prices
      operationId: pricingRecommendedTablePathGetRecommendedTable
      description: Get the table of recommended currency conversion prices ranges
      tags:
      - Pricing
      parameters:
      - name: currency
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the table of recommended currency conversion prices ranges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendedPriceTableResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/products:
    get:
      summary: Get the list of products
      operationId: productsPathGetProductsList
      description: Get the list of products for the authorized user
      tags:
      - Product
      parameters:
      - name: name
        description: "The product's name."
        in: query
        required: false
        schema:
          type: string
      - name: sku
        description: The SKU of the product.
        in: query
        required: false
        schema:
          type: string
      - name: project_id
        description: The unique identifier for the project.
        in: query
        required: false
        schema:
          type: string
      - name: enabled
        description: "The status of whether the product is enabled. Available values: all, true, false."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of products returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of products for the authorized user. This list can be filtered by the product's name, SKU, status and the project ID."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProductsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create a product
      operationId: productsPathCreateProduct
      description: Create a new product in the project
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Returns the created product data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/products/merchant/{merchant_id}:
    get:
      summary: Get the list of products using the merchant ID
      operationId: productsMerchantPathGetProductsList
      description: Get the list of products using the merchant ID
      tags:
      - Product
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      - name: name
        description: "The product's name."
        in: query
        required: false
        schema:
          type: string
      - name: sku
        description: The SKU of the product.
        in: query
        required: false
        schema:
          type: string
      - name: project_id
        description: The unique identifier for the project.
        in: query
        required: false
        schema:
          type: string
      - name: enabled
        description: "The status of whether the product is enabled. Available values: all, true, false."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of products returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of merchant's products. This list can be filtered by the product's name, SKU, status and the project ID."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProductsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/products/{product_id}:
    get:
      summary: Get the product
      operationId: productsIdPathGetProduct
      description: Get the product using the product ID
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the product data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProductResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the product
      operationId: productsIdPathDeleteProduct
      description: Delete the product using the product ID
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the product was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: Update the product
      operationId: productsIdPathUpdateProduct
      description: Update the product using the product ID
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Returns the updated product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/products/{product_id}/prices:
    get:
      summary: "Get the product's prices"
      operationId: productsPricesPathGetProductPrices
      description: "Get the product's prices using the product ID"
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the list of the product's prices"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPricesResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: "Set the product's price"
      operationId: productsPricesPathUpdateProductPrices
      description: "Set the product's price using the product ID"
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductPrice"
      responses:
        "200":
          description: "Returns an empty response body if the product's price was successfully set"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects:
    post:
      summary: Create a new project
      operationId: projectsPathCreateProject
      description: Create a new project
      tags:
      - Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
      responses:
        "201":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: Get the list of projects
      operationId: projectsPathListProjects
      description: Get the list of projects for the authorized merchant
      tags:
      - Project
      parameters:
      - name: limit
        description: The number of projects returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      - name: quick_search
        description: "The project's name for the quick search."
        in: query
        required: false
        schema:
          type: string
      - name: status
        description: "The list of the project's statuses."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        description: "The list of the project's fields for sorting."
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
      responses:
        "200":
          description: "Returns the list of projects. The list can be filtered by the project's name, status, and sorted by the project's fields."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProjectsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects/{project_id}:
    patch:
      summary: Update the project
      operationId: projectsIdPathUpdateProject
      description: Update the project using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
      responses:
        "200":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: Get the project data
      operationId: projectsIdPathGetProject
      description: Get the project data using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeProjectResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the project
      operationId: projectsIdPathDeleteProject
      description: Delete the project using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeProjectResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects/{project_id}/sku:
    post:
      summary: Check the project contains the SKU
      operationId: projectsSkuPathCheckSku
      description: Check the project contains the SKU using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckSkuAndKeyProjectRequest"
      responses:
        "200":
          description: Returns an empty response body if the SKU was found in this project
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/report_file/download/{file_id}.{file_type}:
    get:
      summary: Export the report file
      operationId: reportFileDownloadPathDownload
      description: "Export the report file into a PDF, CSV, XLSX"
      tags:
      - Report file
      parameters:
      - name: file_id
        description: The unique identifier for the report file.
        in: path
        required: true
        schema:
          type: string
      - name: file_type
        description: "The supported file format (PDF, CSV, XLSX)."
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the report file
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: "Invalid request data (unable to find the file, the file string is incorrect)"
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The file not found
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Unable to download the file because of the internal server error
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/tokens:
    post:
      summary: Create a payment token
      operationId: tokenPathCreateToken
      description: "Create a payment token that encrypts details of your customer, the game and purchase parameters."
      tags:
      - Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          description: "Returns the payment token string and the PaySuper-hosted URL for a payment form"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenCreationResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/invite/check:
    post:
      summary: Check the invitation token
      operationId: inviteCheckCheckInvite
      description: Check the invitation token
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckInviteTokenRequest"
      responses:
        "200":
          description: "Returns the user's role ID and type"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckInviteTokenResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/invite/approve:
    post:
      summary: Approve the user invitation
      operationId: inviteApproveApproveInvite
      description: Approve the user invitation
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptInviteRequest"
      responses:
        "200":
          description: "Returns the user's role data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptInviteResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/merchants:
    get:
      summary: Get the list of merchants for this user
      operationId: getMerchantsGetMerchants
      description: Get the list of merchants for this user
      tags:
      - User
      responses:
        "200":
          description: Returns the list of merchants
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMerchantsForUserResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/profile:
    get:
      summary: Get the user profile
      operationId: userProfilePathGetUserProfile
      description: Get the user profile
      tags:
      - User Profile
      responses:
        "200":
          description: "Returns the user's personal and company data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    patch:
      summary: Create or update the user profile
      operationId: userProfilePathSetUserProfile
      description: Create or update the user profile
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: "Returns the user's personal and company data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/user/profile:
    get:
      summary: Get the user profile
      operationId: userProfilePathIdGetUserProfile
      description: Get the user profile
      tags:
      - User Profile
      responses:
        "200":
          description: "Returns the user's personal and company data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/profile/common:
    get:
      summary: Get the common user profile
      operationId: userCommonProfilePathGetUserCommonProfile
      description: "Get the user's main profile data, role, permissions"
      tags:
      - User Profile
      responses:
        "200":
          description: "Returns the user's main profile data, role and permissions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonUserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/user/confirm_email:
    put:
      summary: "Confirm the user's email"
      operationId: userProfileConfirmEmailPathConfirmEmail
      description: "Confirm the user's email using the user token"
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmUserEmailRequest"
      responses:
        "200":
          description: "Returns an empty response body if the user's email address has been successfully confirmed"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/feedback:
    post:
      summary: Send the feedback
      operationId: userProfilePathFeedbackCreateFeedback
      description: Create and send the feedback using the page URL
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePageReviewRequest"
      responses:
        "200":
          description: Returns an empty response body if the feedback was successfully sent
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/zip:
    get:
      summary: Search the city
      operationId: zipCodePathCheckZip
      description: Search the city using the country (and the ZIP code for US)
      tags:
      - Country
      parameters:
      - name: country
        description: "The country's name."
        in: query
        required: true
        schema:
          type: string
      - name: zip
        description: "The postal code. It's required for US."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of objects returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the country data (region, city, and others)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FindByZipCodeResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The country not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
openapi: "3.0.2"
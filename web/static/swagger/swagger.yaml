definitions:
  model.Country:
    properties:
      code_a2:
        description: |
          2 chars ISO 3166-1 country code
        type: string
      code_a3:
        description: |
          3 chars ISO 3166-1 country code
        type: string
      code_int:
        description: |
          numeric ISO 3166-1 country code
        type: integer
      created_at:
        description: |
          date of create country in system
        type: string
      is_active:
        description: |
          is country active
        type: boolean
      name:
        $ref: '#/definitions/model.Name'
        description: |
          list of country names
        type: object
    type: object
  model.Currency:
    properties:
      code_a3:
        description: |
          3 chars ISO 4217 currency code
        type: string
      code_int:
        description: |
          numeric ISO 4217 currency code
        type: integer
      created_at:
        description: |
          date of create currency in system8
        type: string
      is_active:
        description: |
          is currency active
        type: boolean
      name:
        $ref: '#/definitions/model.Name'
        description: |
          list of currency names
        type: object
    type: object
  model.Error:
    properties:
      message:
        description: |
          text error description
        type: string
    type: object
  model.Merchant:
    properties:
      accounting_period:
        description: |
          period payout of money to merchant bank account. Now available next values: day - every day, week - every week, 2week - every two week, month - every month, quarter - every quarter, half-year - every half-year, year - every year
        type: string
      country:
        $ref: '#/definitions/model.Country'
        description: |
          full object of country where merchant company registered
        type: object
      created_at:
        description: |
          date of create merchant in system
        type: string
      currency:
        $ref: '#/definitions/model.Currency'
        description: |
          full object describes merchant's accounting currency
        type: object
      email:
        description: |
          merchant email
        type: string
      external_id:
        description: |
          unique merchant identifier in auth system
        type: string
      id:
        description: |
          unique merchant identifier
        type: string
      name:
        description: |
          merchant company legal name
        type: string
      status:
        description: |
          merchant status in system. Now available next statuses: 0 - created, 1 - verified, 2 - active, 3 - deleted
        type: integer
    type: object
  model.MerchantScalar:
    properties:
      accounting_period:
        description: |
          period payout of money to merchant bank account. Now available next values: day - every day, week - every week, 2week - every two week, month - every month, quarter - every quarter, half-year - every half-year, year - every year
        type: string
      country:
        description: |
          numeric ISO 3166-1 country code
        type: integer
      currency:
        description: |
          numeric ISO 4217 currency code describes merchant's accounting currency
        type: integer
      email:
        description: |
          merchant email
        type: string
      id:
        description: |
          unique merchant identifier in auth system
        type: string
      name:
        description: |
          merchant company legal name
        type: string
      status:
        description: |
          merchant status in system. Now available next statuses: 0 - created, 1 - verified, 2 - active, 3 - deleted
        type: integer
    required:
    - id
    type: object
  model.Name:
    properties:
      en:
        description: |
          english name
        type: string
      ru:
        description: |
          russian name
        type: string
    type: object
  model.OrderScalar:
    properties:
      account:
        description: |
          user unique account in project
        type: string
      amount:
        description: |
          order amount
        type: number
      currency:
        description: |
          order currency by ISO 4217 (3 chars). If this field send, then we're process amount in this currency
        type: string
      description:
        description: |
          order description. If this field not send in request, then we're create standard order description
        type: string
      order_id:
        description: |
          unique order identifier in project. This field not required, BUT we're recommend send this field always
        type: string
      other:
        description: |
          object with any fields on the project side that do not match the names of the reserved fields
        type: object
      payer_email:
        description: |
          user (payer) email
        type: string
      payer_ip:
        description: |
          user (payer) ip
        type: string
      payer_phone:
        description: |
          user (payer) phone
        type: string
      payment_method:
        description: |
          payment method identifier in Protocol One payment solution
        type: string
      project:
        description: |
          project unique identifier in Protocol One payment solution
        type: string
      region:
        description: |
          user (payer) region code by ISO 3166-1 (2 chars) for check project packages. If this field not send, then user region will be get from user ip
        type: string
      signature:
        description: |
          signature of request to verify that the data has not been changed. This field not required, BUT we're recommend send this field always
        type: string
      url_fail:
        description: |
          URL for redirect user after failed payment. This field can be send if it allowed in project admin panel
        type: string
      url_notify:
        description: |
          URL for payment notification request to project. This field can be send if it allowed in project admin panel
        type: string
      url_success:
        description: |
          URL for redirect user after successfully completed payment. This field can be send if it allowed in project admin panel
        type: string
      url_verify:
        description: |
          URL for payment data verification request to project. This field can be send if it allowed in project admin panel
        type: string
    required:
    - account
    - project
    - amount
    type: object
  model.OrderUrl:
    properties:
      order_url:
        description: |
          link for user to payment confirmation form
        type: string
    type: object
  model.Project:
    properties:
      callback_currency:
        $ref: '#/definitions/model.Currency'
        description: |
          full object of currency which described currency to send payment notification
        type: object
      callback_protocol:
        description: |
          protocol identifier to send payment notification. Now available: default
        type: string
      create_invoice_allowed_urls:
        description: |
          list of urls rom which you can send a request to create an order
        items:
          type: string
        type: array
      created_at:
        description: |
          date of create project
        type: string
      fixed_package:
        description: |
          list of project's fixed packages
        type: object
      id:
        description: |
          unique project identifier
        type: string
      is_active:
        description: |
          is project active
        type: boolean
      is_allow_dynamic_notify_urls:
        description: |
          is allow send dynamic notification urls in request to create an order
        type: boolean
      is_allow_dynamic_redirect_urls:
        description: |
          is allow send dynamic user's redirect urls in request to create an order
        type: boolean
      limits_currency:
        $ref: '#/definitions/model.Currency'
        description: |
          full object of currency which describes currency for amount's limit
        type: object
      max_payment_amount:
        description: |
          maximal amount allowed for create order
        type: number
      min_payment_amount:
        description: |
          minimal amount allowed for create order
        type: number
      name:
        description: |
          project name
        type: string
      notify_emails:
        description: |
          list of emails to send notifications about successfully completed payment operations
        items:
          type: string
        type: array
      only_fixed_amounts:
        description: |
          is allow create order only with amounts from fixed packages list
        type: boolean
      payment_methods:
        description: |
          list of payment methods allowed to project
        type: object
      secret_key:
        description: |
          secret key for create check hash for request about order statuses changes
        type: string
      send_notify_email:
        description: |
          is allow send notifications about successfully completed payment operations to user's emails
        type: boolean
      url_check_account:
        description: |
          default url to send request for verification payment data to project
        type: string
      url_process_payment:
        description: |
          default url to send request for notification about successfully completed payment to project
        type: string
      url_redirect_fail:
        description: |
          default url to redirect user after failed payment
        type: string
      url_redirect_success:
        description: |
          default url to redirect user after successfully completed payment
        type: string
    type: object
  model.ProjectScalar:
    properties:
      callback_currency:
        description: |
          ISO 4217 numeric currency code to send payment notification
        type: integer
      callback_protocol:
        description: |
          protocol identifier to send payment notification. Now available: default
        type: string
      create_invoice_allowed_urls:
        description: |
          list of urls rom which you can send a request to create an order
        items:
          type: string
        type: array
      fixed_package:
        description: |
          list of project's fixed packages
        type: object
      is_active:
        description: |
          is project active
        type: boolean
      is_allow_dynamic_notify_urls:
        description: |
          is allow send dynamic notification urls in request to create an order
        type: boolean
      is_allow_dynamic_redirect_urls:
        description: |
          is allow send dynamic user's redirect urls in request to create an order
        type: boolean
      limits_currency:
        description: |
          ISO 4217 numeric currency code for limit amounts
        type: integer
      max_payment_amount:
        description: |
          maximal amount allowed for create order
        type: number
      min_payment_amount:
        description: |
          minimal amount allowed for create order
        type: number
      name:
        description: |
          project name
        type: string
      notify_emails:
        description: |
          list of emails to send notifications about successfully completed payment operations
        items:
          type: string
        type: array
      only_fixed_amounts:
        description: |
          is allow create order only with amounts from fixed packages list
        type: boolean
      secret_key:
        description: |
          secret key for create check hash for request about order statuses changes
        type: string
      send_notify_email:
        description: |
          is allow send notifications about successfully completed payment operations to user's emails
        type: boolean
      url_check_account:
        description: |
          default url to send request for verification payment data to project
        type: string
      url_process_payment:
        description: |
          default url to send request for notification about successfully completed payment to project
        type: string
      url_redirect_fail:
        description: |
          default url to redirect user after failed payment
        type: string
      url_redirect_success:
        description: |
          default url to redirect user after successfully completed payment
        type: string
    required:
    - callback_protocol
    - name
    type: object
host: p1payapi.tst.protocol.one
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a Protocol One payment solution service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Protocol One payment solution swagger documentation
  version: "1.0"
paths:
  /api/v1/country:
    get:
      consumes:
      - application/json
      description: Get full list of currencies or get list of currencies filtered
        by name
      parameters:
      - description: name or symbolic ISO 3166-1 code of country
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Country'
            type: array
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Get list of countries
      tags:
      - Country
  /api/v1/country/{id}:
    get:
      consumes:
      - application/json
      description: Get country object by numeric ISO 3166-1 code
      parameters:
      - description: numeric ISO 3166-1 country code
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Country'
            type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Get country by numeric ISO 3166-1 code
      tags:
      - Country
  /api/v1/currency:
    get:
      consumes:
      - application/json
      description: Get full list of currencies or get list of currencies filtered
        by name
      parameters:
      - description: name or symbolic ISO 4217 code of currency
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Currency'
            type: array
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Get list of currencies
      tags:
      - Currency
  /api/v1/currency/{id}:
    get:
      consumes:
      - application/json
      description: Get currency object by numeric ISO 4217 code
      parameters:
      - description: numeric ISO 4217 currency code
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Currency'
            type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Get currency by numeric ISO 4217 code
      tags:
      - Currency
  /api/v1/order:
    post:
      consumes:
      - application/json
      description: Create a payment order use POST JSON request
      parameters:
      - description: Order create data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.OrderScalar'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Object with url to form entering payment requisites
          schema:
            $ref: '#/definitions/model.OrderUrl'
            type: object
        "400":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Create order with json request
      tags:
      - Payment Order
  /api/v1/s/merchant:
    delete:
      consumes:
      - application/json
      description: Mark merchant as deleted
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Delete merchant
      tags:
      - Merchant
    post:
      consumes:
      - application/json
      description: Create new merchant
      parameters:
      - description: Creating merchant data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.MerchantScalar'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
            type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Create merchant
      tags:
      - Merchant
    put:
      consumes:
      - application/json
      description: Update merchant data
      parameters:
      - description: Merchant object with new data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.MerchantScalar'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
            type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Update merchant
      tags:
      - Merchant
  /api/v1/s/merchant/{id}:
    get:
      consumes:
      - application/json
      description: Get full data about merchant
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Get merchant
      tags:
      - Merchant
  /api/v1/s/project:
    get:
      consumes:
      - application/json
      description: Get list of project for authenticated merchant
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: List projects
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: Create new project for authenticated merchant
      parameters:
      - description: Creating project data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ProjectScalar'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
            type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Create project
      tags:
      - Project
  /api/v1/s/project/{id}:
    delete:
      consumes:
      - application/json
      description: Delete project for authenticated merchant
      parameters:
      - description: Project identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Delete project
      tags:
      - Project
    get:
      consumes:
      - application/json
      description: '"Get data about project"'
      parameters:
      - description: Project identifier
        in: path
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Get project
      tags:
      - Project
    put:
      consumes:
      - application/json
      description: Update project for authenticated merchant
      parameters:
      - description: Project object with new data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ProjectScalar'
          type: object
      - description: Project identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
            type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
            type: object
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
            type: object
      summary: Update project
      tags:
      - Project
  /order/create:
    get:
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      description: Create a payment order use GET or POST HTML form
      parameters:
      - description: Project unique identifier in Protocol One payment solution
        in: query
        name: PP_PROJECT_ID
        required: true
        type: string
      - description: Order amount
        in: query
        name: PP_AMOUNT
        required: true
        type: number
      - description: User unique account in project
        in: query
        name: PP_ACCOUNT
        required: true
        type: string
      - description: Unique order identifier in project. This field not required,
          BUT we're recommend send this field always
        in: query
        name: PP_ORDER_ID
        type: string
      - description: Payment method identifier in Protocol One payment solution
        in: query
        name: PP_PAYMENT_METHOD
        type: string
      - description: Order description. If this field not send in request, then we're
          create standard order description
        in: query
        name: PP_DESCRIPTION
        type: string
      - description: Order currency by ISO 4217 (3 chars). If this field send, then
          we're process amount in this currency
        in: query
        name: PP_CURRENCY
        type: string
      - description: User (payer) region code by ISO 3166-1 (2 chars) for check project
          packages. If this field not send, then user region will be get from user
          ip
        in: query
        name: PP_REGION
        type: string
      - description: User (payer) email
        in: query
        name: PP_PAYER_EMAIL
        type: string
      - description: User (payer) phone
        in: query
        name: PP_PAYER_PHONE
        type: string
      - description: URL for payment data verification request to project. This field
          can be send if it allowed in project admin panel
        in: query
        name: PP_URL_VERIFY
        type: string
      - description: URL for payment notification request to project. This field can
          be send if it allowed in project admin panel
        in: query
        name: PP_URL_NOTIFY
        type: string
      - description: URL for redirect user after successfully completed payment. This
          field can be send if it allowed in project admin panel
        in: query
        name: PP_URL_SUCCESS
        type: string
      - description: URL for redirect user after failed payment. This field can be
          send if it allowed in project admin panel
        in: query
        name: PP_URL_FAIL
        type: string
      - description: Signature of request to verify that the data has not been changed.
          This field not required, BUT we're recommend send this field always
        in: query
        name: PP_SIGNATURE
        type: string
      - description: Any fields on the project side that do not match the names of
          the reserved fields
        in: query
        name: Other
        type: string
      produces:
      - text/html
      responses:
        "302":
          description: Redirect user to form entering payment requisites
          schema:
            type: string
        "400":
          description: Redirect user to page with error description
          schema:
            type: string
        "500":
          description: Redirect user to page with error description
          schema:
            type: string
      summary: Create order with HTML form
      tags:
      - Payment Order
    post:
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      description: Create a payment order use GET or POST HTML form
      parameters:
      - description: Project unique identifier in Protocol One payment solution
        in: query
        name: PP_PROJECT_ID
        required: true
        type: string
      - description: Order amount
        in: query
        name: PP_AMOUNT
        required: true
        type: number
      - description: User unique account in project
        in: query
        name: PP_ACCOUNT
        required: true
        type: string
      - description: Unique order identifier in project. This field not required,
          BUT we're recommend send this field always
        in: query
        name: PP_ORDER_ID
        type: string
      - description: Payment method identifier in Protocol One payment solution
        in: query
        name: PP_PAYMENT_METHOD
        type: string
      - description: Order description. If this field not send in request, then we're
          create standard order description
        in: query
        name: PP_DESCRIPTION
        type: string
      - description: Order currency by ISO 4217 (3 chars). If this field send, then
          we're process amount in this currency
        in: query
        name: PP_CURRENCY
        type: string
      - description: User (payer) region code by ISO 3166-1 (2 chars) for check project
          packages. If this field not send, then user region will be get from user
          ip
        in: query
        name: PP_REGION
        type: string
      - description: User (payer) email
        in: query
        name: PP_PAYER_EMAIL
        type: string
      - description: User (payer) phone
        in: query
        name: PP_PAYER_PHONE
        type: string
      - description: URL for payment data verification request to project. This field
          can be send if it allowed in project admin panel
        in: query
        name: PP_URL_VERIFY
        type: string
      - description: URL for payment notification request to project. This field can
          be send if it allowed in project admin panel
        in: query
        name: PP_URL_NOTIFY
        type: string
      - description: URL for redirect user after successfully completed payment. This
          field can be send if it allowed in project admin panel
        in: query
        name: PP_URL_SUCCESS
        type: string
      - description: URL for redirect user after failed payment. This field can be
          send if it allowed in project admin panel
        in: query
        name: PP_URL_FAIL
        type: string
      - description: Signature of request to verify that the data has not been changed.
          This field not required, BUT we're recommend send this field always
        in: query
        name: PP_SIGNATURE
        type: string
      - description: Any fields on the project side that do not match the names of
          the reserved fields
        in: query
        name: Other
        type: string
      produces:
      - text/html
      responses:
        "302":
          description: Redirect user to form entering payment requisites
          schema:
            type: string
        "400":
          description: Redirect user to page with error description
          schema:
            type: string
        "500":
          description: Redirect user to page with error description
          schema:
            type: string
      summary: Create order with HTML form
      tags:
      - Payment Order
swagger: "2.0"

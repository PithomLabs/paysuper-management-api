swagger: "2.0"
definitions:
  model.AccountingPayment:
    properties:
      success_with_commissions:
        description: |
          total amount to accounting payment to merchant include commissions
        type: number
      success_without_commissions:
        description: |
          total amount to accounting payment to merchant exclude commissions
        type: number
      total_chargeback:
        description: |
          total amount charged payments
        type: number
      total_commission:
        description: |
          total amount of commissions
        type: number
      total_refund:
        description: |
          total amount refunded payments
        type: number
    type: object
  model.Country:
    properties:
      code_a2:
        description: |
          2 chars ISO 3166-1 country code
        type: string
      code_a3:
        description: |
          3 chars ISO 3166-1 country code
        type: string
      code_int:
        description: |
          numeric ISO 3166-1 country code
        type: integer
      created_at:
        description: |
          date of create country in system
        type: string
      is_active:
        description: |
          is country active
        type: boolean
      name:
        $ref: '#/definitions/model.Name'
        description: |
          list of country names
        type: object
    type: object
  model.Currency:
    properties:
      code_a3:
        description: |
          3 chars ISO 4217 currency code
        type: string
      code_int:
        description: |
          numeric ISO 4217 currency code
        type: integer
      created_at:
        description: |
          date of create currency in system8
        type: string
      is_active:
        description: |
          is currency active
        type: boolean
      name:
        $ref: '#/definitions/model.Name'
        description: |
          list of currency names
        type: object
    type: object
  model.Error:
    properties:
      message:
        description: |
          text error description
        type: string
    type: object

  model.JsonOrderCreateResponse:
    properties:
      account:
        description: |
          user account, may be null
        type: string
      has_vat:
        description: |
          flag to show VAT commission amount in payment form
        type: boolean
      vat:
        description: VAT amount
        type: number
      amount:
        description: order amount without VAT
        type: number
      total_amount:
        description: total order amount with VAT
        type: number
      currency:
        description: order currency
        type: string
      user_address_data_required:
        description: flag to get information about user real geo position
        type: boolean
      id:
        description: |
          order unique identifier
        type: string
      inline_form_redirect_url:
        description: |
          url to redirect user to inline form in PSP side
        type: string
      payment_methods:
        description: |
          contain data about payment methods
        items:
          $ref: '#/definitions/model.PaymentMethodJsonOrderResponse'
        type: array
      project:
        $ref: '#/definitions/model.ProjectJsonOrderResponse'
        description: |
          contain data about project
        type: object
      token:
        description: |
          access token to websocket private chanel
        type: string
    type: object
  model.Merchant:
    properties:
      accounting_period:
        description: |
          period payout of money to merchant bank account. Now available next values: day - every day, week - every week, 2week - every two week, month - every month, quarter - every quarter, half-year - every half-year, year - every year
        type: string
      country:
        $ref: '#/definitions/model.Country'
        description: |
          full object of country where merchant company registered
        type: object
      created_at:
        description: |
          date of create merchant in system
        type: string
      currency:
        $ref: '#/definitions/model.Currency'
        description: |
          full object describes merchant's accounting currency
        type: object
      email:
        description: |
          merchant email
        type: string
      external_id:
        description: |
          unique merchant identifier in auth system
        type: string
      id:
        description: |
          unique merchant identifier
        type: string
      is_commission_to_user_enabled:
        description: |
          enable to add commission payment method and commission PSP (P1) to payment amount
        type: boolean
      is_vat_enabled:
        description: |
          vat calculation enabled
        type: boolean
      name:
        description: |
          merchant company legal name
        type: string
      status:
        description: |
          merchant status in system. Now available next statuses: 0 - created, 1 - verified, 2 - active, 3 - deleted
        type: integer
    type: object
  model.MerchantScalar:
    properties:
      accounting_period:
        description: |
          period payout of money to merchant bank account. Now available next values: day - every day, week - every week, 2week - every two week, month - every month, quarter - every quarter, half-year - every half-year, year - every year
        type: string
      country:
        description: |
          numeric ISO 3166-1 country code
        type: integer
      currency:
        description: |
          numeric ISO 4217 currency code describes merchant's accounting currency
        type: integer
      email:
        description: |
          merchant email
        type: string
      id:
        description: |
          unique merchant identifier in auth system
        type: string
      name:
        description: |
          merchant company legal name
        type: string
      status:
        description: |
          merchant status in system. Now available next statuses: 0 - created, 1 - verified, 2 - active, 3 - deleted
        type: integer
    required:
      - id
    type: object
  model.Name:
    properties:
      en:
        description: |
          english name
        type: string
      ru:
        description: |
          russian name
        type: string
    type: object
  model.Order:
    properties:
      amount_in_merchant_accounting_currency:
        description: |
          received from project operation amount in project owner (merchant) accounting currency
        type: number
      amount_out_merchant_accounting_currency:
        description: |
          received from payment system operation amount in project owner (merchant) accounting currency
        type: number
      amount_ps_accounting_currency:
        description: |
          operation amount in payment system accounting currency
        type: number
      amount_psp_accounting_currency:
        description: |
          operation amount in accounting currency of PSP
        type: number
      created_at:
        description: |
          date of last update order data
        type: string
      created_by_json:
        description: |
          is order create by json request
        type: boolean
      description:
        description: |
          order description
        type: string
      fixed_package:
        $ref: '#/definitions/model.OrderFixedPackage'
        description: |
          fixed package which buy payer
        type: object
      id:
        description: |
          unique order identifier in Protocol One
        type: string
      payer_data:
        $ref: '#/definitions/model.PayerData'
        description: |
          information about payer, for example: ip, email,phone and etc
        type: object
      payment_method:
        $ref: '#/definitions/model.OrderPaymentMethod'
        description: |
          payment method unique identifier
        type: object
      pm_account:
        description: |
          account of payer in payment system
        type: string
      pm_income_amount:
        description: |
          order amount received from payment system in notification request
        type: number
      pm_income_currency:
        $ref: '#/definitions/model.Currency'
        description: |
          order currency received from payment system in notification request
        type: object
      pm_order_close_date:
        description: |
          date of ended payment operation in payment system
        type: string
      pm_order_id:
        description: |
          unique order id in payment system
        type: string
      pm_outcome_amount:
        description: |
          order amount send to payment system
        type: number
      pm_outcome_currency:
        $ref: '#/definitions/model.Currency'
        description: |
          order currency send to payment system
        type: object
      pm_terminal_id:
        description: |
          identifier of terminal for process payment in payment system side
        type: string
      pm_txn_params:
        description: |
          any params received in request of payment system about payment
        type: object
      project:
        $ref: '#/definitions/model.ProjectOrder'
        description: |
          object described main entities of project in Protocol One payment solution
        type: object
      project_account:
        description: |
          user unique account in project
        type: string
      project_fee_amount:
        $ref: '#/definitions/model.OrderFee'
        description: |
          fee is charged with the project for the operation
        type: object
      project_income_amount:
        description: |
          order amount received from project
        type: number
      project_income_currency:
        $ref: '#/definitions/model.Currency'
        description: |
          order currency received from project
        type: object
      project_last_requested_at:
        description: |
          date of last notification request to project
        type: string
      project_order_id:
        description: |
          unique order identifier in project. if was send in create order process
        type: string
      project_outcome_amount:
        description: |
          order amount send to project in notification request
        type: number
      project_outcome_currency:
        $ref: '#/definitions/model.Currency'
        description: |
          order currency send to project in notification request
        type: object
      project_params:
        description: |
          any project params which received from project in request of create of order
        type: object
      ps_fee_amount:
        $ref: '#/definitions/model.OrderFeePaymentSystem'
        description: |
          payment system fee for payment operation
        type: object
      psp_amount_fee_amount:
        $ref: '#/definitions/model.OrderFeePsp'
        description: |
          PSP (P1) fee amount
        type: object
      status:
        description: |
          order status
        type: integer
      to_payer_fee_amount:
        $ref: '#/definitions/model.OrderFee'
        description: |
          value of fee which added to payer amount
        type: object
      vat_amount:
        description: |
          vat amount
        type: number
    type: object
  model.OrderCreatePaymentRequest:
    properties:
      address:
        description: |
          user wallet address in crypto payment system. required only for crypto payment
        type: string
      card_holder:
        description: |
          bank card card holder name. required only for bank card payment
        type: string
      cvv:
        description: |
          bank card cvv code. required only for bank card payment
        type: integer
      ewallet:
        description: |
          user account in ewallet payment system. required only for ewallet payment
        type: string
      month:
        description: |
          month of expire date of user bank card. required only for bank card payment
        type: integer
      order_id:
        description: |
          unique identifier of order on PSP (P1) side
        type: string
      pan:
        description: |
          user bank card number. required only for bank card payment
        type: string
      payment_method_id:
        description: |
          unique identifier of payment method by PSP (P1) classifier
        type: string
      year:
        description: |
          year of expire date of user bank card. required only for bank card payment
        type: integer
    type: object
  model.OrderFee:
    properties:
      amount_merchant_currency:
        description: |
          amount of fee of payment system in accounting currency of merchant
        type: number
      amount_payment_method_currency:
        description: |
          amount of fee of payment system in payment currency
        type: number
    type: object
  model.OrderFeePaymentSystem:
    properties:
      amount_merchant_currency:
        description: |
          amount of fee of payment system in accounting currency of merchant
        type: number
      amount_payment_method_currency:
        description: |
          amount of fee of payment system in payment currency
        type: number
      amount_payment_system_currency:
        description: |
          amount of fee of payment system in accounting currency of payment system
        type: number
    type: object
  model.OrderFeePsp:
    properties:
      amount_merchant_currency:
        description: |
          amount of fee of payment system in accounting currency of merchant
        type: number
      amount_payment_method_currency:
        description: |
          amount of fee of payment system in payment currency
        type: number
      amount_psp_currency:
        description: |
          amount of fee of PSP (P1) in PSP (P1) accounting currencies
        type: number
    type: object
  model.OrderFixedPackage:
    properties:
      currency_int:
        type: integer
      id:
        type: string
      name:
        type: string
      price:
        type: number
      region:
        type: string
    type: object
  model.OrderPaginate:
    properties:
      count:
        description: |
          total count of selected orders
        type: integer
      items:
        description: |
          array of selected orders
        items:
          $ref: '#/definitions/model.Order'
        type: array
    type: object
  model.OrderPaymentMethod:
    properties:
      group_alias:
        type: string
      id:
        type: string
      name:
        type: string
      params:
        $ref: '#/definitions/model.PaymentMethodParams'
        type: object
      payment_system:
        $ref: '#/definitions/model.PaymentSystem'
        type: object
    type: object
  model.OrderScalar:
    properties:
      account:
        description: |
          user unique account in project
        type: string
      amount:
        description: |
          order amount
        type: number
      currency:
        description: |
          order currency by ISO 4217 (3 chars). If this field send, then we're process amount in this currency
        type: string
      description:
        description: |
          order description. If this field not send in request, then we're create standard order description
        type: string
      order_id:
        description: |
          unique order identifier in project. This field not required, BUT we're recommend send this field always
        type: string
      other:
        description: |
          object with any fields on the project side that do not match the names of the reserved fields
        type: object
      payer_email:
        description: |
          user (payer) email
        type: string
      payer_ip:
        description: |
          user (payer) ip
        type: string
      payer_phone:
        description: |
          user (payer) phone
        type: string
      payment_method:
        description: |
          payment method identifier in Protocol One payment solution
        type: string
      project:
        description: |
          project unique identifier in Protocol One payment solution
        type: string
      region:
        description: |
          user (payer) region code by ISO 3166-1 (2 chars) for check project packages. If this field not send, then user region will be get from user ip
        type: string
      signature:
        description: |
          signature of request to verify that the data has not been changed. This field not required, BUT we're recommend send this field always
        type: string
      url_fail:
        description: |
          URL for redirect user after failed payment. This field can be send if it allowed in project admin panel
        type: string
      url_notify:
        description: |
          URL for payment notification request to project. This field can be send if it allowed in project admin panel
        type: string
      url_success:
        description: |
          URL for redirect user after successfully completed payment. This field can be send if it allowed in project admin panel
        type: string
      url_verify:
        description: |
          URL for payment data verification request to project. This field can be send if it allowed in project admin panel
        type: string
    required:
      - project
      - amount
    type: object
  model.PayerData:
    properties:
      city:
        $ref: '#/definitions/model.Name'
        description: |
          payer city names, get from ip geo location
        type: object
      country_code_a2:
        description: |
          payer country code by ISO 3166-1 from create order request
        type: string
      country_name:
        $ref: '#/definitions/model.Name'
        description: |
          payer country names
        type: object
      email:
        description: |
          payer email from create order request
        type: string
      ip:
        description: |
          payer ip from create order request
        type: string
      phone:
        description: |
          payer phone from create order request
        type: string
      subdivision:
        description: |
          payer subdivision code by ISO-3166-2
        type: string
      timezone:
        description: |
          payer timezone name, get from ip geo location
        type: string
    type: object
  model.PaymentMethodJsonOrderResponse:
    properties:
      account_regexp:
        description: |
          regexp mask for check main requisite of payment method
        type: string
      group_alias:
        description: |
          payment method group alias
        type: string
      icon:
        description: |
          url to payment method icon
        type: string
      id:
        description: |
          payment method unique identifier
        type: string
      name:
        description: |
          payment method name
        type: string
      type:
        description: |
          payment method type. allowed: bank_card, ewallet, crypto
        type: string
    type: object
  model.PaymentMethodParams:
    properties:
      external_id:
        type: string
      handler:
        type: string
      other:
        type: object
      terminal:
        type: string
    type: object
  model.PaymentSystem:
    properties:
      accounting_currency:
        $ref: '#/definitions/model.Currency'
        type: object
      accounting_period:
        type: string
      country:
        $ref: '#/definitions/model.Country'
        type: object
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
    type: object
  model.Project:
    properties:
      id:
        description: |
          unique project identifier
        type: string
      merchant_id:
        description: project merchant id
        type: string
      image:
        description: url to project logo
        type: string
      callback_currency:
        type: string
        description: currency to send payment notification
      callback_protocol:
        description: |
          protocol identifier to send payment notification. Now available: default, empty
        type: string
      create_invoice_allowed_urls:
        description: |
          list of urls rom which you can send a request to create an order
        items:
          type: string
        type: array
      status:
        description: "project status. now available: 0 - new project; 1 - project successfully complete integration tests; 2 - project fail one or more integration test; 3 - project in production; 4 - project deleted"
        type: integer
      allow_dynamic_notify_urls:
        description: |
          is allow send dynamic notification urls in request to create an order
        type: boolean
      allow_dynamic_redirect_urls:
        description: |
          is allow send dynamic user's redirect urls in request to create an order
        type: boolean
      limits_currency:
        description: currency for amount's limit
        type: string
      max_payment_amount:
        description: |
          maximal amount allowed for create order
        type: number
      min_payment_amount:
        description: |
          minimal amount allowed for create order
        type: number
      name:
        description: "project names map in other language: {\"en\": \"project name\", \"ru\": \"имя проекта\"}"
        type: object
      notify_emails:
        description: |
          list of emails to send notifications about successfully completed payment operations
        items:
          type: string
        type: array
      is_products_checkout:
        description: |
          is allow create order only with amounts from products list
        type: boolean
      secret_key:
        description: |
          secret key for create check hash for request about order statuses changes
        type: string
      send_notify_email:
        description: |
          is allow send notifications about successfully completed payment operations to user's emails
        type: boolean
      url_check_account:
        description: |
          default url to send request for verification payment data to project
        type: string
      url_process_payment:
        description: |
          default url to send request for notification about successfully completed payment to project
        type: string
      url_redirect_fail:
        description: |
          default url to redirect user after failed payment
        type: string
      url_redirect_success:
        description: |
          default url to redirect user after successfully completed payment
        type: string
      products_count:
        description: count of project's products
        type: integer
      created_at:
        description: date of create merchant in system in unix timestamp
        type: object
      updated_at:
        description: date of update merchant in system in unix timestamp
        type: object
    type: object
  model.ProjectJsonOrderResponse:
    properties:
      name:
        description: |
          project name
        type: string
      url_fail:
        description: |
          url to redirect user after failed payment. may be NULL if not set in project settings
        type: string
      url_success:
        description: |
          url to redirect user after successfully completed payment. may be NULL if not set in project settings
        type: string
    type: object
  model.ProjectOrder:
    properties:
      callback_protocol:
        type: string
      id:
        type: string
      merchant:
        $ref: '#/definitions/model.Merchant'
        type: object
      name:
        type: string
      notify_emails:
        items:
          type: string
        type: array
      secret_key:
        type: string
      send_notify_email:
        type: boolean
      url_check_account:
        type: string
      url_fail:
        type: string
      url_process_payment:
        type: string
      url_success:
        type: string
    type: object

  model.RevenueDynamicMainData:
    properties:
      avg:
        type: number
      count:
        type: integer
      total:
        type: number
    type: object
  model.RevenueDynamicPoint:
    properties:
      amount:
        type: number
      date:
        $ref: '#/definitions/model.RevenueDynamicPointDate'
        type: object
    type: object
  model.RevenueDynamicPointDate:
    properties:
      day:
        type: integer
      hour:
        type: integer
      month:
        type: integer
      week:
        type: integer
      year:
        type: integer
    type: object
  model.RevenueDynamicResult:
    properties:
      points:
        items:
          $ref: '#/definitions/model.RevenueDynamicPoint'
        type: array
      refund:
        $ref: '#/definitions/model.RevenueDynamicMainData'
        type: object
      revenue:
        $ref: '#/definitions/model.RevenueDynamicMainData'
        type: object
    type: object
  model.SimpleCurrency:
    properties:
      code_a3:
        description: |
          3 chars ISO 4217 currency code
        type: string
      code_int:
        description: |
          numeric ISO 4217 currency code
        type: integer
      name:
        $ref: '#/definitions/model.Name'
        description: |
          list of currency names
        type: object
    type: object
  model.SimpleItem:
    properties:
      id:
        description: |
          unique identifier of item
        type: string
      name:
        description: |
          item name
        type: string
    type: object
  model.Status:
    properties:
      description:
        description: |
          text description
        type: string
      name:
        description: |
          status name
        type: string
      status:
        description: |
          numeric status code
        type: integer
    type: object
  payment_system.PaymentResponse:
    properties:
      error:
        type: string
      redirect_url:
        type: string
    type: object
  taxes.TaxRate:
    properties:
      id:
        type: string
      country:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      rate:
        type: number
    type: object
    required:
      - country
      - rate

  onboarding.Contacts.Authorized:
    properties:
      name:
        description: person full name
        type: string
      email:
        description: person email
        type: string
      phone:
        description: person contact phone
        type: string
      position:
        description: person position in company
        type: string

  onboarding.Contacts.Technical:
    properties:
      name:
        description: person full name
        type: string
      email:
        description: person email
        type: string
      phone:
        description: person contact phone
        type: string

  onboarding.Contacts:
    properties:
      authorized:
        description: object contain information about merchant authorized person contacts
        $ref: '#/definitions/onboarding.Contacts.Authorized'
      technical:
        description: object contain information about contacts of merchant tecnican
        $ref: '#/definitions/onboarding.Contacts.Technical'

  onboarding.Banking:
    properties:
      currency:
        description: merchant accounting currency in bank
        $ref: '#/definitions/model.Currency'
      name:
        description: bank name
        type: string
      address:
        description: bank address
        type: string
      account_number:
        description: merchant accounting number in bank
        type: string
      swift:
        description: bank SWIFT code
        type: string
      details:
        description: any details abount merchant accounting bank
        type: string

  onboarding.Merchant.LastPayout:
    properties:
      date:
        description: date in unix timestamp when was last payout to merchant
        type: integer
      amount:
        description: last payout amount to merchant
        type: number

  onboarding.Merchant:
    properties:
      id:
        description: merchant unique identifier in system
        type: string
      name:
        description: merchant company name
        type: string
      alternative_name:
        description: merchant company alternative name
        type: string
      website:
        description: merchant website url
        type: string
      country:
        description: merchant company registration country
        $ref: '#/definitions/model.Country'
      state:
        description: merchant company registration state
        type: string
      zip:
        description: merchant company registration zip code
        type: string
      city:
        description: merchant company registration city
        type: string
      address:
        description: merchant company registration address
        type: string
      address_additional:
        description: merchant company registration additional address
        type: string
      registration_number:
        description: merchant company registration number
        type: string
      tax_id:
        description: merchant company tax identifier
        type: string
      contacts:
        description: contain information about contacts of merchant
        $ref: '#/definitions/onboarding.Contacts'
      banking:
        description: contain information about merchan bank
        $ref: '#/definitions/onboarding.Banking'
      status:
        description: merchant status in system
        type: integer
      created_at:
        description: date of create merchant in system in unix timestamp
        type: integer
      updated_at:
        description: date of update merchant in system in unix timestamp
        type: integer
      first_payment_at:
        description: date when was first payment by some merchant project in system in unix timestamp
        type: integer
      last_payout:
        description: contain information about last payout to merchant
        $ref: "#/definitions/onboarding.Merchant.LastPayout"
      is_signed:
        description: agreement between merchant and system fully signed
        type: boolean
      payment_methods:
        description: list of payment methods activated to merchant
        type: object
      agreement_type:
        description: "type of agreement which merchant selected. possible values: 0 - type not select; 1 - paper agreement; 2 - e-sign agreement;"
        type: integer
      agreement_sent_via_mail:
        description: "mark agreement as sent via post"
        type: boolean
      mail_tracking_link:
        description: "link to tracking package with agreement in post"
        type: string

  onboarding.Merchant.Onboarding.Request:
    properties:
      currency:
        description: 3 chars code by ISO 4217 of accounting currency in bank
        type: string
      name:
        description: bank name
        type: string
      address:
        description: bank address
        type: string
      account_number:
        description: merchant accounting number in bank
        type: string
      swift:
        description: bank SWIFT code
        type: string
      details:
        description: any details abount merchant accounting bank
        type: string

  onboarding.Merchant.CreateRequest:
    properties:
      name:
        description: merchant company name
        type: string
      alternative_name:
        description: merchant company alternative name
        type: string
      website:
        description: merchant website url
        type: string
      country:
        description: 2 char code of merchant company registration country by ISO 3166-1
        type: string
      state:
        description: merchant company registration state
        type: string
      zip:
        description: merchant company registration zip code
        type: string
      city:
        description: merchant company registration city
        type: string
      address:
        description: merchant company registration address
        type: string
      address_additional:
        description: merchant company registration additional address
        type: string
      registration_number:
        description: merchant company registration number
        type: string
      tax_id:
        description: merchant company tax identifier
        type: string
      contacts:
        description: contain information about contacts of merchant
        $ref: '#/definitions/onboarding.Contacts'
      banking:
        description: contain information about merchan bank
        $ref: "#/definitions/onboarding.Merchant.Onboarding.Request"
    required:
      - name
      - contacts
      - banking

  onboarding.Merchant.UpdateRequest:
    properties:
      id:
        description: merchant unique identifier in system
        type: string
      name:
        description: merchant company name
        type: string
      alternative_name:
        description: merchant company alternative name
        type: string
      website:
        description: merchant website url
        type: string
      country:
        description: 2 char code of merchant company registration country by ISO 3166-1
        type: string
      state:
        description: merchant company registration state
        type: string
      zip:
        description: merchant company registration zip code
        type: string
      city:
        description: merchant company registration city
        type: string
      address:
        description: merchant company registration address
        type: string
      address_additional:
        description: merchant company registration additional address
        type: string
      registration_number:
        description: merchant company registration number
        type: string
      tax_id:
        description: merchant company tax identifier
        type: string
      contacts:
        description: contain information about contacts of merchant
        $ref: '#/definitions/onboarding.Contacts'
      banking:
        description: contain information about merchan bank
        $ref: "#/definitions/onboarding.Merchant.Onboarding.Request"
    required:
      - id
      - name
      - contacts
      - banking

  onboarding.Merchant.ChangeStatus:
    properties:
      status:
        description: new status identifier of merchant
        type: integer
      message:
        description: string description to new status
        type: string
    required:
      - status

  onboarding.Merchant.Notification.Statuses:
    properties:
      from:
        description: status before changes
        type: integer
      to:
        description: status after changes
        type: integer

  onboarding.Merchant.Notification:
    properties:
      id:
        description: notification unique identifier in system
        type: string
      title:
        description: notification title
        type: string
      message:
        description: notification message
        type: string
      merchant_id:
        description: merchant identifier who must recieve notification
        type: string
      user_id:
        description: user identifier who send notification
        type: string
      is_system:
        description: notification generated automaticaly
        type: boolean
      is_read:
        description: receiver read notification
        type: boolean
      statuses:
        description: statuses "from -> to" for system notification. for not system notification this field will be equal NULL
        $ref: '#/definitions/onboarding.Merchant.Notification.Statuses'
      created_at:
        description: dete of create notification in unix timestamp format
        type: integer
      updated_at:
        description: dete of last update notification in unix timestamp format
        type: integer

  onboarding.Merchant.Notifications:
    properties:
      count:
        description: total number of filtered notifications
        type: integer
      items:
        description: list of filtered notifications
        $ref: '#/definitions/onboarding.Merchant.Notification'

  onboarding.Merchant.Notification.CreateRequest:
    properties:
      title:
        description: notification title
        type: string
      message:
        description: notification message
        type: string
    required:
      - title
      - message

  onboarding.Merchant.PaymentMethod.Identification:
    properties:
      id:
        description: payment method unique identifier
        type: string
      name:
        description: payment method name
        type: string
    required:
      - id
      - name

  onboarding.Merchant.PaymentMethod.Commissions.PerTransaction:
    properties:
      fee:
        description: Amount of commission per transaction
        type: number
      currency:
        description: 3 chars code by ISO 4217 of currency of amount of commission per transaction
        type: string
    required:
      - fee
      - currency

  onboarding.Merchant.PaymentMethod.Commissions:
    properties:
      fee:
        description: Value of fee in percents by transaction from merchant projects
        type: number
      per_transaction:
        description: contain information about commission per transaction from merchant projects
        $ref: '#/definitions/onboarding.Merchant.PaymentMethod.Commissions.PerTransaction'
        type: object
    required:
      - fee
      - per_transaction

  onboarding.Merchant.PaymentMethod.Integration:
    properties:
      terminal_id:
        description: "payment method terminal login for authorisation"
        type: string
      terminal_password:
        description: "payment method terminal password for authorisation"
        type: string
      terminal_callback_password:
        description: "payment method terminal callback password for check control hash"
        type: string
      integrated:
        description: "if integration has login and password"
        type: boolean
    required:
      - terminal_id
      - terminal_password
      - terminal_callback_password

  onboarding.Merchant.PaymentMethod:
    properties:
      payment_method:
        $ref: '#/definitions/onboarding.Merchant.PaymentMethod.Identification'
        type: object
      commission:
        $ref: '#/definitions/onboarding.Merchant.PaymentMethod.Commissions'
        type: object
      integration:
        $ref: '#/definitions/onboarding.Merchant.PaymentMethod.Integration'
      is_active:
        description: "flag to activate/deactivate payment method for merchant"
        type: boolean
    required:
      - payment_method
      - commission
      - integration
      - is_active

  order.Refund:
    properties:
      id:
        description: "refund unique identifier"
        type: string
      order_id:
        description: "order unique identifier for which the refund was created"
        type: string
      external_id:
        description: "refund unique identifier on payment system side"
        type: string
      amount:
        description: "refund amount"
        type: number
      creator_id:
        description: "user identifier who created refund"
        type: string
      reason:
        description: "reason to refund"
        type: string
      currency:
        description: "refund currency"
        type: string
      status:
        description: "refund status. available statuses: 0 - refund was created; 1 - refund rejected on payment system side; 2 - refund in processing on payment system side; 3 - refund successfully completed;"
        type: integer
      created_at:
        description: dete of create notification in unix timestamp format
        type: integer
      updated_at:
        description: dete of last update notification in unix timestamp format
        type: integer

  order.Refund.CreateRequest:
    properties:
      amount:
        description: "refund amount"
        type: number
      reason:
        description: "reason to refund"
        type: string
    required:
      - amount

  onboarding.Merchant.ChangeAgreementDataRequest:
    properties:
      agreement_type:
        description: "merchant agreement type. allowed values: 1 - paper agreement; 2 - e-sign agreement;"
      has_psp_signature:
        description: "flag for set peysuper signature on the agreement"
        type: boolean
      has_merchant_signature:
        description: "flag for set merchant signature on the agreement"
        type: boolean
      agreement_sent_via_mail:
        description: "mark agreement as sent via email"
        type: boolean
      mail_tracking_link:
        description: "tracking link to mail"
        type: string

  onboarding.Merchant.PrintableAgreementData.Metadata:
    properties:
      name:
        description: agreement file name
        type: string
      extension:
        description: agreement file extension
        type: string
      content_type:
        description: agreement file content type
        type: string
      size:
        description: agreement file size in Kb
        type: integer
    required:
      - name
      - extension
      - content_type
      - size

  onboarding.Merchant.PrintableAgreementData.Response:
    properties:
      url:
        description: link to download printable agreement
        type: string
      metadata:
        description: agreement file metadata
        $ref: '#/definitions/onboarding.Merchant.PrintableAgreementData.Metadata'

  onboarding.Merchant.ChangeAgreementType.Request:
    properties:
      agreement_type:
        description: "type of agreement which merchant selected. possible values: 1 - paper agreement; 2 - e-sign agreement;"
        type: integer
    required:
      - agreement_type

  projects.CreateRequest:
    properties:
      merchant_id:
        description: project merchant id
        type: string
      image:
        description: url to project logo
        type: string
      callback_currency:
        type: string
        description: currency to send payment notification
      callback_protocol:
        description: "protocol identifier to send payment notification. Now available: default, empty"
        type: string
      create_invoice_allowed_urls:
        description: list of urls rom which you can send a request to create an order
        items:
          type: string
        type: array
      allow_dynamic_notify_urls:
        description: is allow send dynamic notification urls in request to create an order
        type: boolean
      allow_dynamic_redirect_urls:
        description: is allow send dynamic user's redirect urls in request to create an order
        type: boolean
      limits_currency:
        description: currency for amount's limit
        type: string
      max_payment_amount:
        description: maximal amount allowed for create order
        type: number
      min_payment_amount:
        description: minimal amount allowed for create order
        type: number
      name:
        description: "project names map in other language: {\"en\": \"project name\", \"ru\": \"имя проекта\"}"
        type: object
      notify_emails:
        description: list of emails to send notifications about successfully completed payment operations
        items:
          type: string
        type: array
      is_products_checkout:
        description: is allow create order only with amounts from products list
        type: boolean
      secret_key:
        description: secret key for create check hash for request about order statuses changes
        type: string
      send_notify_email:
        description: is allow send notifications about successfully completed payment operations to user's emails
        type: boolean
      url_check_account:
        description: default url to send request for verification payment data to project
        type: string
      url_process_payment:
        description: |
          default url to send request for notification about successfully completed payment to project
        type: string
      url_redirect_fail:
        description: default url to redirect user after failed payment
        type: string
      url_redirect_success:
        description: default url to redirect user after successfully completed payment
        type: string

  order.BillingAddress:
    properties:
      country:
        description: 2 chars country code in upper registry by ISO 3166-1
        type: string
      city:
        description: city name
        type: string
      postal_code:
        description: zip code
        type: string
      state:
        description: state code by ISO 3166-2
        type: string

  token.TokenRequest.ValueVerified:
    properties:
      value:
        description: parameter value
        type: string
      verified:
        description: "is parameter was verified in project side. for example: user verify email"
        type: boolean
    required:
      - value

  token.TokenRequest.Value:
    properties:
      value:
        description: parameter value
        type: string
    required:
      - value

  token.TokenRequest.User:
    properties:
      id:
        description: user identifier in project
        type: string
      email:
        description: object which contain information about user email
        $ref: '#/definitions/token.TokenRequest.ValueVerified'
      phone:
        description: object which contain information about user phone
        $ref: '#/definitions/token.TokenRequest.ValueVerified'
      name:
        description: object which contain information about user real name
        $ref: '#/definitions/token.TokenRequest.Value'
      ip:
        description: object which contain information about user ip
        $ref: '#/definitions/token.TokenRequest.Value'
      locale:
        description: object which contain information about user locale. value in this object must contain 2 characters language code in lower registry by ISO 639-1
        $ref: '#/definitions/token.TokenRequest.Value'
      address:
        description: object which contain information about user address
        $ref: '#/definitions/order.BillingAddress'
      metadata:
        description: object can contain any other information about user. object must contain only string values.
        type: object

  token.TokenRequest.Settings.ReturnUrl:
    properties:
      success:
        description: url to redirect user after payment was successfully completed
        type: string
      fail:
        description: url to redirect user after payment failed
        type: string

  token.TokenRequest.Settings.Item:
    properties:
      sku:
        description: sku identifier
        type: string
      amount:
        description: item price
        type: number
      currency:
        description: item price currency. 3 characters currency code in upper registry by ISO 4217
        type: string
    required:
      - sku
      - amount
      - currency

  token.TokenRequest.Settings:
    properties:
      project_id:
        description: project identifier
        type: string
      return_url:
        description: object contain urls for redirect user after payment ended
        $ref: '#/definitions/token.TokenRequest.Settings.ReturnUrl'
      currency:
        description: 3 characters currency code in upper registry by ISO 4217
        type: string
      amount:
        description: payment amount. this field is required if project use simple checkout payment to process payments.
        type: number
      payment_method:
        description: predefined payment method identifier
        type: string
      items:
        description: object contain information about items which user want to buy. this field is required if project not use simple checkout payment to process payments.
        type: array
        items:
          $ref: '#/definitions/token.TokenRequest.Settings.Item'
      description:
        description: payment description
        type: string
      metadata:
        description: object can contain any other information about payment. object must contain only string values. this object will return in project notification about payment.
        type: object
    required:
      - project_id

  token.TokenRequest:
    properties:
      user:
        description: object which contain any information about payer
        $ref: '#/definitions/token.TokenRequest.User'
      settings:
        description: object which contain information to process payment
        $ref: '#/definitions/token.TokenRequest.Settings'
    required:
      - user
      - settings

  token.TokenResponse:
    properties:
      token:
        description: payment token
        type: string
    required:
      - token

host: p1payapi.tst.protocol.one
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a Protocol One payment solution service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Protocol One payment solution swagger documentation
  version: "1.0"

securityDefinitions:
  XAPISignatureHeader:
    type: apiKey
    in: header
    name: X-API-SIGNATURE
    description: must contain sha512 hash of concationation request body and project secret key

paths:
  /api/v1/country:
    get:
      consumes:
        - application/json
      description: Get full list of currencies or get list of currencies filtered
        by name
      parameters:
        - description: name or symbolic ISO 3166-1 code of country
          in: query
          name: name
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Country'
            type: array
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get list of countries
      tags:
        - Country
  /api/v1/country/{id}:
    get:
      consumes:
        - application/json
      description: Get country object by numeric ISO 3166-1 code
      parameters:
        - description: numeric ISO 3166-1 country code
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Country'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get country by numeric ISO 3166-1 code
      tags:
        - Country
  /api/v1/currency:
    get:
      consumes:
        - application/json
      description: Get full list of currencies or get list of currencies filtered
        by name
      parameters:
        - description: name or symbolic ISO 4217 code of currency
          in: query
          name: name
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Currency'
            type: array
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get list of currencies
      tags:
        - Currency
  /api/v1/currency/{id}:
    get:
      consumes:
        - application/json
      description: Get currency object by numeric ISO 4217 code
      parameters:
        - description: numeric ISO 4217 currency code
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Currency'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get currency by numeric ISO 4217 code
      tags:
        - Currency
  /api/v1/order:
    post:
      consumes:
        - application/json
      description: Create a payment order use POST JSON request
      parameters:
        - description: Order create data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/model.OrderScalar'
      produces:
        - application/json
      responses:
        "200":
          description: Object which contain data to render payment form
          schema:
            $ref: '#/definitions/model.JsonOrderCreateResponse'
        "400":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
      summary: Create order with json request
      tags:
        - Payment Order
  /api/v1/payment:
    post:
      consumes:
        - application/json
      description: Create payment by order
      parameters:
        - description: data to create payment
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/model.OrderCreatePaymentRequest'
      produces:
        - application/json
      responses:
        "200":
          description: contain url to redirect user
          schema:
            $ref: '#/definitions/payment_system.PaymentResponse'
        "400":
          description: contain error description about data validation error
          schema:
            $ref: '#/definitions/payment_system.PaymentResponse'
        "402":
          description: contain error description about error on payment system side
          schema:
            $ref: '#/definitions/payment_system.PaymentResponse'
        "500":
          description: contain error description about error on PSP (P1) side
          schema:
            $ref: '#/definitions/payment_system.PaymentResponse'
      summary: Create payment
      tags:
        - Payment Order
  /api/v1/s/merchant:
    delete:
      consumes:
        - application/json
      description: Mark merchant as deleted
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Delete merchant
      tags:
        - Merchant
    post:
      consumes:
        - application/json
      description: Create new merchant
      parameters:
        - description: Creating merchant data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/model.MerchantScalar'
            type: object
      produces:
        - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Create merchant
      tags:
        - Merchant
    put:
      consumes:
        - application/json
      description: Update merchant data
      parameters:
        - description: Merchant object with new data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/model.MerchantScalar'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Update merchant
      tags:
        - Merchant
  /api/v1/s/merchant/{id}:
    get:
      consumes:
        - application/json
      description: Get full data about merchant
      produces:
        - application/json
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get merchant
      tags:
        - Merchant
  /api/v1/s/order:
    get:
      consumes:
        - application/json
      description: Get orders list
      parameters:
        - description: order unique identifier
          in: query
          name: id
          type: string
        - description: query array of list of projects to get orders filtered by they
          in: query
          name: project[]
          type: string
        - description: query array of list of payment methods to get orders filtered by they
          in: query
          name: payment_method[]
          type: string
        - description: query array of list of payer countries to get orders filtered by they
          in: query
          name: country[]
          type: string
        - description: query array of list of orders statuses to get orders filtered by they
          in: query
          name: status[]
          type: integer
        - description: payer account on the any side of payment process. for example
            it may be account in project, account in payment system, payer email and
            etc
          in: query
          name: account
          type: string
        - description: start date when payment was closed to get orders filtered by
            they
          in: query
          name: pm_date_from
          type: integer
        - description: end date when payment was closed to get orders filtered by they
          in: query
          name: pm_date_to
          type: integer
        - description: start date when payment was created to get orders filtered by
            they
          in: query
          name: project_date_from
          type: integer
        - description: end date when payment was closed in project to get orders filtered
            by they
          in: query
          name: project_date_to
          type: integer
        - description: maximum number of returning orders. default value is 100
          in: query
          name: limit
          type: integer
        - description: offset from which you want to return the list of orders. default
            value is 0
          in: query
          name: offset
          type: integer
        - description: query array of fields list for sorting
          in: query
          name: sort[]
          type: string
        - description: multiple field search string - order unique identifier, user external identifier,
            project order identifier, project name, payment method name
          in: query
          name: quick_search
          type: string
        - description: query array of merchant identifier list
          in: query
          name: merchant
          type: string[]
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrderPaginate'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get orders
      tags:
        - Order
  /api/v1/s/order/{id}:
    get:
      consumes:
        - application/json
      description: Get full object with order data
      parameters:
        - description: Order unique identifier
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get order data
      tags:
        - Order
  /api/v1/s/order/accounting_payment:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: accounting payment by accounting period of merchant
      parameters:
        - description: period start in unix timestamp
          in: query
          name: from
          required: true
          type: integer
        - description: period end in unix timestamp
          in: query
          name: to
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AccountingPayment'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get accounting payment amounts by accounting period of merchant
      tags:
        - Payment Order
  /api/v1/s/order/revenue_dynamic/{period}:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get revenue dynamics by merchant or project
      parameters:
        - description: 'period to group revenue dynamics data. now allowed next values:
          hour, day, week, month, year'
          in: path
          name: period
          required: true
          type: string
        - description: period start in unix timestamp
          in: query
          name: from
          required: true
          type: integer
        - description: period end in unix timestamp
          in: query
          name: to
          required: true
          type: integer
        - description: query array of list of projects to calculate dynamics of revenue
          in: query
          name: project[]
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RevenueDynamicResult'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get revenue dynamics
      tags:
        - Payment Order
  /admin/api/v1/projects:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of project for authenticated merchant
      produces:
        - application/json
      parameters:
        - description: merchant identifier
          in: query
          name: merchant_id
          type: string
        - description: string to quick search by project name
          in: query
          name: quick_search
          type: string
        - description: array of project statuses
          in: query
          name: status
          type: array
          items:
            type: integer
        - description: fields list for sorting
          in: query
          name: sort
          type: array
          items:
            type: string
        - description: maximum number of returning records. default value is 100
          in: query
          name: limit
          type: integer
        - description: offset from which you want to return the list of records. default value is 0
          in: query
          name: offset
          type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: List projects
      tags:
        - Project
    post:
      consumes:
        - application/json
      description: Create new project for authenticated merchant
      parameters:
        - description: Creating project data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/projects.CreateRequest'
            type: object
      produces:
        - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Create project
      tags:
        - Project
  /admin/api/v1/projects/{id}:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete project for authenticated merchant
      parameters:
        - description: Project identifier
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Delete project
      tags:
        - Project
    get:
      consumes:
        - application/json
      description: '"Get data about project"'
      parameters:
        - description: Project identifier
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get project
      tags:
        - Project
    patch:
      consumes:
        - application/json
      description: Update project for authenticated merchant
      parameters:
        - description: Project object with new data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/model.Project'
            type: object
        - description: Project identifier
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Update project
      tags:
        - Project
  /order/create:
    get:
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      description: Create a payment order use GET or POST HTML form
      parameters:
        - description: Project unique identifier in Protocol One payment solution
          in: query
          name: PP_PROJECT_ID
          required: true
          type: string
        - description: Order amount
          in: query
          name: PP_AMOUNT
          required: true
          type: number
        - description: User unique account in project
          in: query
          name: PP_ACCOUNT
          required: true
          type: string
        - description: Unique order identifier in project. This field not required,
            BUT we're recommend send this field always
          in: query
          name: PP_ORDER_ID
          type: string
        - description: Payment method identifier in Protocol One payment solution
          in: query
          name: PP_PAYMENT_METHOD
          type: string
        - description: Order description. If this field not send in request, then we're
            create standard order description
          in: query
          name: PP_DESCRIPTION
          type: string
        - description: Order currency by ISO 4217 (3 chars). If this field send, then
            we're process amount in this currency
          in: query
          name: PP_CURRENCY
          type: string
        - description: User (payer) region code by ISO 3166-1 (2 chars) for check project
            packages. If this field not send, then user region will be get from user
            ip
          in: query
          name: PP_REGION
          type: string
        - description: User (payer) email
          in: query
          name: PP_PAYER_EMAIL
          type: string
        - description: User (payer) phone
          in: query
          name: PP_PAYER_PHONE
          type: string
        - description: URL for payment data verification request to project. This field
            can be send if it allowed in project admin panel
          in: query
          name: PP_URL_VERIFY
          type: string
        - description: URL for payment notification request to project. This field can
            be send if it allowed in project admin panel
          in: query
          name: PP_URL_NOTIFY
          type: string
        - description: URL for redirect user after successfully completed payment. This
            field can be send if it allowed in project admin panel
          in: query
          name: PP_URL_SUCCESS
          type: string
        - description: URL for redirect user after failed payment. This field can be
            send if it allowed in project admin panel
          in: query
          name: PP_URL_FAIL
          type: string
        - description: Signature of request to verify that the data has not been changed.
            This field not required, BUT we're recommend send this field always
          in: query
          name: PP_SIGNATURE
          type: string
        - description: Any fields on the project side that do not match the names of
            the reserved fields
          in: query
          name: Other
          type: string
      produces:
        - text/html
      responses:
        "302":
          description: Redirect user to form entering payment requisites
          schema:
            type: string
        "400":
          description: Redirect user to page with error description
          schema:
            type: string
        "500":
          description: Redirect user to page with error description
          schema:
            type: string
      summary: Create order with HTML form
      tags:
        - Payment Order
    post:
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      description: Create a payment order use GET or POST HTML form
      parameters:
        - description: Project unique identifier in Protocol One payment solution
          in: query
          name: PP_PROJECT_ID
          required: true
          type: string
        - description: Order amount
          in: query
          name: PP_AMOUNT
          required: true
          type: number
        - description: User unique account in project
          in: query
          name: PP_ACCOUNT
          required: true
          type: string
        - description: Unique order identifier in project. This field not required,
            BUT we're recommend send this field always
          in: query
          name: PP_ORDER_ID
          type: string
        - description: Payment method identifier in Protocol One payment solution
          in: query
          name: PP_PAYMENT_METHOD
          type: string
        - description: Order description. If this field not send in request, then we're
            create standard order description
          in: query
          name: PP_DESCRIPTION
          type: string
        - description: Order currency by ISO 4217 (3 chars). If this field send, then
            we're process amount in this currency
          in: query
          name: PP_CURRENCY
          type: string
        - description: User (payer) region code by ISO 3166-1 (2 chars) for check project
            packages. If this field not send, then user region will be get from user
            ip
          in: query
          name: PP_REGION
          type: string
        - description: User (payer) email
          in: query
          name: PP_PAYER_EMAIL
          type: string
        - description: User (payer) phone
          in: query
          name: PP_PAYER_PHONE
          type: string
        - description: URL for payment data verification request to project. This field
            can be send if it allowed in project admin panel
          in: query
          name: PP_URL_VERIFY
          type: string
        - description: URL for payment notification request to project. This field can
            be send if it allowed in project admin panel
          in: query
          name: PP_URL_NOTIFY
          type: string
        - description: URL for redirect user after successfully completed payment. This
            field can be send if it allowed in project admin panel
          in: query
          name: PP_URL_SUCCESS
          type: string
        - description: URL for redirect user after failed payment. This field can be
            send if it allowed in project admin panel
          in: query
          name: PP_URL_FAIL
          type: string
        - description: Signature of request to verify that the data has not been changed.
            This field not required, BUT we're recommend send this field always
          in: query
          name: PP_SIGNATURE
          type: string
        - description: Any fields on the project side that do not match the names of
            the reserved fields
          in: query
          name: Other
          type: string
      produces:
        - text/html
      responses:
        "302":
          description: Redirect user to form entering payment requisites
          schema:
            type: string
        "400":
          description: Redirect user to page with error description
          schema:
            type: string
        "500":
          description: Redirect user to page with error description
          schema:
            type: string
      summary: Create order with HTML form
      tags:
        - Payment Order

  "/admin/api/v1/merchants":
    get:
      summary: Get list of merchants
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get list of merchants
      parameters:
        - description: string to quick search by merchant name or user owner email
          in: query
          name: quick_search
          type: string
        - description: merchant name
          in: query
          name: name
          type: string
        - description: query parameter to return merchants with full signed agreement
          in: query
          name: is_signed
          type: boolean
        - description: start date to filter merchants by last payout date. parameter format must be a unix timestamp
          in: query
          name: last_payout_date_from
          type: integer
        - description: end date to filter merchants by last payout date. parameter format must be a unix timestamp
          in: query
          name: last_payout_date_to
          type: integer
        - description: last payout amount
          in: query
          name: last_payout_amount
          type: integer
        - description: array of merchant statuses
          in: query
          name: status
          type: array
          items:
            type: integer
        - description: maximum number of returning orders. default value is 100
          in: query
          name: limit
          type: integer
        - description: offset from which you want to return the list of orders. default value is 0
          in: query
          name: offset
          type: integer
        - description: fields list for sorting
          in: query
          name: sort[]
          type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/onboarding.Merchant'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create new merchant in system
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Merchant data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.Merchant.CreateRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/onboarding.Merchant'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    put:
      summary: Update merchant data in system
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Merchant data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.Merchant.UpdateRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/onboarding.Merchant'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}":
    get:
      summary: Get merchant by identifier
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get list of merchants
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    patch:
      summary: Change merchant information
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Change merchant agreement information
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
        - description: data for change
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Merchant.ChangeAgreementDataRequest'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/user":
    get:
      summary: Get user merchant
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get user merchant
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/change-status":
    put:
      summary: Change merchant status
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Change merchant status
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
        - description: Data required to change status
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.Merchant.ChangeStatus'
            type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{merchant_id}/notifications":
    get:
      summary: Get list of notifications to merchant
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get list of notifications to merchant
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: user who sent notification
          in: query
          name: user
          type: string
        - description: "flag to filter return notification: 0 - return only notification; 1 - return only history"
          in: query
          name: is_system
          type: integer
        - description: limit of returning records
          in: query
          name: limit
          type: integer
        - description: offset of returning records
          in: query
          name: offset
          type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/onboarding.Merchant.Notifications'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create new notification
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Create new notification
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: Notification data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.Merchant.Notification.CreateRequest'
            type: object
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.Notification'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{merchant_id}/notifications/{notification_id}":
    get:
      summary: Get notification by identifier
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get notification by identifier
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: notification identifier
          in: path
          name: notification_id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.Notification'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{merchant_id}/notifications/{notification_id}/mark-as-read":
    put:
      summary: Mark notification as readed
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Mark notification as readed
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: notification identifier
          in: path
          name: notification_id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.Notification'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{merchant_id}/methods":
    get:
      summary: List merchant payment methods
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: List merchant payment methods
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: characters to filter merchant payment methods by names
          in: query
          name: payment_method_name
          type: string
          required: false
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/onboarding.Merchant.PaymentMethod'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{merchant_id}/methods/{method_id}":
    get:
      summary: Get parameters of payment method for merchant
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get parameters of payment method for merchant
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: payment method identifier
          in: path
          name: method_id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.PaymentMethod'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    put:
      summary: Change parameters of payment method for merchant
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Change parameters of payment method for merchant
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: payment method identifier
          in: path
          name: method_id
          type: string
          required: true
        - description: payment method parameters
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Merchant.PaymentMethod'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.PaymentMethod'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/agreement-type":
    patch:
      summary: Set merchant agreement type
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Set merchant agreement type
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
        - description: data to change agreement type
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Merchant.ChangeAgreementType.Request'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/taxes":
    get:
      summary: List all available tax rates in the system
      tags:
        - Tax
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: List all available tax rates in the system
      parameters:
        - description: country to filter response
          in: query
          name: country
          type: string
        - description: city to filter response
          in: query
          name: city
          type: string
        - description: state to filter response
          in: query
          name: state
          type: string
        - description: zip to filter response
          in: query
          name: zip
          type: string
        - description: maximum number of returning orders. default value is 100
          in: query
          name: limit
          type: integer
        - description: offset from which you want to return the list of orders. default value is 0
          in: query
          name: offset
          type: integer
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: object
              $ref: '#/definitions/taxes.TaxRate'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Upsert tax rate data.
      tags:
        - Tax
      consumes:
        - application/json
      produces:
        - application/json
      description: Create or update tax rate data.
      parameters:
        - description: Object to upsert
          in: body
          name: data
          schema:
            $ref: '#/definitions/taxes.TaxRate'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/taxes.TaxRate'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
  "/admin/api/v1/taxes/{id}":
    delete:
      summary: Delete tax rate object
      description: Mark tax rate object as deleted
      tags:
        - Tax
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: tax rate object id
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/order/{order_id}/refunds":
    get:
      summary: Get list of refunds to order
      tags:
        - Order
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get list of refunds to order
      parameters:
        - description: order identifier
          in: path
          name: order_id
          type: string
          required: true
        - description: count of records to need to return
          in: query
          name: limit
          type: string
          required: true
        - description: number of record which must be first in listing
          in: query
          name: offset
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/order.Refund'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create new refund to order
      tags:
        - Order
      consumes:
        - application/json
      produces:
        - application/json
      description: Create new refund to order
      parameters:
        - description: order identifier
          in: path
          name: order_id
          type: string
          required: true
        - description: refund data
          in: body
          name: data
          schema:
            $ref: '#/definitions/order.Refund.CreateRequest'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.Refund'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/order/{order_id}/refunds/{refund_id}":
    get:
      summary: Get refund data
      tags:
        - Order
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get refund data
      parameters:
        - description: order identifier
          in: path
          name: order_id
          type: string
          required: true
        - description: refund identifier
          in: path
          name: refund_id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.Refund'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/agreement":
    get:
      summary: Generate agreement
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Generate agreement for merchant and return data about printable agreement
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.PrintableAgreementData.Response'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/agreement/document":
    get:
      summary: Download merchant agreement
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/pdf
      description: Download merchant agreement
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Upload merchant agreement
      tags:
        - Onboarding
      consumes:
        - multipart/form-data
      produces:
        - application/json
      description: Upload new version of merchant agreement
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.PrintableAgreementData.Response'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/api/v1/tokens":
    post:
      security:
        - XAPISignatureHeader: []
      summary: Create token
      tags:
        - Token
      consumes:
        - application/json
      produces:
        - application/json
      description: Create token for process payment token create
      parameters:
        - description: Data to process payment
          in: body
          name: data
          schema:
            $ref: '#/definitions/token.TokenRequest'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/token.TokenResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'